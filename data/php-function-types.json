{
    "Exception::getMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Exception::getPrevious": {
        "args": [],
        "returnTypes": [
            "Throwable",
            "null"
        ]
    },
    "Exception::getCode": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Exception::getFile": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Exception::getLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Exception::getTrace": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Exception::getTraceAsString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Exception::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Exception::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ErrorException::getSeverity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Error::getMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Error::getPrevious": {
        "args": [],
        "returnTypes": [
            "Throwable",
            "null"
        ]
    },
    "Error::getCode": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Error::getFile": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Error::getLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Error::getTrace": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Error::getTraceAsString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Error::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Error::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Iterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Iterator::key": {
        "args": [],
        "returnTypes": [
            "scalar",
            "null"
        ]
    },
    "Iterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Iterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Iterator::valid": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IteratorAggregate::getIterator": {
        "args": [],
        "returnTypes": [
            "Traversable"
        ]
    },
    "Throwable::getMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Throwable::getCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Throwable::getFile": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Throwable::getLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Throwable::getTrace": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Throwable::getTraceAsString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Throwable::getPrevious": {
        "args": [],
        "returnTypes": [
            "Throwable"
        ]
    },
    "Throwable::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ArrayAccess::offsetExists": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ArrayAccess::offsetGet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ArrayAccess::offsetSet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayAccess::offsetUnset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Serializable::serialize": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "Serializable::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Closure::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Closure::bind": {
        "args": [
            {
                "name": "$closure",
                "optionalDepth": 0,
                "type": "Closure"
            },
            {
                "name": "$newthis",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "defaultValue": "static",
                "name": "$newscope",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Closure",
            "false"
        ]
    },
    "Closure::bindTo": {
        "args": [
            {
                "name": "$newthis",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "defaultValue": "static",
                "name": "$newscope",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Closure",
            "false"
        ]
    },
    "Closure::call": {
        "args": [
            {
                "name": "$newthis",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Closure::fromCallable": {
        "args": [
            {
                "name": "$callable",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Closure"
        ]
    },
    "Generator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Generator::getReturn": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Generator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Generator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Generator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Generator::send": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Generator::throw": {
        "args": [
            {
                "name": "$exception",
                "optionalDepth": 0,
                "type": "Throwable"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Generator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Generator::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "apc_add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "apc_bin_dump": {
        "args": [
            {
                "defaultValue": null,
                "name": "$files",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$user_vars",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "apc_bin_dumpfile": {
        "args": [
            {
                "name": "$files",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$user_vars",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "apc_bin_load": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "apc_bin_loadfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "apc_cache_info": {
        "args": [
            {
                "defaultValue": "",
                "name": "$cache_type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$limited",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "apc_cas": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$old",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$new",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apc_clear_cache": {
        "args": [
            {
                "defaultValue": "",
                "name": "$cache_type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "apc_compile_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$atomic",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "apc_dec": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$step",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "apc_define_constants": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$constants",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$case_sensitive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apc_delete_file": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "apc_delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "apc_exists": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "apc_fetch": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$success",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "apc_inc": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$step",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "apc_load_constants": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$case_sensitive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apc_sma_info": {
        "args": [
            {
                "defaultValue": false,
                "name": "$limited",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "apc_store": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "APCIterator::__construct": {
        "args": [
            {
                "name": "$cache",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$search",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$format",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 100,
                "name": "$chunk_size",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$list",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "APCIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "APCIterator::getTotalCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "APCIterator::getTotalHits": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "APCIterator::getTotalSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "APCIterator::key": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "APCIterator::next": {
        "args": [],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "APCIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "APCIterator::valid": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "apcu_add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "apcu_cache_info": {
        "args": [
            {
                "defaultValue": false,
                "name": "$limited",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "apcu_cas": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$old",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$new",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apcu_clear_cache": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "apcu_dec": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$step",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "apcu_delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apcu_entry": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$generator",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "apcu_exists": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "apcu_fetch": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$success",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "apcu_inc": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$step",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "apcu_sma_info": {
        "args": [
            {
                "defaultValue": false,
                "name": "$limited",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "apcu_store": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "APCUIterator::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$search",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$format",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 100,
                "name": "$chunk_size",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$list",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "APCUIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "APCUIterator::getTotalCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "APCUIterator::getTotalHits": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "APCUIterator::getTotalSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "APCUIterator::key": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "APCUIterator::next": {
        "args": [],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "APCUIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "APCUIterator::valid": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "apd_breakpoint": {
        "args": [
            {
                "name": "$debug_level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apd_callstack": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apd_clunk": {
        "args": [
            {
                "name": "$warning",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "<BR />",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "apd_continue": {
        "args": [
            {
                "name": "$debug_level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apd_croak": {
        "args": [
            {
                "name": "$warning",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "<BR />",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "apd_dump_function_table": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "apd_dump_persistent_resources": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apd_dump_regular_resources": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apd_echo": {
        "args": [
            {
                "name": "$output",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apd_get_active_symbols": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apd_set_pprof_trace": {
        "args": [
            {
                "name": "$dump_directory",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "pprof",
                "name": "$fragment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "apd_set_session_trace_socket": {
        "args": [
            {
                "name": "$tcp_server",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$socket_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$debug_level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apd_set_session_trace": {
        "args": [
            {
                "name": "$debug_level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dump_directory",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "apd_set_session": {
        "args": [
            {
                "name": "$debug_level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "override_function": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function_args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function_code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rename_function": {
        "args": [
            {
                "name": "$original_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_load_exe": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_load": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_parse_class": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_read": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_class": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$className",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extends",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_constant": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$constantName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_exe_footer": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$startpos",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_file": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_footer": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_function": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$functionName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_functions_from_file": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fileName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_header": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$write_ver",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bcompiler_write_included_filename": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "blenc_encrypt": {
        "args": [
            {
                "name": "$plaintext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encodedfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encryption_key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Componere\\Abstract\\Definition::addInterface": {
        "args": [
            {
                "name": "$interface",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Definition"
        ]
    },
    "Componere\\Abstract\\Definition::addMethod": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "\\Componere\\Method"
            }
        ],
        "returnTypes": [
            "Definition"
        ]
    },
    "Componere\\Abstract\\Definition::addTrait": {
        "args": [
            {
                "name": "$trait",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Definition"
        ]
    },
    "Componere\\Abstract\\Definition::getReflector": {
        "args": [],
        "returnTypes": [
            "\\ReflectionClass"
        ]
    },
    "Componere\\Definition::addConstant": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "\\Componere\\Value"
            }
        ],
        "returnTypes": [
            "Definition"
        ]
    },
    "Componere\\Definition::addProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "\\Componere\\Value"
            }
        ],
        "returnTypes": [
            "Definition"
        ]
    },
    "Componere\\Definition::register": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Componere\\Definition::isRegistered": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\Definition::getClosure": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "\\Closure"
        ]
    },
    "Componere\\Definition::getClosures": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Componere\\Patch::apply": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Componere\\Patch::revert": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Componere\\Patch::isApplied": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\Patch::derive": {
        "args": [
            {
                "name": "$instance",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "Patch"
        ]
    },
    "Componere\\Patch::getClosure": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "\\Closure"
        ]
    },
    "Componere\\Patch::getClosures": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Componere\\Method::setPrivate": {
        "args": [],
        "returnTypes": [
            "Method"
        ]
    },
    "Componere\\Method::setProtected": {
        "args": [],
        "returnTypes": [
            "Method"
        ]
    },
    "Componere\\Method::setStatic": {
        "args": [],
        "returnTypes": [
            "Method"
        ]
    },
    "Componere\\Method::getReflector": {
        "args": [],
        "returnTypes": [
            "\\ReflectionMethod"
        ]
    },
    "Componere\\Value::setPrivate": {
        "args": [],
        "returnTypes": [
            "Value"
        ]
    },
    "Componere\\Value::setProtected": {
        "args": [],
        "returnTypes": [
            "Value"
        ]
    },
    "Componere\\Value::setStatic": {
        "args": [],
        "returnTypes": [
            "Value"
        ]
    },
    "Componere\\Value::isPrivate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\Value::isProtected": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\Value::isStatic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\Value::hasDefault": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Componere\\cast": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "Type"
            },
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": null
            }
        ],
        "returnTypes": [
            "Type"
        ]
    },
    "Componere\\cast_by_ref": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "Type"
            },
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": null
            }
        ],
        "returnTypes": [
            "Type"
        ]
    },
    "debug_backtrace": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$limit",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "debug_print_backtrace": {
        "args": [
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$limit",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "error_clear_last": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "error_get_last": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "error_log": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$message_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$destination",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$extra_headers",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "error_reporting": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "restore_error_handler": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "restore_exception_handler": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "set_error_handler": {
        "args": [
            {
                "name": "$error_handler",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$error_types",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "set_exception_handler": {
        "args": [
            {
                "name": "$exception_handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "callable",
            "null"
        ]
    },
    "trigger_error": {
        "args": [
            {
                "name": "$error_msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$error_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "inclued_get_data": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "opcache_compile_file": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "opcache_get_configuration": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "opcache_get_status": {
        "args": [
            {
                "defaultValue": true,
                "name": "$get_scripts",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "opcache_invalidate": {
        "args": [
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$force",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "opcache_is_script_cached": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "opcache_reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "flush": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ob_clean": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ob_end_clean": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ob_end_flush": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ob_flush": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ob_get_clean": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ob_get_contents": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ob_get_flush": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ob_get_length": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ob_get_level": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ob_get_status": {
        "args": [
            {
                "defaultValue": false,
                "name": "$full_status",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ob_gzhandler": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ob_implicit_flush": {
        "args": [
            {
                "defaultValue": 1,
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ob_list_handlers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ob_start": {
        "args": [
            {
                "defaultValue": null,
                "name": "$output_callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$chunk_size",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "output_add_rewrite_var": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "output_reset_rewrite_vars": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "assert_options": {
        "args": [
            {
                "name": "$what",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "assert": {
        "args": [
            {
                "name": "$assertion",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$description",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cli_get_process_title": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "cli_set_process_title": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dl": {
        "args": [
            {
                "name": "$library",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "extension_loaded": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "gc_collect_cycles": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "gc_disable": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "gc_enable": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "gc_enabled": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "gc_mem_caches": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "get_cfg_var": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "get_current_user": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "get_defined_constants": {
        "args": [
            {
                "defaultValue": false,
                "name": "$categorize",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "get_extension_funcs": {
        "args": [
            {
                "name": "$module_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "get_include_path": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "get_included_files": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "get_loaded_extensions": {
        "args": [
            {
                "defaultValue": false,
                "name": "$zend_extensions",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "get_magic_quotes_gpc": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "get_magic_quotes_runtime": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "get_resources": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "getenv": {
        "args": [
            {
                "name": "$varname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$local_only",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "getlastmod": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "getmygid": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getmyinode": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getmypid": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getmyuid": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getopt": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$longopts",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "&$optind",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "getrusage": {
        "args": [
            {
                "defaultValue": null,
                "name": "$who",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ini_get_all": {
        "args": [
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$details",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ini_get": {
        "args": [
            {
                "name": "$varname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ini_restore": {
        "args": [
            {
                "name": "$varname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ini_set": {
        "args": [
            {
                "name": "$varname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newvalue",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "memory_get_peak_usage": {
        "args": [
            {
                "defaultValue": false,
                "name": "$real_usage",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "memory_get_usage": {
        "args": [
            {
                "defaultValue": false,
                "name": "$real_usage",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "php_ini_loaded_file": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "php_ini_scanned_files": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "php_logo_guid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "php_sapi_name": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "php_uname": {
        "args": [
            {
                "defaultValue": "a",
                "name": "$mode",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "phpcredits": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phpinfo": {
        "args": [
            {
                "name": "$what",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phpversion": {
        "args": [
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "putenv": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "restore_include_path": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "set_include_path": {
        "args": [
            {
                "name": "$new_include_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "set_magic_quotes_runtime": {
        "args": [
            {
                "name": "$new_setting",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "set_time_limit": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sys_get_temp_dir": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "version_compare": {
        "args": [
            {
                "name": "$version1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "zend_logo_guid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "zend_thread_id": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "zend_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "phpdbg_break_file": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$line",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_break_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_break_method": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_break_next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_color": {
        "args": [
            {
                "name": "$element",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "phpdbg_exec": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "phpdbg_prompt": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Runkit_Sandbox::__construct": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Runkit_Sandbox_Parent::__construct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "runkit_class_adopt": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parentname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_class_emancipate": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_constant_add": {
        "args": [
            {
                "name": "$constname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_constant_redefine": {
        "args": [
            {
                "name": "$constname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newvalue",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_constant_remove": {
        "args": [
            {
                "name": "$constname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_function_add": {
        "args": [
            {
                "name": "$funcname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arglist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$return_by_reference",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$doc_comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_function_copy": {
        "args": [
            {
                "name": "$funcname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$targetname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_function_redefine": {
        "args": [
            {
                "name": "$funcname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arglist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$return_by_reference",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$doc_comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_function_remove": {
        "args": [
            {
                "name": "$funcname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_function_rename": {
        "args": [
            {
                "name": "$funcname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_import": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_lint_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_lint": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_method_add": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$doc_comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_method_copy": {
        "args": [
            {
                "name": "$dClass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dMethod",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sClass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sMethod",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_method_redefine": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$doc_comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_method_remove": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_method_rename": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "runkit_return_value_used": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "runkit_sandbox_output_handler": {
        "args": [
            {
                "name": "$sandbox",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "runkit_superglobals": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "uopz_add_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "Closure"
            },
            {
                "name": "&$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_allow_exit": {
        "args": [
            {
                "name": "$allow",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_backup": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_compose": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$classes",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$methods",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$properties",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_copy": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Closure"
        ]
    },
    "uopz_del_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_delete": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_extend": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parent",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_flags": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "uopz_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "Closure"
            },
            {
                "name": "$modifiers",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_get_exit_status": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "uopz_get_hook": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Closure",
            "null"
        ]
    },
    "uopz_get_mock": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "uopz_get_property": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "uopz_get_return": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "uopz_get_static": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "uopz_implement": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$interface",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_overload": {
        "args": [
            {
                "name": "$opcode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callable",
                "optionalDepth": 0,
                "type": "Callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_redefine": {
        "args": [
            {
                "name": "$constant",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_rename": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_restore": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_set_hook": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$hook",
                "optionalDepth": 0,
                "type": "Closure"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_set_mock": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mock",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_set_property": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_set_return": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$execute",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "uopz_set_static": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$static",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_undefine": {
        "args": [
            {
                "name": "$constant",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_unset_hook": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uopz_unset_mock": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "uopz_unset_return": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Weakref::acquire": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Weakref::get": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "Weakref::release": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Weakref::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "WeakMap::__construct": {
        "args": [],
        "returnTypes": []
    },
    "WeakMap::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "WeakMap::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "WeakMap::key": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "WeakMap::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "WeakMap::offsetExists": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "WeakMap::offsetGet": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "WeakMap::offsetSet": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "WeakMap::offsetUnset": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "WeakMap::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "WeakMap::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "wincache_fcache_fileinfo": {
        "args": [
            {
                "defaultValue": false,
                "name": "$summaryonly",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_fcache_meminfo": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_lock": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$isglobal",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wincache_ocache_fileinfo": {
        "args": [
            {
                "defaultValue": false,
                "name": "$summaryonly",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_ocache_meminfo": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_refresh_if_changed": {
        "args": [
            {
                "defaultValue": null,
                "name": "$files",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wincache_rplist_fileinfo": {
        "args": [
            {
                "defaultValue": false,
                "name": "$summaryonly",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_rplist_meminfo": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_scache_info": {
        "args": [
            {
                "defaultValue": false,
                "name": "$summaryonly",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_scache_meminfo": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_ucache_add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "wincache_ucache_cas": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$old_value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$new_value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wincache_ucache_clear": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wincache_ucache_dec": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$dec_by",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "wincache_ucache_delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wincache_ucache_exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "wincache_ucache_get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$success",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "wincache_ucache_inc": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$inc_by",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$success",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "wincache_ucache_info": {
        "args": [
            {
                "defaultValue": false,
                "name": "$summaryonly",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$key",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_ucache_meminfo": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "wincache_ucache_set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$ttl",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "wincache_unlock": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xhprof_disable": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "xhprof_enable": {
        "args": [
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "xhprof_sample_disable": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "xhprof_sample_enable": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "id3_get_frame_long_name": {
        "args": [
            {
                "name": "$frameId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "id3_get_frame_short_name": {
        "args": [
            {
                "name": "$frameId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "id3_get_genre_id": {
        "args": [
            {
                "name": "$genre",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "id3_get_genre_list": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "id3_get_genre_name": {
        "args": [
            {
                "name": "$genre_id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "id3_get_tag": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "id3_get_version": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "id3_remove_tag": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "id3_set_tag": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tag",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "KTaglib_MPEG_File::getAudioProperties": {
        "args": [],
        "returnTypes": [
            "KTaglib_MPEG_File",
            "false"
        ]
    },
    "KTaglib_MPEG_File::getID3v1Tag": {
        "args": [
            {
                "defaultValue": false,
                "name": "$create",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "KTaglib_ID3v1_Tag",
            "false"
        ]
    },
    "KTaglib_MPEG_File::getID3v2Tag": {
        "args": [
            {
                "defaultValue": false,
                "name": "$create",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "KTaglib_ID3v2_Tag",
            "false"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getBitrate": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getChannels": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getLayer": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getLength": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getSampleBitrate": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::getVersion": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_MPEG_AudioProperties::isCopyrighted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_MPEG_AudioProperties::isOriginal": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_MPEG_AudioProperties::isProtectionEnabled": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_Tag::getAlbum": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_Tag::getArtist": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_Tag::getComment": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_Tag::getGenre": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_Tag::getTitle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_Tag::getTrack": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_Tag::getYear": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_Tag::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_ID3v2_Tag::addFrame": {
        "args": [
            {
                "name": "$frame",
                "optionalDepth": 0,
                "type": "KTaglib_ID3v2_Frame"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_ID3v2_Tag::getFrameList": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "KTaglib_ID3v2_Frame::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_ID3v2_Frame::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::getDescription": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::getMimeType": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::savePicture": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::setPicture": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "KTaglib_ID3v2_AttachedPictureFrame::setType": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "openal_buffer_create": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "openal_buffer_data": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$freq",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_buffer_destroy": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_buffer_get": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "openal_buffer_loadwav": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$wavfile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_context_create": {
        "args": [
            {
                "name": "$device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "openal_context_current": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_context_destroy": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_context_process": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_context_suspend": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_device_close": {
        "args": [
            {
                "name": "$device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_device_open": {
        "args": [
            {
                "name": "$device_desc",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "openal_listener_get": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "openal_listener_set": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_create": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "openal_source_destroy": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_get": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "openal_source_pause": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_play": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_rewind": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_set": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_source_stop": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openal_stream": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rate",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "kadm5_chpass_principal": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "kadm5_create_principal": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "kadm5_delete_principal": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "kadm5_destroy": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "kadm5_flush": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "kadm5_get_policies": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "kadm5_get_principal": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "kadm5_get_principals": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "kadm5_init_with_password": {
        "args": [
            {
                "name": "$admin_server",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$realm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "kadm5_modify_principal": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$principal",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_acct_open": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "radius_add_server": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$secret",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$max_tries",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_auth_open": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "radius_close": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_config": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_create_request": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_cvt_addr": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "radius_cvt_int": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "radius_cvt_string": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "radius_demangle_mppe_key": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mangled",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_demangle": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mangled",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_get_attr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "radius_get_tagged_attr_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_get_tagged_attr_tag": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "radius_get_vendor_attr": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "radius_put_addr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_attr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_int": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_string": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_vendor_addr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$vendor",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_vendor_attr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$vendor",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_vendor_int": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$vendor",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_put_vendor_string": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$vendor",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "radius_request_authenticator": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_salt_encrypt_attr": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_send_request": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "radius_server_secret": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "radius_strerror": {
        "args": [
            {
                "name": "$radius_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_addch": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_addchnstr": {
        "args": [
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_addchstr": {
        "args": [
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_addnstr": {
        "args": [
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_addstr": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_assume_default_colors": {
        "args": [
            {
                "name": "$fg",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_attroff": {
        "args": [
            {
                "name": "$attributes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_attron": {
        "args": [
            {
                "name": "$attributes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_attrset": {
        "args": [
            {
                "name": "$attributes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_baudrate": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_beep": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_bkgd": {
        "args": [
            {
                "name": "$attrchar",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_bkgdset": {
        "args": [
            {
                "name": "$attrchar",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_border": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bottom",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$tl_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$tr_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bl_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$br_corner",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_bottom_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_can_change_color": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_cbreak": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_clear": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_clrtobot": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_clrtoeol": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_color_content": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$r",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$g",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$b",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_color_set": {
        "args": [
            {
                "name": "$pair",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_curs_set": {
        "args": [
            {
                "name": "$visibility",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_def_prog_mode": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_def_shell_mode": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_define_key": {
        "args": [
            {
                "name": "$definition",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keycode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_del_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_delay_output": {
        "args": [
            {
                "name": "$milliseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_delch": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_deleteln": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_delwin": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_doupdate": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_echo": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_echochar": {
        "args": [
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_end": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_erase": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_erasechar": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_filter": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_flash": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_flushinp": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_getch": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_getmaxyx": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_getmouse": {
        "args": [
            {
                "name": "&$mevent",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_getyx": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_halfdelay": {
        "args": [
            {
                "name": "$tenth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_has_colors": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_has_ic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_has_il": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_has_key": {
        "args": [
            {
                "name": "$keycode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_hide_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_hline": {
        "args": [
            {
                "name": "$charattr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_inch": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_init_color": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_init_pair": {
        "args": [
            {
                "name": "$pair",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fg",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_init": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_insch": {
        "args": [
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_insdelln": {
        "args": [
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_insertln": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_insstr": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_instr": {
        "args": [
            {
                "name": "&$buffer",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_isendwin": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_keyok": {
        "args": [
            {
                "name": "$keycode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$enable",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_keypad": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bf",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_killchar": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_longname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_meta": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$8bit",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mouse_trafo": {
        "args": [
            {
                "name": "&$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$toscreen",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_mouseinterval": {
        "args": [
            {
                "name": "$milliseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mousemask": {
        "args": [
            {
                "name": "$newmask",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$oldmask",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_move_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$startx",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$starty",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_move": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvaddch": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvaddchnstr": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvaddchstr": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvaddnstr": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvaddstr": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$s",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvcur": {
        "args": [
            {
                "name": "$old_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$old_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$new_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$new_x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvdelch": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvgetch": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvhline": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$attrchar",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvinch": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvvline": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$attrchar",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_mvwaddstr": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_napms": {
        "args": [
            {
                "name": "$milliseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_new_panel": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_newpad": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cols",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_newwin": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cols",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_nl": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_nocbreak": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_noecho": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_nonl": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_noqiflush": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_noraw": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_pair_content": {
        "args": [
            {
                "name": "$pair",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$f",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$b",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_panel_above": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_panel_below": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_panel_window": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ncurses_pnoutrefresh": {
        "args": [
            {
                "name": "$pad",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pminrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pmincol",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sminrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smincol",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smaxrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smaxcol",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_prefresh": {
        "args": [
            {
                "name": "$pad",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pminrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pmincol",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sminrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smincol",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smaxrow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$smaxcol",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_putp": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_qiflush": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_raw": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_refresh": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_replace_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_reset_prog_mode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_reset_shell_mode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_resetty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_savetty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_scr_dump": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_scr_init": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_scr_restore": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_scr_set": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_scrl": {
        "args": [
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_show_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_attr": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_attroff": {
        "args": [
            {
                "name": "$intarg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_attron": {
        "args": [
            {
                "name": "$intarg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_attrset": {
        "args": [
            {
                "name": "$intarg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_slk_color": {
        "args": [
            {
                "name": "$intarg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_init": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ncurses_slk_noutrefresh": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_slk_refresh": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_restore": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_slk_set": {
        "args": [
            {
                "name": "$labelnr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_slk_touch": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_standend": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_standout": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_start_color": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_termattrs": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_termname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ncurses_timeout": {
        "args": [
            {
                "name": "$millisec",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_top_panel": {
        "args": [
            {
                "name": "$panel",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_typeahead": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_ungetch": {
        "args": [
            {
                "name": "$keycode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_ungetmouse": {
        "args": [
            {
                "name": "$mevent",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_update_panels": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_use_default_colors": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_use_env": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ncurses_use_extended_names": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_vidattr": {
        "args": [
            {
                "name": "$intarg",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_vline": {
        "args": [
            {
                "name": "$charattr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_waddch": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_waddstr": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wattroff": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attrs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wattron": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attrs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wattrset": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attrs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wborder": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bottom",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$tl_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$tr_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bl_corner",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$br_corner",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wclear": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wcolor_set": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$color_pair",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_werase": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wgetch": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_whline": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$charattr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wmouse_trafo": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$toscreen",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ncurses_wmove": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wnoutrefresh": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wrefresh": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wstandend": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wstandout": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ncurses_wvline": {
        "args": [
            {
                "name": "$window",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$charattr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "newt_bell": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_button_bar": {
        "args": [
            {
                "name": "&$buttons",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "newt_button": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "newt_centered_window": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$title",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "newt_checkbox_get_value": {
        "args": [
            {
                "name": "$checkbox",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "newt_checkbox_set_flags": {
        "args": [
            {
                "name": "$checkbox",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sense",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_checkbox_set_value": {
        "args": [
            {
                "name": "$checkbox",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_checkbox_tree_add_item": {
        "args": [
            {
                "name": "$checkboxtree",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_checkbox_tree_find_item": {
        "args": [
            {
                "name": "$checkboxtree",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "newt_checkbox_tree_get_current": {
        "args": [
            {
                "name": "$checkboxtree",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "newt_clear_key_buffer": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_draw_root_text": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_finished": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "newt_form_add_component": {
        "args": [
            {
                "name": "$form",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$component",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_form_add_components": {
        "args": [
            {
                "name": "$form",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$components",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_form_destroy": {
        "args": [
            {
                "name": "$form",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_form_run": {
        "args": [
            {
                "name": "$form",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$exit_struct",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_form": {
        "args": [
            {
                "name": "$vert_bar",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$help",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "newt_get_screen_size": {
        "args": [
            {
                "name": "&$cols",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_init": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "newt_open_window": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$title",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "newt_pop_help_line": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_pop_window": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_push_help_line": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_refresh": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_resume": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_run_form": {
        "args": [
            {
                "name": "$form",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "newt_set_suspend_callback": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "newt_suspend": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "newt_wait_for_key": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "readline_add_history": {
        "args": [
            {
                "name": "$line",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline_callback_handler_install": {
        "args": [
            {
                "name": "$prompt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline_callback_handler_remove": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "readline_callback_read_char": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "readline_clear_history": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline_completion_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline_info": {
        "args": [
            {
                "name": "$varname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$newvalue",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "readline_list_history": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "readline_on_new_line": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "readline_read_history": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline_redisplay": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "readline_write_history": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "readline": {
        "args": [
            {
                "name": "$prompt",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bzclose": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "bzcompress": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 4,
                "name": "$blocksize",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$workfactor",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "bzdecompress": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$small",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "bzerrno": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "bzerror": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "bzerrstr": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bzflush": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bzopen": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "bzread": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 1024,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "bzwrite": {
        "args": [
            {
                "name": "$bz",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "lzf_compress": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "lzf_decompress": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "lzf_optimized_for": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Phar::addEmptyDir": {
        "args": [
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::addFile": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::addFromString": {
        "args": [
            {
                "name": "$localname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::apiVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::buildFromDirectory": {
        "args": [
            {
                "name": "$base_dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$regex",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Phar::buildFromIterator": {
        "args": [
            {
                "name": "$iter",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "name": "$base_directory",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Phar::canCompress": {
        "args": [
            {
                "defaultValue": null,
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::canWrite": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::compress": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "Phar::compressAllFilesBZIP2": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::compressAllFilesGZ": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::compressFiles": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::__construct": {
        "args": [
            {
                "name": "$fname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$alias",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::convertToData": {
        "args": [
            {
                "defaultValue": 9021976,
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 9021976,
                "name": "$compression",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "PharData"
        ]
    },
    "Phar::convertToExecutable": {
        "args": [
            {
                "defaultValue": 9021976,
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 9021976,
                "name": "$compression",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Phar"
        ]
    },
    "Phar::copy": {
        "args": [
            {
                "name": "$oldfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newfile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Phar::createDefaultStub": {
        "args": [
            {
                "name": "$indexfile",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$webindexfile",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::decompress": {
        "args": [
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "Phar::decompressFiles": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::delMetadata": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::delete": {
        "args": [
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::extractTo": {
        "args": [
            {
                "name": "$pathto",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$files",
                "optionalDepth": 1,
                "type": "string|array"
            },
            {
                "defaultValue": false,
                "name": "$overwrite",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::getAlias": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "Phar::getMetadata": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "Phar::getModified": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::getPath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::getSignature": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Phar::getStub": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::getSupportedCompression": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Phar::getSupportedSignatures": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Phar::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::hasMetadata": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::interceptFileFuncs": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::isBuffering": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::isCompressed": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Phar::isFileFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::isValidPharFilename": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$executable",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::isWritable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::loadPhar": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$alias",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::mapPhar": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$dataoffset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::mount": {
        "args": [
            {
                "name": "$pharpath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$externalpath",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::mungServer": {
        "args": [
            {
                "name": "$munglist",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::offsetExists": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::offsetGet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Phar::offsetSet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::offsetUnset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::running": {
        "args": [
            {
                "defaultValue": true,
                "name": "$retphar",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Phar::setAlias": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Phar::setDefaultStub": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$webindex",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::setMetadata": {
        "args": [
            {
                "name": "$metadata",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::setSignatureAlgorithm": {
        "args": [
            {
                "name": "$sigtype",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::setStub": {
        "args": [
            {
                "name": "$stub",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::startBuffering": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::stopBuffering": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Phar::uncompressAllFiles": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::unlinkArchive": {
        "args": [
            {
                "name": "$archive",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Phar::webPhar": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "index.php",
                "name": "$index",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$f404",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$mimetypes",
                "optionalDepth": 4,
                "type": "array"
            },
            {
                "name": "$rewrites",
                "optionalDepth": 5,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharData::addEmptyDir": {
        "args": [
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharData::addFromString": {
        "args": [
            {
                "name": "$localname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharData::buildFromIterator": {
        "args": [
            {
                "name": "$iter",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "name": "$base_directory",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "PharData::compress": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "PharData::compressFiles": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharData::__construct": {
        "args": [
            {
                "name": "$fname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$alias",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PharData::convertToData": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$compression",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "PharData"
        ]
    },
    "PharData::convertToExecutable": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$compression",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$extension",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Phar"
        ]
    },
    "PharData::copy": {
        "args": [
            {
                "name": "$oldfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newfile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::decompress": {
        "args": [
            {
                "name": "$extension",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "PharData::decompressFiles": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharData::delMetadata": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::delete": {
        "args": [
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::extractTo": {
        "args": [
            {
                "name": "$pathto",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$files",
                "optionalDepth": 1,
                "type": "string|array"
            },
            {
                "defaultValue": false,
                "name": "$overwrite",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::isWritable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::offsetSet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharData::offsetUnset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharData::setAlias": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PharData::setDefaultStub": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$webindex",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharData::setStub": {
        "args": [
            {
                "name": "$stub",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharFileInfo::chmod": {
        "args": [
            {
                "name": "$permissions",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharFileInfo::compress": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharFileInfo::__construct": {
        "args": [
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PharFileInfo::decompress": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharFileInfo::delMetadata": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::getCRC32": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PharFileInfo::getCompressedSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PharFileInfo::getContent": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "PharFileInfo::getMetadata": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "PharFileInfo::getPharFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PharFileInfo::hasMetadata": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::isCRCChecked": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::isCompressed": {
        "args": [
            {
                "defaultValue": 9021976,
                "name": "$compression_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::isCompressedBZIP2": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::isCompressedGZ": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PharFileInfo::setCompressedBZIP2": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharFileInfo::setCompressedGZ": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PharFileInfo::setMetadata": {
        "args": [
            {
                "name": "$metadata",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PharFileInfo::setUncompressed": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rar_wrapper_cache_stats": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RarArchive::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "RarArchive::getComment": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "RarArchive::getEntries": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "RarArchive::getEntry": {
        "args": [
            {
                "name": "$entryname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "RarEntry",
            "false"
        ]
    },
    "RarArchive::isBroken": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RarArchive::isSolid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RarArchive::open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$volume_callback",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "RarArchive",
            "false"
        ]
    },
    "RarArchive::setAllowBroken": {
        "args": [
            {
                "name": "$allow_broken",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "RarArchive::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RarEntry::extract": {
        "args": [
            {
                "name": "$dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$filepath",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$password",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$extended_data",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "RarEntry::getAttr": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::getCrc": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "RarEntry::getFileTime": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "RarEntry::getHostOs": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::getMethod": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::getName": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "RarEntry::getPackedSize": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::getStream": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "RarEntry::getUnpackedSize": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::getVersion": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "RarEntry::isDirectory": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RarEntry::isEncrypted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RarEntry::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RarException::isUsingExceptions": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RarException::setUsingExceptions": {
        "args": [
            {
                "name": "$using_exceptions",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ZipArchive::addEmptyDir": {
        "args": [
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::addFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$localname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$start",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::addFromString": {
        "args": [
            {
                "name": "$localname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::addGlob": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::addPattern": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": ".",
                "name": "$path",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ZipArchive::deleteIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::deleteName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::extractTo": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entries",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::getArchiveComment": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getCommentIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getCommentName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::GetExternalAttributesIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$opsys",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::getExternalAttributesName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$opsys",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::getFromIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getFromName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getNameIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getStatusString": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ZipArchive::getStream": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ZipArchive::locateName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ZipArchive::open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ZipArchive::renameIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::renameName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setArchiveComment": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setCommentIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setCommentName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setCompressionIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$comp_method",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$comp_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setCompressionName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$comp_method",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$comp_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setEncryptionIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setEncryptionName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setExternalAttributesIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$opsys",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setExternalAttributesName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opsys",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::setPassword": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::statIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ZipArchive::statName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ZipArchive::unchangeAll": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::unchangeArchive": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::unchangeIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZipArchive::unchangeName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "zip_close": {
        "args": [
            {
                "name": "$zip",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "zip_entry_close": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "zip_entry_compressedsize": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "zip_entry_compressionmethod": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "zip_entry_filesize": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "zip_entry_name": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "zip_entry_open": {
        "args": [
            {
                "name": "$zip",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "zip_entry_read": {
        "args": [
            {
                "name": "$zip_entry",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 1024,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "zip_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "zip_read": {
        "args": [
            {
                "name": "$zip",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "deflate_add": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flush_mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "deflate_init": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "gzclose": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gzcompress": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzdecode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzdeflate": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzencode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding_mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzeof": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gzfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gzgetc": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzgets": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzgetss": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$allowable_tags",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzinflate": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzopen": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gzpassthru": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "gzread": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gzrewind": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gzseek": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gztell": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "gzuncompress": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gzwrite": {
        "args": [
            {
                "name": "$zp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "inflate_add": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encoded_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flush_mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "inflate_get_read_len": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "inflate_get_status": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "inflate_init": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "readgzfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "zlib_decode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$max_decoded_len",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "zlib_encode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "zlib_get_coding_type": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "m_checkstatus": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_completeauthorizations": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_connect": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_connectionerror": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_deletetrans": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "m_destroyconn": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "m_destroyengine": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "m_getcell": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_getcellbynum": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_getcommadelimited": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_getheader": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column_num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_initconn": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "m_initengine": {
        "args": [
            {
                "name": "$location",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_iscommadelimited": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_maxconntimeout": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$secs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "m_monitor": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_numcolumns": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_numrows": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_parsecommadelimited": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_responsekeys": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "m_responseparam": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_returnstatus": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setblocking": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tf",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setdropfile": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setip": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setssl_cafile": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cafile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setssl_files": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sslkeyfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sslcertfile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_setssl": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_settimeout": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_sslcert_gen_hash": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "m_transactionssent": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_transinqueue": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_transkeyval": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_transnew": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_transsend": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_uwait": {
        "args": [
            {
                "name": "$microsecs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_validateidentifier": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tf",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "m_verifyconnection": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tf",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "m_verifysslcert": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tf",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "crack_check": {
        "args": [
            {
                "name": "$dictionary",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "crack_closedict": {
        "args": [
            {
                "name": "$dictionary",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "crack_getlastmessage": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "crack_opendict": {
        "args": [
            {
                "name": "$dictionary",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "random_bytes": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "random_int": {
        "args": [
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "hash_algos": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "hash_copy": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "HashContext"
            }
        ],
        "returnTypes": [
            "HashContext"
        ]
    },
    "hash_equals": {
        "args": [
            {
                "name": "$known_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hash_file": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hash_final": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "HashContext"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hash_hkdf": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ikm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$info",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$salt",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "hash_hmac_algos": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "hash_hmac_file": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hash_hmac": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hash_init": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$key",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "HashContext"
        ]
    },
    "hash_pbkdf2": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$iterations",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hash_update_file": {
        "args": [
            {
                "name": "$hcontext",
                "optionalDepth": 0,
                "type": "HashContext"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scontext",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hash_update_stream": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "HashContext"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "hash_update": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "HashContext"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hash": {
        "args": [
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_cbc": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iv",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_cfb": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iv",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_create_iv": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$source",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mcrypt_decrypt": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$iv",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mcrypt_ecb": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_enc_get_algorithms_name": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_enc_get_block_size": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_enc_get_iv_size": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_enc_get_key_size": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_enc_get_modes_name": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_enc_get_supported_key_sizes": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mcrypt_enc_is_block_algorithm_mode": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mcrypt_enc_is_block_algorithm": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_enc_is_block_mode": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_enc_self_test": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_encrypt": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$iv",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mcrypt_generic_deinit": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_generic_end": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mcrypt_generic_init": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$iv",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_generic": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mcrypt_get_block_size": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mcrypt_get_cipher_name": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mcrypt_get_iv_size": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_get_key_size": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mcrypt_list_algorithms": {
        "args": [
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mcrypt_list_modes": {
        "args": [
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mcrypt_module_close": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_module_get_algo_block_size": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_module_get_algo_key_size": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mcrypt_module_get_supported_key_sizes": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mcrypt_module_is_block_algorithm_mode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mcrypt_module_is_block_algorithm": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_module_is_block_mode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mcrypt_module_open": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$algorithm_directory",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode_directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mcrypt_module_self_test": {
        "args": [
            {
                "name": "$algorithm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lib_dir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mcrypt_ofb": {
        "args": [
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iv",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mdecrypt_generic": {
        "args": [
            {
                "name": "$td",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mhash_count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mhash_get_block_size": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mhash_get_hash_name": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mhash_keygen_s2k": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$bytes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mhash": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "openssl_cipher_iv_length": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "openssl_csr_export_to_file": {
        "args": [
            {
                "name": "$csr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$notext",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_csr_export": {
        "args": [
            {
                "name": "$csr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$out",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$notext",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_csr_get_public_key": {
        "args": [
            {
                "name": "$csr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$use_shortnames",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "openssl_csr_get_subject": {
        "args": [
            {
                "name": "$csr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$use_shortnames",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "openssl_csr_new": {
        "args": [
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$privkey",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$configargs",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$extraattribs",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "openssl_csr_sign": {
        "args": [
            {
                "name": "$csr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$cacert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$priv_key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$days",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$configargs",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$serial",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "openssl_decrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$iv",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$tag",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$aad",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_dh_compute_key": {
        "args": [
            {
                "name": "$pub_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dh_key",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_digest": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_encrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$iv",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "&$tag",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$aad",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": 16,
                "name": "$tag_length",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_error_string": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_free_key": {
        "args": [
            {
                "name": "$key_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "openssl_get_cert_locations": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "openssl_get_cipher_methods": {
        "args": [
            {
                "defaultValue": false,
                "name": "$aliases",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "openssl_get_curve_names": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "openssl_get_md_methods": {
        "args": [
            {
                "defaultValue": false,
                "name": "$aliases",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "openssl_open": {
        "args": [
            {
                "name": "$sealed_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$open_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$env_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_key_id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": "RC4",
                "name": "$method",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$iv",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pbkdf2": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key_length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iterations",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "sha1",
                "name": "$digest_algorithm",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_pkcs12_export_to_file": {
        "args": [
            {
                "name": "$x509",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs12_export": {
        "args": [
            {
                "name": "$x509",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$out",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs12_read": {
        "args": [
            {
                "name": "$pkcs12",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$certs",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$pass",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs7_decrypt": {
        "args": [
            {
                "name": "$infilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$recipcert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$recipkey",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs7_encrypt": {
        "args": [
            {
                "name": "$infile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$outfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$recipcerts",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$headers",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$cipherid",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs7_read": {
        "args": [
            {
                "name": "$infilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$certs",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs7_sign": {
        "args": [
            {
                "name": "$infilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$signcert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$privkey",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$headers",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$extracerts",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkcs7_verify": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$cainfo",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$extracerts",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$p7bfilename",
                "optionalDepth": 5,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "openssl_pkey_export_to_file": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$configargs",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkey_export": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$out",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$configargs",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_pkey_free": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "openssl_pkey_get_details": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "openssl_pkey_get_private": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": "",
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "openssl_pkey_get_public": {
        "args": [
            {
                "name": "$certificate",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "openssl_pkey_new": {
        "args": [
            {
                "name": "$configargs",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "openssl_private_decrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$decrypted",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$padding",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_private_encrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$crypted",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$padding",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_public_decrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$decrypted",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$padding",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_public_encrypt": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$crypted",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$padding",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_random_pseudo_bytes": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$crypto_strong",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "openssl_seal": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$sealed_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$env_keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$pub_key_ids",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": "RC4",
                "name": "$method",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "&$iv",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "openssl_sign": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$signature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_key_id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$signature_alg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_spki_export_challenge": {
        "args": [
            {
                "name": "&$spkac",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "openssl_spki_export": {
        "args": [
            {
                "name": "&$spkac",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "openssl_spki_new": {
        "args": [
            {
                "name": "&$privkey",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$challenge",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$algorithm",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "openssl_spki_verify": {
        "args": [
            {
                "name": "&$spkac",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "openssl_verify": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$signature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pub_key_id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$signature_alg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "openssl_x509_check_private_key": {
        "args": [
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_x509_checkpurpose": {
        "args": [
            {
                "name": "$x509cert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$purpose",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cainfo",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$untrustedfile",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "openssl_x509_export_to_file": {
        "args": [
            {
                "name": "$x509",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$outfilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$notext",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_x509_export": {
        "args": [
            {
                "name": "$x509",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$output",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$notext",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "openssl_x509_fingerprint": {
        "args": [
            {
                "name": "$x509",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": "sha1",
                "name": "$hash_algorithm",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "openssl_x509_free": {
        "args": [
            {
                "name": "$x509cert",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "openssl_x509_parse": {
        "args": [
            {
                "name": "$x509cert",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$shortnames",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "openssl_x509_read": {
        "args": [
            {
                "name": "$x509certdata",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "password_get_info": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "password_hash": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "password_needs_rehash": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$algo",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "password_verify": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sodium_add": {
        "args": [
            {
                "name": "&$val",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$addv",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sodium_base642bin": {
        "args": [
            {
                "name": "$b64",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$ignore",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_bin2base64": {
        "args": [
            {
                "name": "$bin",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_bin2hex": {
        "args": [
            {
                "name": "$bin",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_compare": {
        "args": [
            {
                "name": "$buf1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$buf2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sodium_crypto_aead_aes256gcm_decrypt": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_aes256gcm_encrypt": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_aes256gcm_is_available": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_aead_aes256gcm_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_decrypt": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_encrypt": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_ietf_decrypt": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_ietf_encrypt": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_ietf_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_chacha20poly1305_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_xchacha20poly1305_ietf_encrypt": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_aead_xchacha20poly1305_ietf_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_auth_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_auth_verify": {
        "args": [
            {
                "name": "$signature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_auth": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_keypair_from_secretkey_and_publickey": {
        "args": [
            {
                "name": "$secret_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$public_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_keypair": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_open": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_publickey_from_secretkey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_publickey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_seal_open": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_seal": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_secretkey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box_seed_keypair": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_box": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_generichash_final": {
        "args": [
            {
                "name": "&$state",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_generichash_init": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_generichash_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_generichash_update": {
        "args": [
            {
                "name": "&$state",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_generichash": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kdf_derive_from_key": {
        "args": [
            {
                "name": "$subkey_len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$subkey_id",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kdf_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kx_client_session_keys": {
        "args": [
            {
                "name": "$client_keypair",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sodium_crypto_kx_keypair": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kx_publickey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kx_secretkey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kx_seed_keypair": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_kx_server_session_keys": {
        "args": [
            {
                "name": "$server_keypair",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$client_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sodium_crypto_pwhash_scryptsalsa208sha256_str_verify": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_pwhash_scryptsalsa208sha256_str": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opslimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_pwhash_scryptsalsa208sha256": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opslimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_pwhash_str_needs_rehash": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opslimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_pwhash_str_verify": {
        "args": [
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_pwhash_str": {
        "args": [
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opslimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_pwhash": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opslimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memlimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$alg",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "sodium_crypto_scalarmult": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretbox_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretbox_open": {
        "args": [
            {
                "name": "$ciphertext",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretbox": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_init_pull": {
        "args": [
            {
                "name": "$header",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_init_push": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_pull": {
        "args": [
            {
                "name": "&$state",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_push": {
        "args": [
            {
                "name": "&$state",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ad",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$tag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_secretstream_xchacha20poly1305_rekey": {
        "args": [
            {
                "name": "&$state",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sodium_crypto_shorthash_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_shorthash": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_detached": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keypair",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_ed25519_pk_to_curve25519": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_ed25519_sk_to_curve25519": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_keypair_from_secretkey_and_publickey": {
        "args": [
            {
                "name": "$secret_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$public_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_keypair": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_open": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keypair",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_publickey_from_secretkey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_publickey": {
        "args": [
            {
                "name": "$keypair",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_secretkey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_seed_keypair": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_sign_verify_detached": {
        "args": [
            {
                "name": "$signature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sodium_crypto_sign": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$secret_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_stream_keygen": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_stream_xor": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_crypto_stream": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_hex2bin": {
        "args": [
            {
                "name": "$hex",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ignore",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_increment": {
        "args": [
            {
                "name": "&$val",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sodium_memcmp": {
        "args": [
            {
                "name": "$buf1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$buf2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sodium_memzero": {
        "args": [
            {
                "name": "&$buf",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sodium_pad": {
        "args": [
            {
                "name": "$unpadded",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sodium_unpad": {
        "args": [
            {
                "name": "$padded",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dba_close": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "dba_delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dba_exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "dba_fetch": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dba_firstkey": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "dba_handlers": {
        "args": [
            {
                "defaultValue": false,
                "name": "$full_info",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "dba_insert": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dba_key_split": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "dba_list": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "dba_nextkey": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "dba_open": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handler",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "dba_optimize": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dba_popen": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handler",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "dba_replace": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dba_sync": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dbx_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbx_compare": {
        "args": [
            {
                "name": "$row_a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$row_b",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$column_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbx_connect": {
        "args": [
            {
                "name": "$module",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$persistent",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "dbx_error": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dbx_escape_string": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dbx_fetch_row": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbx_query": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$sql_statement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbx_sort": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$user_compare_function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_autocommit": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": false,
                "name": "$OnOff",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "odbc_binmode": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_close_all": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "odbc_close": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "odbc_columnprivileges": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_columns": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$column_name",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_commit": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_connect": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cursor_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "odbc_cursor": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "odbc_data_source": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fetch_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "odbc_error": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "odbc_errormsg": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "odbc_exec": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_execute": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$parameters_array",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rownumber",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "odbc_fetch_into": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$result_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$rownumber",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "odbc_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rownumber",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "odbc_fetch_row": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 1,
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "odbc_field_len": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "odbc_field_name": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "odbc_field_num": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "odbc_field_scale": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "odbc_field_type": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "odbc_foreignkeys": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pk_qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pk_owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pk_table",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fk_qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fk_owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fk_table",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_free_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "odbc_gettypeinfo": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "odbc_longreadlen": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_next_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "odbc_num_fields": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "odbc_num_rows": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "odbc_pconnect": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cursor_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "odbc_prepare": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "odbc_primarykeys": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_procedurecolumns": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_procedures": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_result_all": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "odbc_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "odbc_rollback": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_setoption": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "odbc_specialcolumns": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$scope",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nullable",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_statistics": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$accuracy",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_tableprivileges": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$owner",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "odbc_tables": {
        "args": [
            {
                "name": "$connection_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$owner",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$types",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "PDO::beginTransaction": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::commit": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::errorCode": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "PDO::errorInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "PDO::exec": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDO::getAttribute": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "PDO::getAvailableDrivers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "PDO::inTransaction": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "PDO::lastInsertId": {
        "args": [
            {
                "defaultValue": null,
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDO::prepare": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$driver_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "PDOStatement"
        ]
    },
    "PDO::query": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "PDOStatement",
            "false"
        ]
    },
    "PDO::quote": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameter_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDO::rollBack": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::setAttribute": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::bindColumn": {
        "args": [
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$param",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$maxlen",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$driverdata",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::bindParam": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$variable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$data_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$driver_options",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::bindValue": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$data_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::closeCursor": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::columnCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PDOStatement::debugDumpParams": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "PDOStatement::errorCode": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "PDOStatement::errorInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "PDOStatement::execute": {
        "args": [
            {
                "name": "$input_parameters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::fetch": {
        "args": [
            {
                "name": "$fetch_style",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$cursor_orientation",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$cursor_offset",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "PDOStatement::fetchAll": {
        "args": [
            {
                "name": "$fetch_style",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$fetch_argument",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "$ctor_args",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "PDOStatement::fetchColumn": {
        "args": [
            {
                "defaultValue": null,
                "name": "$column_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "PDOStatement::fetchObject": {
        "args": [
            {
                "defaultValue": "stdClass",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ctor_args",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "PDOStatement::getAttribute": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "PDOStatement::getColumnMeta": {
        "args": [
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "PDOStatement::nextRowset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::rowCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PDOStatement::setAttribute": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDOStatement::setFetchMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::cubrid_schema": {
        "args": [
            {
                "name": "$schema_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$table_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$col_name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "PDO::pgsqlCopyFromArray": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": "\\t",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\\\\N",
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$fields",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::pgsqlCopyFromFile": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "\\t",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\\\\N",
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$fields",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::pgsqlCopyToArray": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "\\t",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\\\\N",
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$fields",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "PDO::pgsqlCopyToFile": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "\\t",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\\\\N",
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$fields",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::pgsqlGetNotify": {
        "args": [
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$ms_timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "PDO::pgsqlGetPid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PDO::pgsqlLOBCreate": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "PDO::pgsqlLOBOpen": {
        "args": [
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "rb",
                "name": "$mode",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "PDO::pgsqlLOBUnlink": {
        "args": [
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::sqliteCreateAggregate": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$step_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$finalize_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$num_args",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::sqliteCreateCollation": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "PDO::sqliteCreateFunction": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": -1,
                "name": "$num_args",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "cubrid_bind": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bind_index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bind_value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$bind_value_type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_close_prepare": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_close_request": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_col_get": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_col_size": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_column_names": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_column_types": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_commit": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_connect_with_url": {
        "args": [
            {
                "name": "$conn_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new_link",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dbname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new_link",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_current_oid": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_disconnect": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_drop": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_error_code_facility": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_error_code": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_error_msg": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_execute": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sql",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$option",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_fetch": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "cubrid_free_result": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_get_autocommit": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_get_charset": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_get_class_name": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_get_client_info": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_get_db_parameter": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_get_query_timeout": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_get_server_info": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_get": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "cubrid_insert_id": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_is_instance": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_lob_close": {
        "args": [
            {
                "name": "$lob_identifier_array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob_export": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob_get": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sql",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_lob_send": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob_size": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_lob2_bind": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bind_index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bind_value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$bind_value_type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_close": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_export": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_import": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_new": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "defaultValue": "BLOB",
                "name": "$type",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_lob2_read": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_lob2_seek64": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$origin",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_seek": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$origin",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lob2_size64": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_lob2_size": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_lob2_tell64": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_lob2_tell": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_lob2_write": {
        "args": [
            {
                "name": "$lob_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lock_read": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_lock_write": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_move_cursor": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$origin",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_next_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_num_cols": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_pconnect_with_url": {
        "args": [
            {
                "name": "$conn_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_pconnect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dbname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_prepare": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$prepare_stmt",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$option",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_put": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_rollback": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_schema": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$schema_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_seq_drop": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_seq_insert": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$seq_element",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_seq_put": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$seq_element",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_set_add": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$set_element",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_set_autocommit": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_set_db_parameter": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$param_value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_set_drop": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attr_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$set_element",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_set_query_timeout": {
        "args": [
            {
                "name": "$req_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_affected_rows": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_client_encoding": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_close": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_data_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "cubrid_db_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_errno": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_error": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "cubrid_fetch_lengths": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$type",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "cubrid_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_field_flags": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_field_len": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_field_table": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_list_dbs": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cubrid_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_ping": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cubrid_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "cubrid_real_escape_string": {
        "args": [
            {
                "name": "$unescaped_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$field",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_unbuffered_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$conn_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "cubrid_load_from_glo": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_new_glo": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cubrid_save_to_glo": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cubrid_send_glo": {
        "args": [
            {
                "name": "$conn_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_add": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_aql": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$dbpath",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_chdir": {
        "args": [
            {
                "name": "$newdir",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dbplus_close": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbplus_curr": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_errcode": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dbplus_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_find": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$constraints",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_first": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_flush": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_freealllocks": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_freelock": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_freerlocks": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_getlock": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_getunique": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$uniqueid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_info": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$result",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_last": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_lockrel": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_next": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_open": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_prev": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_rchperm": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mask",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$group",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_rcreate": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domlist",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_rcrtexact": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbplus_rcrtlike": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbplus_resolve": {
        "args": [
            {
                "name": "$relation_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "dbplus_restorepos": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_rkeys": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$domlist",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbplus_ropen": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_rquery": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dbpath",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_rrename": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_rsecindex": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$domlist",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dbplus_runlink": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_rzap": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_savepos": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_setindex": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$idx_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_setindexbynumber": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$idx_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_sql": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$dbpath",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "dbplus_tcl": {
        "args": [
            {
                "name": "$sid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dbplus_tremove": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tuple",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$current",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_undo": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_undoprepare": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_unlockrel": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_unselect": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_update": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$old",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$new",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_xlockrel": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbplus_xunlockrel": {
        "args": [
            {
                "name": "$relation",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dbase_add_record": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dbase_close": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dbase_create": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "dbase_delete_record": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dbase_get_header_info": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "dbase_get_record_with_names": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "dbase_get_record": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "dbase_numfields": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "dbase_numrecords": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "dbase_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "dbase_pack": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dbase_replace_record": {
        "args": [
            {
                "name": "$dbase_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$record_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "filepro_fieldcount": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filepro_fieldname": {
        "args": [
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "filepro_fieldtype": {
        "args": [
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "filepro_fieldwidth": {
        "args": [
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filepro_retrieve": {
        "args": [
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "filepro_rowcount": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filepro": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_add_user": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$user_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$first_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$middle_name",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$last_name",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_affected_rows": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ibase_backup": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$source_db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$verbose",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ibase_blob_add": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ibase_blob_cancel": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_blob_close": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ibase_blob_create": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_blob_echo": {
        "args": [
            {
                "name": "$blob_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_blob_get": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ibase_blob_import": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ibase_blob_info": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$blob_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ibase_blob_open": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$blob_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_close": {
        "args": [
            {
                "defaultValue": null,
                "name": "$connection_id",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_commit_ret": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_or_trans_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_commit": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_or_trans_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_connect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$buffers",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$dialect",
                "optionalDepth": 6,
                "type": "int"
            },
            {
                "name": "$role",
                "optionalDepth": 7,
                "type": "string"
            },
            {
                "name": "$sync",
                "optionalDepth": 8,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_db_info": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$argument",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ibase_delete_user": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$user_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_drop_db": {
        "args": [
            {
                "defaultValue": null,
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_errcode": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ibase_errmsg": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ibase_execute": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ibase_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$fetch_flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ibase_fetch_object": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$fetch_flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "ibase_fetch_row": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$fetch_flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ibase_field_info": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ibase_free_event_handler": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_free_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_free_result": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_gen_id": {
        "args": [
            {
                "name": "$generator",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$increment",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ibase_maintain_db": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$argument",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_modify_user": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$user_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$first_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$middle_name",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$last_name",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_name_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_num_fields": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ibase_num_params": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ibase_param_info": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ibase_pconnect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$buffers",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$dialect",
                "optionalDepth": 6,
                "type": "int"
            },
            {
                "name": "$role",
                "optionalDepth": 7,
                "type": "string"
            },
            {
                "name": "$sync",
                "optionalDepth": 8,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_query": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$bind_args",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ibase_restore": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$source_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest_db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$verbose",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ibase_rollback_ret": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_or_trans_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_rollback": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_or_trans_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_server_info": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ibase_service_attach": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dba_username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dba_password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ibase_service_detach": {
        "args": [
            {
                "name": "$service_handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ibase_set_event_handler": {
        "args": [
            {
                "name": "$event_handler",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$event_name1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ibase_trans": {
        "args": [
            {
                "name": "$trans_args",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ibase_wait_event": {
        "args": [
            {
                "name": "$event_name1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_affected_rows": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_autocommit": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$OnOff",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fbsql_blob_size": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fbsql_change_user": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_clob_size": {
        "args": [
            {
                "name": "$clob_handle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fbsql_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_commit": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_connect": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fbsql_create_blob": {
        "args": [
            {
                "name": "$blob_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_create_clob": {
        "args": [
            {
                "name": "$clob_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_create_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$database_options",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_data_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_database_password": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$database_password",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_database": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_db_query": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "fbsql_db_status": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_drop_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_errno": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_error": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fbsql_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fbsql_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "fbsql_fetch_lengths": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fbsql_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "fbsql_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fbsql_field_flags": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_field_len": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_index",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "fbsql_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_field_table": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_hostname": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$host_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_insert_id": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_list_dbs": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fbsql_list_fields": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fbsql_list_tables": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fbsql_next_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_password": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$password",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_pconnect": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "fbsql_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$batch_size",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fbsql_read_blob": {
        "args": [
            {
                "name": "$blob_handle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_read_clob": {
        "args": [
            {
                "name": "$clob_handle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "fbsql_rollback": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_rows_fetched": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fbsql_select_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_set_characterset": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$characterset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$in_out_both",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fbsql_set_lob_mode": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$lob_mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_set_password": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$old_password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_set_transaction": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$locking",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$isolation",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fbsql_start_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$database_options",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_stop_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fbsql_table_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_username": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fbsql_warnings": {
        "args": [
            {
                "name": "$OnOff",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "db2_autocommit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "db2_bind_param": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$parameter_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$variable_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameter_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$data_type",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$precision",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_client_info": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "db2_close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_column_privileges": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$column-name",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_columns": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$column-name",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "db2_commit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_conn_error": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_conn_errormsg": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_connect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_cursor_type": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_escape_string": {
        "args": [
            {
                "name": "$string_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_exec": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "db2_execute": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$parameters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_fetch_array": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "db2_fetch_assoc": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "db2_fetch_both": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "db2_fetch_object": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "db2_fetch_row": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "db2_field_display_size": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_field_name": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_field_num": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_field_precision": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_field_scale": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_field_type": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_field_width": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_foreign_keys": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_free_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_free_stmt": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_get_option": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "db2_last_insert_id": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_lob_read": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$colnum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_next_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_num_fields": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_num_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "db2_pclose": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_pconnect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_prepare": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_primary_keys": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_procedure_columns": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$procedure",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "db2_procedures": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$procedure",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "db2_rollback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_server_info": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "db2_set_option": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "db2_special_columns": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$scope",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "db2_statistics": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_stmt_error": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_stmt_errormsg": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "db2_table_privileges": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "db2_tables": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$qualifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$schema",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$table-name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$table-type",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ifx_affected_rows": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ifx_blobinfile_mode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_byteasvarchar": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_connect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ifx_copy_blob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_create_blob": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_create_char": {
        "args": [
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_do": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_error": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ifx_errormsg": {
        "args": [
            {
                "name": "$errorcode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ifx_fetch_row": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$position",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ifx_fieldproperties": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ifx_fieldtypes": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ifx_free_blob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_free_char": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_free_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_get_blob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ifx_get_char": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ifx_getsqlca": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ifx_htmltbl_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$html_table_options",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_nullformat": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_num_fields": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_num_rows": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifx_pconnect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$userid",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ifx_prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cursor_def",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$blobidarray",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ifx_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cursor_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$blobidarray",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ifx_textasvarchar": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_update_blob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifx_update_char": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifxus_close_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifxus_create_slob": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifxus_free_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ifxus_open_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifxus_read_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nbytes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ifxus_seek_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifxus_tell_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ifxus_write_slob": {
        "args": [
            {
                "name": "$bid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ingres_autocommit_state": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_autocommit": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_charset": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ingres_close": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_commit": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_connect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ingres_cursor": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ingres_errno": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_error": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "ingres_errsqlstate": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "ingres_escape_string": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$source_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ingres_execute": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$params",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$types",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ingres_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ingres_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "ingres_fetch_proc_return": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ingres_field_length": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ingres_field_nullable": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ingres_field_precision": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_field_scale": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ingres_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_next_error": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ingres_pconnect": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ingres_prepare": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ingres_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$types",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ingres_result_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_rollback": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_set_environment": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ingres_unbuffered_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$types",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "maxdb_affected_rows": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_autocommit": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_change_user": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_character_set_name": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_close": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_commit": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_connect_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_connect_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$dbname",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$socket",
                "optionalDepth": 6,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "maxdb_data_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_debug": {
        "args": [
            {
                "name": "$debug",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "maxdb_disable_reads_from_master": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_disable_rpl_parse": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_dump_debug_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_embedded_connect": {
        "args": [
            {
                "name": "$dbname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "maxdb_enable_reads_from_master": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_enable_rpl_parse": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_errno": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_error": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$resulttype",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "maxdb_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "maxdb_fetch_field_direct": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldnr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "maxdb_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "maxdb_fetch_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "maxdb_fetch_lengths": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "maxdb_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object",
            "null"
        ]
    },
    "maxdb_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "maxdb_field_count": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldnr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_field_tell": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "maxdb_get_client_info": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_get_client_version": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_get_host_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_get_proto_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_get_server_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_get_server_version": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_init": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "maxdb_insert_id": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "maxdb_kill": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$processid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_master_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_more_results": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_multi_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_next_result": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_options": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_ping": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_prepare": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "maxdb_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$resultmode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "maxdb_real_connect": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hostname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$dbname",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$socket",
                "optionalDepth": 6,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_real_escape_string": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$escapestr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_real_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_report": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_rollback": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_rpl_parse_enabled": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_rpl_probe": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_rpl_query_type": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_select_db": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dbname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_send_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_server_end": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "maxdb_server_init": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$groups",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_sqlstate": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_ssl_set": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ca",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$capath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_stat": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_stmt_affected_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_stmt_bind_param": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$types",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$var1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_bind_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$var1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_close_long_data": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param_nr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_close": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_data_seek": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_errno": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_stmt_error": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_stmt_execute": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_fetch": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_stmt_free_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "maxdb_stmt_init": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "maxdb_stmt_num_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_stmt_param_count": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_stmt_prepare": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_reset": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_stmt_result_metadata": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "maxdb_stmt_send_long_data": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param_nr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_stmt_sqlstate": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "maxdb_stmt_store_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "maxdb_store_result": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "maxdb_thread_id": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "maxdb_thread_safe": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "maxdb_use_result": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "maxdb_warning_count": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "log_cmd_delete": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$writeOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$deleteOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$protocolOptions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_cmd_insert": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$writeOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$protocolOptions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_cmd_update": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$writeOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$updateOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$protocolOptions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_getmore": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_killcursor": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_reply": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$messageHeaders",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$operationHeaders",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "log_write_batch": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$writeOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$batch",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$protocolOptions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "boolean|string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoClient::connect": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoClient::dropDB": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::__get": {
        "args": [
            {
                "name": "$dbname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoDB"
        ]
    },
    "MongoClient::getConnections": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::getHosts": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::getWriteConcern": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::killCursor": {
        "args": [
            {
                "name": "$server_hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int|MongoInt64"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoClient::listDBs": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoClient::selectCollection": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoClient::selectDB": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoDB"
        ]
    },
    "MongoClient::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoClient::setWriteConcern": {
        "args": [
            {
                "name": "$w",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$wtimeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoClient::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB::authenticate": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::command": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "&$hash",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::__construct": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "MongoClient"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoClient"
        ]
    },
    "MongoDB::createCollection": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoDB::createDBRef": {
        "args": [
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$document_or_id",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::drop": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::dropCollection": {
        "args": [
            {
                "name": "$coll",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::execute": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::forceError": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoDB::getCollectionInfo": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::getCollectionNames": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::getDBRef": {
        "args": [
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::getGridFS": {
        "args": [
            {
                "defaultValue": "fs",
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoGridFS"
        ]
    },
    "MongoDB::getProfilingLevel": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::getSlaveOkay": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB::getWriteConcern": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::lastError": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::listCollections": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::prevError": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::repair": {
        "args": [
            {
                "defaultValue": false,
                "name": "$preserve_cloned_files",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$backup_original_files",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::resetError": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB::selectCollection": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoDB::setProfilingLevel": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoDB::setSlaveOkay": {
        "args": [
            {
                "defaultValue": true,
                "name": "$ok",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB::setWriteConcern": {
        "args": [
            {
                "name": "$w",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$wtimeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoDB::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCollection::aggregate": {
        "args": [
            {
                "name": "$pipeline",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::aggregateCursor": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCommandCursor"
        ]
    },
    "MongoCollection::batchInsert": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoCollection::__construct": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "MongoDB"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoDB"
        ]
    },
    "MongoCollection::count": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoCollection::createDBRef": {
        "args": [
            {
                "name": "$document_or_id",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::createIndex": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCollection::deleteIndex": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "string|array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::deleteIndexes": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::distinct": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "MongoCollection::drop": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::ensureIndex": {
        "args": [
            {
                "name": "$key|keys",
                "optionalDepth": 0,
                "type": "string|array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCollection::find": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCollection::findAndModify": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$update",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::findOne": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "MongoCollection::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoCollection::getDBRef": {
        "args": [
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::getIndexInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCollection::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::getSlaveOkay": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCollection::getWriteConcern": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::group": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$initial",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$reduce",
                "optionalDepth": 0,
                "type": "MongoCode"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCollection::insert": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool|array"
        ]
    },
    "MongoCollection::parallelCollectionScan": {
        "args": [
            {
                "name": "$num_cursors",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array[MongoCommandCursor]"
        ]
    },
    "MongoCollection::remove": {
        "args": [
            {
                "name": "$criteria",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool|array"
        ]
    },
    "MongoCollection::save": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoCollection::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoCollection::setSlaveOkay": {
        "args": [
            {
                "defaultValue": true,
                "name": "$ok",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCollection::setWriteConcern": {
        "args": [
            {
                "name": "$w",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$wtimeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoCollection::toIndexString": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCollection::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCollection::update": {
        "args": [
            {
                "name": "$criteria",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$new_object",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool|array"
        ]
    },
    "MongoCollection::validate": {
        "args": [
            {
                "defaultValue": false,
                "name": "$scan_data",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::addOption": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::awaitData": {
        "args": [
            {
                "defaultValue": true,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::batchSize": {
        "args": [
            {
                "name": "$batchSize",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::__construct": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "MongoClient"
            },
            {
                "name": "$ns",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoClient"
        ]
    },
    "MongoCursor::count": {
        "args": [
            {
                "defaultValue": false,
                "name": "$foundOnly",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoCursor::current": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::dead": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCursor::doQuery": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoCursor::explain": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::fields": {
        "args": [
            {
                "name": "$f",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::getNext": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::hasNext": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCursor::hint": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::immortal": {
        "args": [
            {
                "defaultValue": true,
                "name": "$liveForever",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::key": {
        "args": [],
        "returnTypes": [
            "string|int"
        ]
    },
    "MongoCursor::limit": {
        "args": [
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::maxTimeMS": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::next": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursor::partial": {
        "args": [
            {
                "defaultValue": true,
                "name": "$okay",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::reset": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoCursor::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoCursor::setFlag": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$set",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::skip": {
        "args": [
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::slaveOkay": {
        "args": [
            {
                "defaultValue": true,
                "name": "$okay",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::snapshot": {
        "args": [],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::sort": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::tailable": {
        "args": [
            {
                "defaultValue": true,
                "name": "$tail",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::timeout": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursor"
        ]
    },
    "MongoCursor::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCursorInterface::batchSize": {
        "args": [
            {
                "name": "$batchSize",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursorInterface"
        ]
    },
    "MongoCursorInterface::dead": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCursorInterface::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursorInterface::info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursorInterface::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCursorInterface"
        ]
    },
    "MongoCursorInterface::timeout": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCursorInterface"
        ]
    },
    "MongoCommandCursor::batchSize": {
        "args": [
            {
                "name": "$batchSize",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCommandCursor"
        ]
    },
    "MongoCommandCursor::__construct": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "MongoClient"
            },
            {
                "name": "$ns",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoClient"
        ]
    },
    "MongoCommandCursor::createFromDocument": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "MongoClient"
            },
            {
                "name": "$hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCommandCursor"
        ]
    },
    "MongoCommandCursor::current": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCommandCursor::dead": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoCommandCursor::getReadPreference": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCommandCursor::info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCommandCursor::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoCommandCursor::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoCommandCursor::rewind": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCommandCursor::setReadPreference": {
        "args": [
            {
                "name": "$read_preference",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCommandCursor"
        ]
    },
    "MongoCommandCursor::timeout": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "MongoCommandCursor"
        ]
    },
    "MongoCommandCursor::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoId::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$id",
                "optionalDepth": 1,
                "type": "string|MongoId"
            }
        ],
        "returnTypes": [
            "string|MongoId"
        ]
    },
    "MongoId::getHostname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoId::getInc": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoId::getPID": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoId::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoId::isValid": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoId::__set_state": {
        "args": [
            {
                "name": "$props",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoId"
        ]
    },
    "MongoId::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCode::__construct": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$scope",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoCode::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDate::__construct": {
        "args": [
            {
                "name": "$sec",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$usec",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDate::toDateTime": {
        "args": [],
        "returnTypes": [
            "DateTime"
        ]
    },
    "MongoDate::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoRegex::__construct": {
        "args": [
            {
                "name": "$regex",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoRegex::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoBinData::__construct": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoBinData::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoInt32::__construct": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoInt32::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoInt64::__construct": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoInt64::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDBRef::create": {
        "args": [
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDBRef::get": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "MongoDB"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "MongoDBRef::isRef": {
        "args": [
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MongoTimestamp::__construct": {
        "args": [
            {
                "name": "$sec",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$inc",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoTimestamp::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoGridFS::__construct": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "MongoDB"
            },
            {
                "defaultValue": "fs",
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "fs",
                "name": "$chunks",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "MongoDB"
        ]
    },
    "MongoGridFS::delete": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool|array"
        ]
    },
    "MongoGridFS::drop": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoGridFS::find": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoGridFSCursor"
        ]
    },
    "MongoGridFS::findOne": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$fields",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "MongoGridFSFile",
            "null"
        ]
    },
    "MongoGridFS::get": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "MongoGridFSFile",
            "null"
        ]
    },
    "MongoGridFS::put": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$metadata",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoGridFS::remove": {
        "args": [
            {
                "name": "$criteria",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool|array"
        ]
    },
    "MongoGridFS::storeBytes": {
        "args": [
            {
                "name": "$bytes",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$metadata",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoGridFS::storeFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string|resource"
            },
            {
                "name": "$metadata",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoGridFS::storeUpload": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$metadata",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoGridfsFile::__construct": {
        "args": [
            {
                "name": "$gridfs",
                "optionalDepth": 0,
                "type": "MongoGridFS"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoGridFS"
        ]
    },
    "MongoGridFSFile::getBytes": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoGridFSFile::getFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoGridFSFile::getResource": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "MongoGridFSFile::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoGridFSFile::write": {
        "args": [
            {
                "defaultValue": null,
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoGridFSCursor::__construct": {
        "args": [
            {
                "name": "$gridfs",
                "optionalDepth": 0,
                "type": "MongoGridFS"
            },
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ns",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoGridFS"
        ]
    },
    "MongoGridFSCursor::current": {
        "args": [],
        "returnTypes": [
            "MongoGridFSFile"
        ]
    },
    "MongoGridFSCursor::getNext": {
        "args": [],
        "returnTypes": [
            "MongoGridFSFile"
        ]
    },
    "MongoGridFSCursor::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoWriteBatch::add": {
        "args": [
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoWriteBatch::execute": {
        "args": [
            {
                "name": "$write_options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoInsertBatch::__construct": {
        "args": [
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "MongoCollection"
            },
            {
                "name": "$write_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoUpdateBatch::__construct": {
        "args": [
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "MongoCollection"
            },
            {
                "name": "$write_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoDeleteBatch::__construct": {
        "args": [
            {
                "name": "$collection",
                "optionalDepth": 0,
                "type": "MongoCollection"
            },
            {
                "name": "$write_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoCollection"
        ]
    },
    "MongoLog::getCallback": {
        "args": [],
        "returnTypes": [
            "callable",
            "false"
        ]
    },
    "MongoLog::getLevel": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoLog::getModule": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoLog::setCallback": {
        "args": [
            {
                "name": "$log_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "MongoLog::setLevel": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoLog::setModule": {
        "args": [
            {
                "name": "$module",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoPool::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoPool::info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoPool::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mongo::connectUtil": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Mongo::getPoolSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Mongo::getSlave": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Mongo::getSlaveOkay": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Mongo::poolDebug": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Mongo::setPoolSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mongo::setSlaveOkay": {
        "args": [
            {
                "defaultValue": true,
                "name": "$ok",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mongo::switchSlave": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "bson_decode": {
        "args": [
            {
                "name": "$bson",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "bson_encode": {
        "args": [
            {
                "name": "$anything",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoResultException::getDocument": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoCursorException::getHost": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "MongoWriteConcernException::getDocument": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\Manager::__construct": {
        "args": [
            {
                "defaultValue": "mongodb://127.0.0.1/",
                "name": "$uri",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$uriOptions",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$driverOptions",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Manager::executeBulkWrite": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$bulk",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\BulkWrite"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\WriteResult"
        ]
    },
    "MongoDB\\Driver\\Manager::executeCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Manager::executeQuery": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Query"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Manager::executeReadCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Manager::executeReadWriteCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Manager::executeWriteCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Manager::getReadConcern": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\ReadConcern"
        ]
    },
    "MongoDB\\Driver\\Manager::getReadPreference": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\ReadPreference"
        ]
    },
    "MongoDB\\Driver\\Manager::getServers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\Manager::getWriteConcern": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\WriteConcern"
        ]
    },
    "MongoDB\\Driver\\Manager::selectServer": {
        "args": [
            {
                "name": "$readPreference",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\ReadPreference"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\Manager::startSession": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Session"
        ]
    },
    "MongoDB\\Driver\\Command::__construct": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$commandOptions",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array|object"
        ]
    },
    "MongoDB\\Driver\\Query::__construct": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$queryOptions",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array|object"
        ]
    },
    "MongoDB\\Driver\\BulkWrite::__construct": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\BulkWrite::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\BulkWrite::delete": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$deleteOptions",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\BulkWrite::insert": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "array|object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\Driver\\BulkWrite::update": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$newObj",
                "optionalDepth": 0,
                "type": "array|object"
            },
            {
                "name": "$updateOptions",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::abortTransaction": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::advanceClusterTime": {
        "args": [
            {
                "name": "$clusterTime",
                "optionalDepth": 0,
                "type": "array|object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::advanceOperationTime": {
        "args": [
            {
                "name": "$operationTime",
                "optionalDepth": 0,
                "type": "MongoDB\\BSON\\TimestampInterface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::commitTransaction": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\Driver\\Session::endSession": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Session::getClusterTime": {
        "args": [],
        "returnTypes": [
            "object|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\Session::getLogicalSessionId": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\Session::getOperationTime": {
        "args": [],
        "returnTypes": [
            "MongoDB\\BSON\\Timestamp|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\Session::startTransaction": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array|object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::bsonSerialize": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::__construct": {
        "args": [
            {
                "name": "$w",
                "optionalDepth": 0,
                "type": "string|integer"
            },
            {
                "name": "$wtimeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$journal",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string|integer"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::getJournal": {
        "args": [],
        "returnTypes": [
            "boolean|null"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::getW": {
        "args": [],
        "returnTypes": [
            "string|integer|null"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::getWtimeout": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\WriteConcern::isDefault": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\ReadPreference::bsonSerialize": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\ReadPreference::__construct": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string|integer"
            },
            {
                "defaultValue": null,
                "name": "$tagSets",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string|integer"
        ]
    },
    "MongoDB\\Driver\\ReadPreference::getMaxStalenessSeconds": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\ReadPreference::getMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\ReadPreference::getTagSets": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\ReadConcern::bsonSerialize": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\ReadConcern::__construct": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\ReadConcern::getLevel": {
        "args": [],
        "returnTypes": [
            "string|null"
        ]
    },
    "MongoDB\\Driver\\ReadConcern::isDefault": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Cursor::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\Driver\\Cursor::getId": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\CursorId"
        ]
    },
    "MongoDB\\Driver\\Cursor::getServer": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\Cursor::isDead": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Cursor::setTypeMap": {
        "args": [
            {
                "name": "$typemap",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Cursor::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\CursorId::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\Driver\\CursorId::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Server::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\Driver\\Server::executeBulkWrite": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$bulk",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\BulkWrite"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\WriteResult"
        ]
    },
    "MongoDB\\Driver\\Server::executeCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Server::executeQuery": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Query"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Server::executeReadCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Server::executeReadWriteCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Server::executeWriteCommand": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Command"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "MongoDB\\Driver\\Cursor"
        ]
    },
    "MongoDB\\Driver\\Server::getHost": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Server::getInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\Server::getLatency": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Server::getPort": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\Server::getTags": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\Server::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\Server::isArbiter": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Server::isHidden": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Server::isPassive": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Server::isPrimary": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Server::isSecondary": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\WriteConcernError::getCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\WriteConcernError::getInfo": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteConcernError::getMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\WriteError::getCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\WriteError::getIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\WriteError::getInfo": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteError::getMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getDeletedCount": {
        "args": [],
        "returnTypes": [
            "integer|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getInsertedCount": {
        "args": [],
        "returnTypes": [
            "integer|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getMatchedCount": {
        "args": [],
        "returnTypes": [
            "integer|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getModifiedCount": {
        "args": [],
        "returnTypes": [
            "integer|null",
            "null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getServer": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getUpsertedCount": {
        "args": [],
        "returnTypes": [
            "integer|null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getUpsertedIds": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getWriteConcernError": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\WriteConcernError|null"
        ]
    },
    "MongoDB\\Driver\\WriteResult::getWriteErrors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "MongoDB\\Driver\\WriteResult::isAcknowledged": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\BSON\\fromJSON": {
        "args": [
            {
                "name": "$json",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\fromPHP": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "array|object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\toCanonicalExtendedJSON": {
        "args": [
            {
                "name": "$bson",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\toJSON": {
        "args": [
            {
                "name": "$bson",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\toPHP": {
        "args": [
            {
                "name": "$bson",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$typeMap",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array|object"
        ]
    },
    "MongoDB\\BSON\\toRelaxedExtendedJSON": {
        "args": [
            {
                "name": "$bson",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Binary::__construct": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Binary::getData": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Binary::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\Binary::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Binary::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Binary::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Binary::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Decimal128::__construct": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Decimal128::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Decimal128::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Decimal128::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Decimal128::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Javascript::__construct": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$scope",
                "optionalDepth": 1,
                "type": "array|object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Javascript::getCode": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Javascript::getScope": {
        "args": [],
        "returnTypes": [
            "object|null"
        ]
    },
    "MongoDB\\BSON\\Javascript::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Javascript::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Javascript::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Javascript::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\MaxKey::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\MaxKey::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\MaxKey::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\MaxKey::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\MinKey::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\MinKey::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\MinKey::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\MinKey::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\ObjectId::__construct": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\ObjectId::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\ObjectId::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\ObjectId::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\ObjectId::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\ObjectId::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Regex::__construct": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$flags",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Regex::getFlags": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Regex::getPattern": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Regex::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Regex::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Regex::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Regex::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Timestamp::__construct": {
        "args": [
            {
                "name": "$increment",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\Timestamp::getIncrement": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\Timestamp::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\Timestamp::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Timestamp::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Timestamp::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Timestamp::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$milliseconds",
                "optionalDepth": 1,
                "type": "integer|float|string|DateTimeInterface"
            }
        ],
        "returnTypes": [
            "integer|float|string|DateTimeInterface"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::toDateTime": {
        "args": [],
        "returnTypes": [
            "DateTime"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\UTCDateTime::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Serializable::bsonSerialize": {
        "args": [],
        "returnTypes": [
            "array|object"
        ]
    },
    "MongoDB\\BSON\\Unserializable::bsonUnserialize": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\BinaryInterface::getData": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\BinaryInterface::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\BinaryInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Decimal128Interface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\JavascriptInterface::getCode": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\JavascriptInterface::getScope": {
        "args": [],
        "returnTypes": [
            "object|null"
        ]
    },
    "MongoDB\\BSON\\JavascriptInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\ObjectIdInterface::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\ObjectIdInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\RegexInterface::getFlags": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\RegexInterface::getPattern": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\RegexInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\TimestampInterface::getIncrement": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\TimestampInterface::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\BSON\\TimestampInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\UTCDateTimeInterface::toDateTime": {
        "args": [],
        "returnTypes": [
            "DateTime"
        ]
    },
    "MongoDB\\BSON\\UTCDateTimeInterface::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\DBPointer::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\DBPointer::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\DBPointer::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\DBPointer::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\DBPointer::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Int64::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\Int64::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Int64::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Int64::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Int64::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Symbol::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\Symbol::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Symbol::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Symbol::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Symbol::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\BSON\\Undefined::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MongoDB\\BSON\\Undefined::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "MongoDB\\BSON\\Undefined::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Undefined::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\BSON\\Undefined::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\addSubscriber": {
        "args": [
            {
                "name": "$subscriber",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Monitoring\\Subscriber"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\removeSubscriber": {
        "args": [
            {
                "name": "$subscriber",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Monitoring\\Subscriber"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getCommandName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getDurationMicros": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getError": {
        "args": [],
        "returnTypes": [
            "Exception"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getOperationId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getReply": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getRequestId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getServer": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommand": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommandName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getDatabaseName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getOperationId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getRequestId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getServer": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getCommandName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getDurationMicros": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getOperationId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getReply": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getRequestId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getServer": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\Server"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandFailed": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandStarted": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandSucceeded": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MongoDB\\Driver\\Exception\\CommandException::getResultDocument": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "MongoDB\\Driver\\Exception\\RuntimeException::hasErrorLabel": {
        "args": [
            {
                "name": "$errorLabel",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MongoDB\\Driver\\Exception\\WriteException::getWriteResult": {
        "args": [],
        "returnTypes": [
            "MongoDB\\Driver\\WriteResult"
        ]
    },
    "msql_affected_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "msql_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_connect": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "msql_create_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_data_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_db_query": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "msql_drop_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "msql_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "msql_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "msql_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "msql_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "msql_field_flags": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msql_field_len": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "msql_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "msql_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_field_table": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "msql_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msql_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msql_list_dbs": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "msql_list_fields": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tablename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "msql_list_tables": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "msql_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "msql_num_rows": {
        "args": [
            {
                "name": "$query_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "msql_pconnect": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "msql_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "msql_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msql_select_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_bind": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$is_output",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$is_null",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": -1,
                "name": "$maxlen",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_connect": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new_link",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mssql_data_seek": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_execute": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": false,
                "name": "$skip_results",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mssql_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mssql_fetch_assoc": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mssql_fetch_batch": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mssql_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mssql_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mssql_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mssql_field_length": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mssql_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mssql_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mssql_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_free_statement": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_get_last_message": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mssql_guid_string": {
        "args": [
            {
                "name": "$binary",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$short_format",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mssql_init": {
        "args": [
            {
                "name": "$sp_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mssql_min_error_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mssql_min_message_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mssql_next_result": {
        "args": [
            {
                "name": "$result_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mssql_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mssql_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mssql_pconnect": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new_link",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "mssql_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$batch_size",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mssql_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mssql_rows_affected": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mssql_select_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_affected_rows": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::autocommit": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::begin_transaction": {
        "args": [
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::change_user": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::character_set_name": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::commit": {
        "args": [
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_connect_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_connect_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$dbname",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$socket",
                "optionalDepth": 6,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli::debug": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::dump_debug_info": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_errno": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_error_list": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_error": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_field_count": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::get_charset": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "mysqli::get_client_info": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_get_client_version": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::get_connection_stats": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_get_host_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_get_proto_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt::get_server_info": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_get_server_version": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::get_warnings": {
        "args": [],
        "returnTypes": [
            "mysqli_warning"
        ]
    },
    "mysqli_info": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::init": {
        "args": [],
        "returnTypes": [
            "mysqli"
        ]
    },
    "mysqli_insert_id": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mysqli::kill": {
        "args": [
            {
                "name": "$processid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::more_results": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::multi_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::next_result": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::options": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::ping": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::poll": {
        "args": [
            {
                "name": "&$read",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$error",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$reject",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sec",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$usec",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysqli_stmt",
            "false"
        ]
    },
    "mysqli::query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$resultmode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mysqli::real_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$dbname",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$socket",
                "optionalDepth": 6,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 7,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::escape_string": {
        "args": [
            {
                "name": "$escapestr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::real_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::reap_async_query": {
        "args": [],
        "returnTypes": [
            "mysqli_result"
        ]
    },
    "mysqli::refresh": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::release_savepoint": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::rollback": {
        "args": [
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::rpl_query_type": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli::savepoint": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::select_db": {
        "args": [
            {
                "name": "$dbname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli::send_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::set_charset": {
        "args": [
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_set_local_infile_default": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli::set_local_infile_handler": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            },
            {
                "name": "$read_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_sqlstate": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::ssl_set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ca",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$capath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::stat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli::stmt_init": {
        "args": [],
        "returnTypes": [
            "mysqli_stmt"
        ]
    },
    "mysqli::store_result": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mysqli_result",
            "false"
        ]
    },
    "mysqli_thread_id": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_thread_safe": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli::use_result": {
        "args": [],
        "returnTypes": [
            "mysqli_result",
            "false"
        ]
    },
    "mysqli_warning_count": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt_affected_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt::attr_get": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt::attr_set": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_stmt::bind_param": {
        "args": [
            {
                "name": "$types",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$var1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::bind_result": {
        "args": [
            {
                "name": "&$var1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::data_seek": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli_stmt_errno": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt_error_list": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_stmt_error": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_stmt::execute": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::fetch": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_stmt_field_count": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt::free_result": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli_stmt::get_result": {
        "args": [],
        "returnTypes": [
            "mysqli_result",
            "false"
        ]
    },
    "mysqli_stmt::get_warnings": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mysqli_stmt_insert_id": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mysqli_stmt::more_results": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_stmt::next_result": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::num_rows": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt_param_count": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_stmt::prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mysqli_stmt::reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt::result_metadata": {
        "args": [],
        "returnTypes": [
            "mysqli_result",
            "false"
        ]
    },
    "mysqli_stmt::send_long_data": {
        "args": [
            {
                "name": "$param_nr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_stmt_sqlstate": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "mysqli_stmt"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqli_stmt::store_result": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_field_tell": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "mysqli_result"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_result::data_seek": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_result::fetch_all": {
        "args": [
            {
                "name": "$resulttype",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mysqli_result::fetch_array": {
        "args": [
            {
                "name": "$resulttype",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "mysqli_result::fetch_assoc": {
        "args": [],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "mysqli_result::fetch_field_direct": {
        "args": [
            {
                "name": "$fieldnr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "mysqli_result::fetch_field": {
        "args": [],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "mysqli_result::fetch_fields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_result::fetch_object": {
        "args": [
            {
                "defaultValue": "stdClass",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "object",
            "null"
        ]
    },
    "mysqli_result::fetch_row": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "mysqli_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "mysqli_result"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_result::field_seek": {
        "args": [
            {
                "name": "$fieldnr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_result::free": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli_fetch_lengths": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "mysqli_result"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "mysqli_result"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_driver::embedded_server_end": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli_driver::embedded_server_start": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$groups",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_report": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqli_warning::__construct": {
        "args": [],
        "returnTypes": []
    },
    "mysqli_warning::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli::disable_reads_from_master": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysqli_disable_rpl_parse": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_enable_reads_from_master": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_enable_rpl_parse": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_get_cache_stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_get_client_stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_get_links_stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqli_master_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_rpl_parse_enabled": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqli_rpl_probe": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqli_slave_query": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "mysqli"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\expression": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mysql_xdevapi\\getSession": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Session"
        ]
    },
    "mysql_xdevapi\\BaseResult::getWarnings": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mysql_xdevapi\\BaseResult::getWarningsCount": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\Collection::add": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionAdd"
        ]
    },
    "mysql_xdevapi\\Collection::addOrReplaceOne": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Collection::count": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\Collection::createIndex": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index_desc_json",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysql_xdevapi\\Collection::dropIndex": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Collection::existsInDatabase": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Collection::find": {
        "args": [
            {
                "name": "$search_condition",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\Collection::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Collection::getOne": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Document",
            "null"
        ]
    },
    "mysql_xdevapi\\Collection::getSchema": {
        "args": [],
        "returnTypes": [
            "Schema Object",
            "null"
        ]
    },
    "mysql_xdevapi\\Collection::getSession": {
        "args": [],
        "returnTypes": [
            "Session"
        ]
    },
    "mysql_xdevapi\\Collection::modify": {
        "args": [
            {
                "name": "$search_condition",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\Collection::remove": {
        "args": [
            {
                "name": "$search_condition",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionRemove"
        ]
    },
    "mysql_xdevapi\\Collection::removeOne": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Collection::replaceOne": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\CollectionAdd::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\CollectionFind::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\DocResult"
        ]
    },
    "mysql_xdevapi\\CollectionFind::fields": {
        "args": [
            {
                "name": "$projection",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::groupBy": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::having": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::lockExclusive": {
        "args": [
            {
                "name": "$lock_waiting_option",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::lockShared": {
        "args": [
            {
                "name": "$lock_waiting_option",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::offset": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionFind::sort": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionFind"
        ]
    },
    "mysql_xdevapi\\CollectionModify::arrayAppend": {
        "args": [
            {
                "name": "$collection_field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expression_or_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::arrayInsert": {
        "args": [
            {
                "name": "$collection_field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expression_or_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\CollectionModify::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::patch": {
        "args": [
            {
                "name": "$document",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::replace": {
        "args": [
            {
                "name": "$collection_field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expression_or_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::set": {
        "args": [
            {
                "name": "$collection_field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expression_or_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::skip": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::sort": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionModify::unset": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionModify"
        ]
    },
    "mysql_xdevapi\\CollectionRemove::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionRemove"
        ]
    },
    "mysql_xdevapi\\CollectionRemove::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\CollectionRemove::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionRemove"
        ]
    },
    "mysql_xdevapi\\CollectionRemove::sort": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CollectionRemove"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getCharacterSetName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getCollationName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getColumnLabel": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getColumnName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getFractionalDigits": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getLength": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getSchemaName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getTableLabel": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getTableName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\ColumnResult::getType": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\ColumnResult::isNumberSigned": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\ColumnResult::isPadded": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\CrudOperationBindable::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CrudOperationBindable"
        ]
    },
    "mysql_xdevapi\\CrudOperationLimitable::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CrudOperationLimitable"
        ]
    },
    "mysql_xdevapi\\CrudOperationSkippable::skip": {
        "args": [
            {
                "name": "$skip",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CrudOperationSkippable"
        ]
    },
    "mysql_xdevapi\\CrudOperationSortable::sort": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\CrudOperationSortable"
        ]
    },
    "mysql_xdevapi\\DatabaseObject::existsInDatabase": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\DatabaseObject::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\DatabaseObject::getSession": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Session"
        ]
    },
    "mysql_xdevapi\\DocResult::fetchAll": {
        "args": [],
        "returnTypes": [
            "Array"
        ]
    },
    "mysql_xdevapi\\DocResult::fetchOne": {
        "args": [],
        "returnTypes": [
            "Object"
        ]
    },
    "mysql_xdevapi\\DocResult::getWarnings": {
        "args": [],
        "returnTypes": [
            "Array",
            "false"
        ]
    },
    "mysql_xdevapi\\DocResult::getWarningsCount": {
        "args": [],
        "returnTypes": [
            "integer",
            "false"
        ]
    },
    "mysql_xdevapi\\Executable::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Result::getAutoIncrementValue": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mysql_xdevapi\\Result::getGeneratedIds": {
        "args": [],
        "returnTypes": [
            "ArrayOfInt"
        ]
    },
    "mysql_xdevapi\\Result::getWarnings": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\Result::getWarningsCount": {
        "args": [],
        "returnTypes": [
            "integer",
            "false"
        ]
    },
    "mysql_xdevapi\\RowResult::fetchAll": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\RowResult::fetchOne": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "mysql_xdevapi\\RowResult::getColumnCount": {
        "args": [],
        "returnTypes": [
            "integer",
            "false"
        ]
    },
    "mysql_xdevapi\\RowResult::getColumnNames": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mysql_xdevapi\\RowResult::getColumns": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mysql_xdevapi\\RowResult::getWarnings": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\RowResult::getWarningsCount": {
        "args": [],
        "returnTypes": [
            "integer",
            "false"
        ]
    },
    "mysql_xdevapi\\Schema::createCollection": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Collection"
        ]
    },
    "mysql_xdevapi\\Schema::dropCollection": {
        "args": [
            {
                "name": "$collection_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Schema::existsInDatabase": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Schema::getCollection": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Collection"
        ]
    },
    "mysql_xdevapi\\Schema::getCollectionAsTable": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Table"
        ]
    },
    "mysql_xdevapi\\Schema::getCollections": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\Schema::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Schema::getSession": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Session"
        ]
    },
    "mysql_xdevapi\\Schema::getTable": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Table"
        ]
    },
    "mysql_xdevapi\\Schema::getTables": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\SchemaObject::getSchema": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Schema"
        ]
    },
    "mysql_xdevapi\\Session::close": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Session::commit": {
        "args": [],
        "returnTypes": [
            "Object"
        ]
    },
    "mysql_xdevapi\\Session::createSchema": {
        "args": [
            {
                "name": "$schema_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Schema"
        ]
    },
    "mysql_xdevapi\\Session::dropSchema": {
        "args": [
            {
                "name": "$schema_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_xdevapi\\Session::executeSql": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Object"
        ]
    },
    "mysql_xdevapi\\Session::generateUUID": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Session::getClientId": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\Session::getSchema": {
        "args": [
            {
                "name": "$schema_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\Schema"
        ]
    },
    "mysql_xdevapi\\Session::getSchemas": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\Session::getServerVersion": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\Session::killClient": {
        "args": [
            {
                "name": "$client_id",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mysql_xdevapi\\Session::listClients": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\Session::quoteName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Session::releaseSavepoint": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysql_xdevapi\\Session::rollback": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysql_xdevapi\\Session::rollbackTo": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mysql_xdevapi\\Session::setSavepoint": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Session::sql": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\SqlStatement"
        ]
    },
    "mysql_xdevapi\\Session::startTransaction": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "mysql_xdevapi\\SqlStatement::bind": {
        "args": [
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\SqlStatement"
        ]
    },
    "mysql_xdevapi\\SqlStatement::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\SqlStatement::getNextResult": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\SqlStatement::getResult": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\SqlStatement::hasMoreResults": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::fetchAll": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::fetchOne": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getAffectedItemsCount": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getColumnCount": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getColumnNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getColumns": {
        "args": [],
        "returnTypes": [
            "Array"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getGeneratedIds": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getLastInsertId": {
        "args": [],
        "returnTypes": [
            "String"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getWarnings": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::getWarningCounts": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::hasData": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\SqlStatementResult::nextResult": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Statement::getNextResult": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Statement::getResult": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\Statement::hasMoreResults": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Table::count": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "mysql_xdevapi\\Table::delete": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\Table::existsInDatabase": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Table::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_xdevapi\\Table::getSchema": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Schema"
        ]
    },
    "mysql_xdevapi\\Table::getSession": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Session"
        ]
    },
    "mysql_xdevapi\\Table::insert": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableInsert"
        ]
    },
    "mysql_xdevapi\\Table::isView": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_xdevapi\\Table::select": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\Table::update": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableDelete::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\TableDelete::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\TableDelete::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\TableDelete::offset": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\TableDelete::orderby": {
        "args": [
            {
                "name": "$orderby_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\TableDelete::where": {
        "args": [
            {
                "name": "$where_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableDelete"
        ]
    },
    "mysql_xdevapi\\TableInsert::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\Result"
        ]
    },
    "mysql_xdevapi\\TableInsert::values": {
        "args": [
            {
                "name": "$row_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableInsert"
        ]
    },
    "mysql_xdevapi\\TableSelect::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\RowResult"
        ]
    },
    "mysql_xdevapi\\TableSelect::groupBy": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::having": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::lockExclusive": {
        "args": [
            {
                "name": "$lock_waiting_option",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::lockShared": {
        "args": [
            {
                "name": "$lock_waiting_option",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::offset": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::orderby": {
        "args": [
            {
                "name": "$sort_expr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableSelect::where": {
        "args": [
            {
                "name": "$where_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableSelect"
        ]
    },
    "mysql_xdevapi\\TableUpdate::bind": {
        "args": [
            {
                "name": "$placeholder_values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableUpdate::execute": {
        "args": [],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableUpdate::limit": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableUpdate::orderby": {
        "args": [
            {
                "name": "$orderby_expr",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableUpdate::set": {
        "args": [
            {
                "name": "$table_field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expression_or_literal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_xdevapi\\TableUpdate::where": {
        "args": [
            {
                "name": "$where_expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mysql_xdevapi\\TableUpdate"
        ]
    },
    "mysql_affected_rows": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysql_client_encoding": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_close": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_connect": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new_link",
                "optionalDepth": 4,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$client_flags",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_create_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_data_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_db_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$field",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_db_query": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_drop_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_errno": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysql_error": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_escape_string": {
        "args": [
            {
                "name": "$unescaped_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mysql_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "mysql_fetch_lengths": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mysql_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "mysql_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysql_field_flags": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_field_len": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_field_table": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_get_client_info": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_get_host_info": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_get_proto_info": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_get_server_info": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_info": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_insert_id": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_list_dbs": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_list_fields": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_list_processes": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_list_tables": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_pconnect": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$client_flags",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysql_ping": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysql_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mysql_real_escape_string": {
        "args": [
            {
                "name": "$unescaped_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$field",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_select_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_set_charset": {
        "args": [
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysql_stat": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysql_tablename": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$i",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mysql_thread_id": {
        "args": [
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mysql_unbuffered_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "mysqlnd_ms_dump_servers": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_ms_fabric_select_global": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_ms_fabric_select_shard": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$shard_key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_ms_get_last_gtid": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mysqlnd_ms_get_last_used_connection": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_ms_get_stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_ms_match_wild": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$wildcard",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_ms_query_is_select": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqlnd_ms_set_qos": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$service_level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$service_level_option",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$option_value",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_ms_set_user_pick_server": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_ms_xa_begin": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$gtrid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqlnd_ms_xa_commit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$gtrid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqlnd_ms_xa_gc": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$gtrid",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ignore_max_retries",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqlnd_ms_xa_rollback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$gtrid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mysqlnd_qc_clear_cache": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqlnd_qc_get_available_handlers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_qc_get_cache_info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_qc_get_core_stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_qc_get_normalized_query_trace_log": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_qc_get_query_trace_log": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_qc_set_cache_condition": {
        "args": [
            {
                "name": "$condition_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$condition_option",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqlnd_qc_set_is_select": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mysqlnd_qc_set_storage_handler": {
        "args": [
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mysqlnd_qc_set_user_handlers": {
        "args": [
            {
                "name": "$get_hash",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$find_query_in_cache",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return_to_cache",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$add_query_to_cache_if_not_exists",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query_is_select",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$update_query_run_time_stats",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$get_stats",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$clear_cache",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MysqlndUhConnection::changeUser": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$silent",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$passwd_len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::charsetName": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$close_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::connect": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$use\"",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mysql_flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MysqlndUhConnection::endPSession": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::escapeString": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$escape_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getAffectedRows": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getErrorNumber": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getErrorString": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getFieldCount": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getHostInformation": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getLastInsertId": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getLastMessage": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MysqlndUhConnection::getProtocolInformation": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getServerInformation": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getServerStatistics": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getServerVersion": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getSqlstate": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "MysqlndUhConnection::getStatistics": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MysqlndUhConnection::getThreadId": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::getWarningCount": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "MysqlndUhConnection::init": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::killConnection": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::listFields": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$achtung_wild",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "MysqlndUhConnection::listMethod": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$achtung_wild",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MysqlndUhConnection::moreResults": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::nextResult": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::ping": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::query": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::queryReadResultsetHeader": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$mysqlnd_stmt",
                "optionalDepth": 0,
                "type": "mysqlnd_statement"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::reapQuery": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::refreshServer": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::restartPSession": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::selectDb": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::sendClose": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::sendQuery": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::serverDumpDebugInformation": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::setAutocommit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::setCharset": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::setClientOption": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::setServerOption": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MysqlndUhConnection::shutdownServer": {
        "args": [
            {
                "name": "$MYSQLND_UH_RES_MYSQLND_NAME",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MysqlndUhConnection::simpleCommand": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ok_packet",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$silent",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$ignore_upsert_status",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::simpleCommandHandleResponse": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$ok_packet",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$silent",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$ignore_upsert_status",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::sslSet": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ca",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$capath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cipher",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::stmtInit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "MysqlndUhConnection::storeResult": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "MysqlndUhConnection::txCommit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::txRollback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhConnection::useResult": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mysqlnd_connection"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "MysqlndUhPreparedStatement::__construct": {
        "args": [],
        "returnTypes": []
    },
    "MysqlndUhPreparedStatement::execute": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "mysqlnd_prepared_statement"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "MysqlndUhPreparedStatement::prepare": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "mysqlnd_prepared_statement"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_uh_convert_to_mysqlnd": {
        "args": [
            {
                "name": "&$mysql_connection",
                "optionalDepth": 0,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "mysqlnd_uh_set_connection_proxy": {
        "args": [
            {
                "name": "&$connection_proxy",
                "optionalDepth": 0,
                "type": "MysqlndUhConnection"
            },
            {
                "name": "&$mysqli_connection",
                "optionalDepth": 1,
                "type": "mysqli"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_uh_set_statement_proxy": {
        "args": [
            {
                "name": "&$statement_proxy",
                "optionalDepth": 0,
                "type": "MysqlndUhStatement"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mysqlnd_memcache_get_config": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mysqlnd_memcache_set": {
        "args": [
            {
                "name": "$mysql_connection",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$memcache_connection",
                "optionalDepth": 1,
                "type": "Memcached"
            },
            {
                "name": "$pattern",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 3,
                "type": "callback"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "oci_bind_array_by_name": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$var_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$max_table_length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$max_item_length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_bind_by_name": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bv_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$variable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$maxlength",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_cancel": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_client_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "oci_close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_commit": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_connect": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connection_string",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$character_set",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$session_mode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "oci_define_by_name": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$column_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$variable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_error": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "oci_execute": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_fetch_all": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$output",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$skip",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$maxrows",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_fetch_array": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "oci_fetch_assoc": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "oci_fetch_object": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "oci_fetch_row": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "oci_fetch": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_field_is_null": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "oci_field_name": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "oci_field_precision": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_field_scale": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_field_size": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_field_type_raw": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_field_type": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "oci_free_descriptor": {
        "args": [
            {
                "name": "$descriptor",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_free_statement": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_get_implicit_resultset": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource "
        ]
    },
    "oci_internal_debug": {
        "args": [
            {
                "name": "$onoff",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "oci_lob_copy": {
        "args": [
            {
                "name": "$lob_to",
                "optionalDepth": 0,
                "type": "OCI-Lob"
            },
            {
                "name": "$lob_from",
                "optionalDepth": 0,
                "type": "OCI-Lob"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_lob_is_equal": {
        "args": [
            {
                "name": "$lob1",
                "optionalDepth": 0,
                "type": "OCI-Lob"
            },
            {
                "name": "$lob2",
                "optionalDepth": 0,
                "type": "OCI-Lob"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "oci_new_collection": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tdo",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$schema",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "OCI-Collection",
            "false"
        ]
    },
    "oci_new_connect": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connection_string",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$character_set",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$session_mode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "oci_new_cursor": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "oci_new_descriptor": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "OCI-Lob"
        ]
    },
    "oci_num_fields": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_num_rows": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "oci_parse": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sql_text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "oci_password_change": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$old_password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_pconnect": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connection_string",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$character_set",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$session_mode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "oci_register_taf_callback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callbackFn",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_result": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "oci_rollback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_server_version": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "oci_set_action": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$action_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_call_timeout": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$time_out",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_client_identifier": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$client_identifier",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_client_info": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$client_info",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_db_operation": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dbop",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_edition": {
        "args": [
            {
                "name": "$edition",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_module_name": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$module_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_set_prefetch": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "oci_statement_type": {
        "args": [
            {
                "name": "$statement",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "oci_unregister_taf_callback": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Collection::append": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Collection::assign": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "OCI-Collection"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Collection::assignElem": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Collection::free": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Collection::getElem": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "OCI-Collection::max": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Collection::size": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Collection::trim": {
        "args": [
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::append": {
        "args": [
            {
                "name": "$lob_from",
                "optionalDepth": 0,
                "type": "OCI-Lob"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::eof": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OCI-Lob::erase": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Lob::export": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::flush": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::free": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::getBuffering": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OCI-Lob::import": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::load": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "OCI-Lob::read": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "OCI-Lob::rewind": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::save": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::seek": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::setBuffering": {
        "args": [
            {
                "name": "$on_off",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::size": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Lob::tell": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Lob::truncate": {
        "args": [
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OCI-Lob::write": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "OCI-Lob::writeTemporary": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lob_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_close": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_create_fp": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fielddesc",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_date2string": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "px_delete_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_delete": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_get_field": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldno",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "px_get_info": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "px_get_parameter": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "px_get_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "px_get_schema": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "px_get_value": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "px_insert_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "px_new": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "px_numfields": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "px_numrecords": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "px_open_fp": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_put_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$record",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": -1,
                "name": "$recpos",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_retrieve_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "px_set_blob_file": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_set_parameter": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_set_tablename": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "px_set_targetencoding": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "px_set_value": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "px_timestamp2string": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "px_update_record": {
        "args": [
            {
                "name": "$pxdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_affected_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_cancel_query": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_client_encoding": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_connect_poll": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_connect": {
        "args": [
            {
                "name": "$connection_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connect_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "pg_connection_busy": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pg_connection_reset": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_connection_status": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_consume_input": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_convert": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$assoc_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "pg_copy_from": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_copy_to": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$null_as",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_dbname": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_delete": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$assoc_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_end_copy": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_escape_bytea": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_escape_identifier": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_escape_literal": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_escape_string": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_execute": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$stmtname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_fetch_all_columns": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$column",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_fetch_all": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$result_type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$result_type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "pg_fetch_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_field_is_null": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_field_num": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_field_prtlen": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_name_or_number",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pg_field_size": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_field_table": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$oid_only",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "pg_field_type_oid": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_field_type": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_flush": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_get_notify": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pg_get_pid": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_get_result": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_host": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_insert": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$assoc_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_last_error": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_last_notice": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_last_oid": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_lo_close": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_lo_create": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$object_id",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pg_lo_export": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_lo_import": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_lo_open": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_lo_read_all": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pg_lo_read": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 8192,
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_lo_seek": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_lo_tell": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_lo_truncate": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_lo_unlink": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_lo_write": {
        "args": [
            {
                "name": "$large_object",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pg_meta_data": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$extended",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "pg_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_options": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_parameter_status": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$param_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_pconnect": {
        "args": [
            {
                "name": "$connection_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connect_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "pg_ping": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_port": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pg_prepare": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$stmtname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_put_line": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_query_params": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_query": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_result_error_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldcode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_result_error": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_result_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_result_status": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "pg_select": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$assoc_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$result_type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_send_execute": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$stmtname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pg_send_prepare": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$stmtname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pg_send_query_params": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_send_query": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_set_client_encoding": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_set_error_verbosity": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            },
            {
                "name": "$verbosity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_socket": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "pg_trace": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "w",
                "name": "$mode",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$connection",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pg_transaction_status": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pg_tty": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pg_unescape_bytea": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pg_untrace": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pg_update": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "pg_version": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_array_query": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_busy_timeout": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$milliseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sqlite_changes": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_close": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sqlite_column": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index_or_name",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlite_create_aggregate": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$step_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$finalize_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": -1,
                "name": "$num_args",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sqlite_create_function": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": -1,
                "name": "$num_args",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sqlite_current": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_error_string": {
        "args": [
            {
                "name": "$error_code",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_escape_string": {
        "args": [
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_exec": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error_msg",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlite_factory": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 438,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error_message",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SQLiteDatabase"
        ]
    },
    "sqlite_fetch_all": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_fetch_column_types": {
        "args": [
            {
                "name": "$table_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ctor_params",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "sqlite_fetch_single": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": true,
                "name": "$decode_binary",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_field_name": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_has_more": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlite_has_prev": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SQLiteResult::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_last_error": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_last_insert_rowid": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_libencoding": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_libversion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_next": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlite_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlite_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 438,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error_message",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "sqlite_popen": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 438,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error_message",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "sqlite_prev": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlite_query": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error_msg",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "sqlite_rewind": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sqlite_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rownum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sqlite_single_query": {
        "args": [
            {
                "name": "$db",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$first_row_only",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$decode_binary",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlite_udf_decode_binary": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_udf_encode_binary": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sqlite_unbuffered_query": {
        "args": [
            {
                "name": "$dbhandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$result_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error_msg",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "sqlite_valid": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SQLite3::busyTimeout": {
        "args": [
            {
                "name": "$msecs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::changes": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3::close": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$encryption_key",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SQLite3::createAggregate": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$step_callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$final_callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$argument_count",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::createCollation": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SQLite3::createFunction": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$argument_count",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::enableExceptions": {
        "args": [
            {
                "defaultValue": false,
                "name": "$enableExceptions",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::escapeString": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SQLite3::exec": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::lastErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3::lastErrorMsg": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SQLite3::lastInsertRowID": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3::loadExtension": {
        "args": [
            {
                "name": "$shared_library",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3::open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$encryption_key",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SQLite3::openBlob": {
        "args": [
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rowid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "main",
                "name": "$dbname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "SQLite3::prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SQLite3Stmt",
            "false"
        ]
    },
    "SQLite3::query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SQLite3Result",
            "false"
        ]
    },
    "SQLite3::querySingle": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$entire_row",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SQLite3::version": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SQLite3Stmt::bindParam": {
        "args": [
            {
                "name": "$sql_param",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$param",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Stmt::bindValue": {
        "args": [
            {
                "name": "$sql_param",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Stmt::clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Stmt::close": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Stmt::execute": {
        "args": [],
        "returnTypes": [
            "SQLite3Result"
        ]
    },
    "SQLite3Stmt::getSQL": {
        "args": [
            {
                "defaultValue": false,
                "name": "$expanded",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SQLite3Stmt::paramCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3Stmt::readOnly": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Stmt::reset": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Result::columnName": {
        "args": [
            {
                "name": "$column_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SQLite3Result::columnType": {
        "args": [
            {
                "name": "$column_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3Result::fetchArray": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SQLite3Result::finalize": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SQLite3Result::numColumns": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SQLite3Result::reset": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "sqlsrv_begin_transaction": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_cancel": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_client_info": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlsrv_close": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_commit": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_configure": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_connect": {
        "args": [
            {
                "name": "$serverName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$connectionInfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "sqlsrv_errors": {
        "args": [
            {
                "name": "$errorsOrWarnings",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_execute": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_fetch_array": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fetchType",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$row",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sqlsrv_fetch_object": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$className",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ctorParams",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$row",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_fetch": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_field_metadata": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "sqlsrv_free_stmt": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_get_config": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_get_field": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldIndex",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$getAsType",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_has_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sqlsrv_next_result": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_num_fields": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_num_rows": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_prepare": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sql",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_query": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sql",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sqlsrv_rollback": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sqlsrv_rows_affected": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sqlsrv_send_stream_data": {
        "args": [
            {
                "name": "$stmt",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sqlsrv_server_info": {
        "args": [
            {
                "name": "$conn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sybase_affected_rows": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sybase_close": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_connect": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$appname",
                "optionalDepth": 5,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$new",
                "optionalDepth": 6,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "sybase_data_seek": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_deadlock_retry_count": {
        "args": [
            {
                "name": "$retry_count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sybase_fetch_array": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "sybase_fetch_assoc": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "sybase_fetch_field": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$field_offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "sybase_fetch_object": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$object",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "sybase_fetch_row": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "sybase_field_seek": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_free_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_get_last_message": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "sybase_min_client_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sybase_min_error_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sybase_min_message_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sybase_min_server_severity": {
        "args": [
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "sybase_num_fields": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sybase_num_rows": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sybase_pconnect": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$appname",
                "optionalDepth": 5,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "sybase_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "sybase_result": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sybase_select_db": {
        "args": [
            {
                "name": "$database_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_set_message_handler": {
        "args": [
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sybase_unbuffered_query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$store_result",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "TokyoTyrant::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$increment",
                "optionalDepth": 0,
                "type": "number"
            },
            {
                "defaultValue": null,
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "TokyoTyrant::connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::connectUri": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::__construct": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "TokyoTyrant::copy": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::ext": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "TokyoTyrant::fwmKeys": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$max_recs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrant::get": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrant::getIterator": {
        "args": [],
        "returnTypes": [
            "TokyoTyrantIterator"
        ]
    },
    "TokyoTyrant::num": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "TokyoTyrant::out": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::put": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::putCat": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::putKeep": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::putNr": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::putShl": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrant::restore": {
        "args": [
            {
                "name": "$log_dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$check_consistency",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrant::setMaster": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$check_consistency",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrant::size": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "TokyoTyrant::stat": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrant::sync": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrant::tune": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "TokyoTyrant"
        ]
    },
    "TokyoTyrant::vanish": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantTable::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$increment",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::genUid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "TokyoTyrantTable::get": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrantTable::getIterator": {
        "args": [],
        "returnTypes": [
            "TokyoTyrantIterator"
        ]
    },
    "TokyoTyrantTable::getQuery": {
        "args": [],
        "returnTypes": [
            "TokyoTyrantQuery"
        ]
    },
    "TokyoTyrantTable::out": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::put": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "TokyoTyrantTable::putCat": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::putKeep": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::putNr": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::putShl": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantTable::setIndex": {
        "args": [
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantQuery::addCond": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$op",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$expr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantQuery::__construct": {
        "args": [
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "TokyoTyrantTable"
            }
        ],
        "returnTypes": [
            "TokyoTyrantTable"
        ]
    },
    "TokyoTyrantQuery::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "TokyoTyrantQuery::current": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrantQuery::hint": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "TokyoTyrantQuery::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "TokyoTyrantQuery::metaSearch": {
        "args": [
            {
                "name": "$queries",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrantQuery::next": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrantQuery::out": {
        "args": [],
        "returnTypes": [
            "TokyoTyrantQuery"
        ]
    },
    "TokyoTyrantQuery::rewind": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "TokyoTyrantQuery::search": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "TokyoTyrantQuery::setLimit": {
        "args": [
            {
                "name": "$max",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$skip",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantQuery::setOrder": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantQuery::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "TokyoTyrantIterator::__construct": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantIterator::next": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "TokyoTyrantIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "TokyoTyrantIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "cal_days_in_month": {
        "args": [
            {
                "name": "$calendar",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cal_from_jd": {
        "args": [
            {
                "name": "$jd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$calendar",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cal_info": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$calendar",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cal_to_jd": {
        "args": [
            {
                "name": "$calendar",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "easter_date": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "easter_days": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$method",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "frenchtojd": {
        "args": [
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gregoriantojd": {
        "args": [
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "jddayofweek": {
        "args": [
            {
                "name": "$julianday",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "jdmonthname": {
        "args": [
            {
                "name": "$julianday",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "jdtofrench": {
        "args": [
            {
                "name": "$juliandaycount",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "jdtogregorian": {
        "args": [
            {
                "name": "$julianday",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "jdtojewish": {
        "args": [
            {
                "name": "$juliandaycount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$hebrew",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$fl",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "jdtojulian": {
        "args": [
            {
                "name": "$julianday",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "jdtounix": {
        "args": [
            {
                "name": "$jday",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "jewishtojd": {
        "args": [
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "juliantojd": {
        "args": [
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "unixtojd": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "DateTime::add": {
        "args": [
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "DateInterval"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "date_create": {
        "args": [
            {
                "defaultValue": "now",
                "name": "$time",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$timezone",
                "optionalDepth": 2,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTime"
        ]
    },
    "DateTime::createFromFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$time",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timezone",
                "optionalDepth": 1,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::getLastErrors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "DateTime::modify": {
        "args": [
            {
                "name": "$modify",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::__set_state": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "DateTime"
        ]
    },
    "DateTime::setDate": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::setISODate": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$week",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 1,
                "name": "$day",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::setTime": {
        "args": [
            {
                "name": "$hour",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$minute",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$second",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$microseconds",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::setTimestamp": {
        "args": [
            {
                "name": "$unixtimestamp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::setTimezone": {
        "args": [
            {
                "name": "$timezone",
                "optionalDepth": 0,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTime::sub": {
        "args": [
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "DateInterval"
            }
        ],
        "returnTypes": [
            "DateTime",
            "false"
        ]
    },
    "DateTimeImmutable::add": {
        "args": [
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "DateInterval"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "date_create_immutable": {
        "args": [
            {
                "defaultValue": "now",
                "name": "$time",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$timezone",
                "optionalDepth": 2,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::createFromFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$time",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timezone",
                "optionalDepth": 1,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::createFromMutable": {
        "args": [
            {
                "name": "$datetime",
                "optionalDepth": 0,
                "type": "DateTime"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::getLastErrors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "DateTimeImmutable::modify": {
        "args": [
            {
                "name": "$modify",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable",
            "false"
        ]
    },
    "DateTimeImmutable::__set_state": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::setDate": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::setISODate": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$week",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 1,
                "name": "$day",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::setTime": {
        "args": [
            {
                "name": "$hour",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$minute",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$second",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$microseconds",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::setTimestamp": {
        "args": [
            {
                "name": "$unixtimestamp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::setTimezone": {
        "args": [
            {
                "name": "$timezone",
                "optionalDepth": 0,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTimeImmutable::sub": {
        "args": [
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "DateInterval"
            }
        ],
        "returnTypes": [
            "DateTimeImmutable"
        ]
    },
    "DateTime::diff": {
        "args": [
            {
                "name": "$datetime2",
                "optionalDepth": 0,
                "type": "DateTimeInterface"
            },
            {
                "defaultValue": false,
                "name": "$absolute",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "DateInterval",
            "false"
        ]
    },
    "DateTime::format": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "DateTime::getOffset": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DateTime::getTimestamp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DateTime::getTimezone": {
        "args": [],
        "returnTypes": [
            "DateTimeZone",
            "false"
        ]
    },
    "DateTime::__wakeup": {
        "args": [],
        "returnTypes": []
    },
    "timezone_open": {
        "args": [
            {
                "name": "$timezone",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DateTimeZone"
        ]
    },
    "DateTimeZone::getLocation": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "DateTimeZone::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DateTimeZone::getOffset": {
        "args": [
            {
                "name": "$datetime",
                "optionalDepth": 0,
                "type": "DateTime"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DateTimeZone::getTransitions": {
        "args": [
            {
                "name": "$timestamp_begin",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$timestamp_end",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "DateTimeZone::listAbbreviations": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "DateTimeZone::listIdentifiers": {
        "args": [
            {
                "name": "$what",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$country",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "DateInterval::createFromDateString": {
        "args": [
            {
                "name": "$time",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DateInterval"
        ]
    },
    "DateInterval::format": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DatePeriod::getDateInterval": {
        "args": [],
        "returnTypes": [
            "DateInterval"
        ]
    },
    "DatePeriod::getEndDate": {
        "args": [],
        "returnTypes": [
            "DateTimeInterface"
        ]
    },
    "DatePeriod::getStartDate": {
        "args": [],
        "returnTypes": [
            "DateTimeInterface"
        ]
    },
    "checkdate": {
        "args": [
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "date_default_timezone_get": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "date_default_timezone_set": {
        "args": [
            {
                "name": "$timezone_identifier",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "date_parse_from_format": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "date_parse": {
        "args": [
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "date_sun_info": {
        "args": [
            {
                "name": "$time",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$latitude",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$longitude",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "date_sunrise": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$latitude",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "name": "$longitude",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "name": "$zenith",
                "optionalDepth": 4,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$gmt_offset",
                "optionalDepth": 5,
                "type": "float"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "date_sunset": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$latitude",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "name": "$longitude",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "name": "$zenith",
                "optionalDepth": 4,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$gmt_offset",
                "optionalDepth": 5,
                "type": "float"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "date": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "getdate": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gettimeofday": {
        "args": [
            {
                "defaultValue": false,
                "name": "$return_float",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "gmdate": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gmmktime": {
        "args": [
            {
                "name": "$hour",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$minute",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$second",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 6,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$is_dst",
                "optionalDepth": 7,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmstrftime": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "idate": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "localtime": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$is_associative",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "microtime": {
        "args": [
            {
                "defaultValue": false,
                "name": "$get_as_float",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mktime": {
        "args": [
            {
                "name": "$hour",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$minute",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$second",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 6,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$is_dst",
                "optionalDepth": 7,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strftime": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timestamp",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strptime": {
        "args": [
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "strtotime": {
        "args": [
            {
                "name": "$time",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$now",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "time": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "timezone_name_from_abbr": {
        "args": [
            {
                "name": "$abbr",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$gmtOffset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$isdst",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "timezone_version_get": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "HRTime\\PerformanceCounter::getFrequency": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HRTime\\PerformanceCounter::getTicks": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HRTime\\PerformanceCounter::getTicksSince": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HRTime\\StopWatch::getElapsedTicks": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HRTime\\StopWatch::getElapsedTime": {
        "args": [
            {
                "name": "$unit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "HRTime\\StopWatch::getLastElapsedTicks": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HRTime\\StopWatch::getLastElapsedTime": {
        "args": [
            {
                "name": "$unit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "HRTime\\StopWatch::isRunning": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HRTime\\StopWatch::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "HRTime\\StopWatch::stop": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "dio_close": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "dio_fcntl": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cmd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "dio_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "dio_read": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 1024,
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dio_seek": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pos",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "dio_stat": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "dio_tcsetattr": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "dio_truncate": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dio_write": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Directory::close": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Directory::read": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Directory::rewind": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "chdir": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "chroot": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "closedir": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "dir": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "Directory",
            "false",
            "null"
        ]
    },
    "getcwd": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "opendir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "readdir": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "rewinddir": {
        "args": [
            {
                "name": "$dir_handle",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "scandir": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sorting_order",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "finfo_buffer": {
        "args": [
            {
                "name": "$finfo",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "finfo_close": {
        "args": [
            {
                "name": "$finfo",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "finfo_file": {
        "args": [
            {
                "name": "$finfo",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "finfo_open": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$magic_file",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "finfo_set_flags": {
        "args": [
            {
                "name": "$finfo",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mime_content_type": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "finfo::buffer": {
        "args": [
            {
                "defaultValue": null,
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "finfo::file": {
        "args": [
            {
                "defaultValue": null,
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "finfo::set_flags": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "basename": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$suffix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "chgrp": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$group",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "chmod": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "chown": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "clearstatcache": {
        "args": [
            {
                "defaultValue": false,
                "name": "$clear_realpath_cache",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$filename",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "copy": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "dirname": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$levels",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "disk_free_space": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "disk_total_space": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fclose": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "feof": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fflush": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fgetc": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fgetcsv": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fgets": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fgetss": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$allowable_tags",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "file_exists": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "file_get_contents": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$maxlen",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "file_put_contents": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fileatime": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filectime": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filegroup": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fileinode": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filemtime": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fileowner": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fileperms": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "filesize": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filetype": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "flock": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$operation",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$wouldblock",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fnmatch": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fopen": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fpassthru": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fputcsv": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape_char",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fread": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "fscanf": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "fseek": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fstat": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ftell": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftruncate": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fwrite": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "glob": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "is_dir": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_executable": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "is_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_link": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_readable": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_uploaded_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "is_writable": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "lchgrp": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$group",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "lchown": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "link": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "linkinfo": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "lstat": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mkdir": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 511,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$context",
                "optionalDepth": 3,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "move_uploaded_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "parse_ini_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$process_sections",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$scanner_mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "parse_ini_string": {
        "args": [
            {
                "name": "$ini",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$process_sections",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$scanner_mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "pathinfo": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "pclose": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "popen": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "readfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "readlink": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "realpath_cache_get": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "realpath_cache_size": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "realpath": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "rename": {
        "args": [
            {
                "name": "$oldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rewind": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rmdir": {
        "args": [
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stat": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "symlink": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tempnam": {
        "args": [
            {
                "name": "$dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "tmpfile": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "touch": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$time",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$atime",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "umask": {
        "args": [
            {
                "name": "$mask",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "unlink": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$context",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "inotify_add_watch": {
        "args": [
            {
                "name": "$inotify_instance",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mask",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "inotify_init": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "inotify_queue_len": {
        "args": [
            {
                "name": "$inotify_instance",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "inotify_read": {
        "args": [
            {
                "name": "$inotify_instance",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "inotify_rm_watch": {
        "args": [
            {
                "name": "$inotify_instance",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$watch_descriptor",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::connect": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::__construct": {
        "args": [
            {
                "name": "$ip",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "phdfs::copy": {
        "args": [
            {
                "name": "$source_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$destination_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::create_directory": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::delete": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "phdfs::disconnect": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::exists": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::file_info": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "phdfs::list_directory": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "phdfs::read": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "phdfs::rename": {
        "args": [
            {
                "name": "$old_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "phdfs::tell": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1024,
                "name": "$read_length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "phdfs::write": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "setproctitle": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "setthreadtitle": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xattr_get": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xattr_list": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "xattr_remove": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xattr_set": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xattr_supported": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xdiff_file_bdiff_size": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xdiff_file_bdiff": {
        "args": [
            {
                "name": "$old_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_file_bpatch": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_file_diff_binary": {
        "args": [
            {
                "name": "$old_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_file_diff": {
        "args": [
            {
                "name": "$old_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 3,
                "name": "$context",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$minimal",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_file_merge3": {
        "args": [
            {
                "name": "$old_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "xdiff_file_patch_binary": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_file_patch": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "xdiff_file_rabdiff": {
        "args": [
            {
                "name": "$old_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xdiff_string_bdiff_size": {
        "args": [
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xdiff_string_bdiff": {
        "args": [
            {
                "name": "$old_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xdiff_string_bpatch": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xdiff_string_diff": {
        "args": [
            {
                "name": "$old_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 3,
                "name": "$context",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$minimal",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xdiff_string_merge3": {
        "args": [
            {
                "name": "$old_data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_data1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_data2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "xdiff_string_patch_binary": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xdiff_string_patch": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$patch",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$error",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "enchant_broker_describe": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "enchant_broker_dict_exists": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tag",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_broker_free_dict": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_broker_free": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_broker_get_dict_path": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dict_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_broker_get_error": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "enchant_broker_init": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "enchant_broker_list_dicts": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "enchant_broker_request_dict": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tag",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "enchant_broker_request_pwl_dict": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "enchant_broker_set_dict_path": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dict_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_broker_set_ordering": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tag",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ordering",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_dict_add_to_personal": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "enchant_dict_add_to_session": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "enchant_dict_check": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "enchant_dict_describe": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "enchant_dict_get_error": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "enchant_dict_is_in_session": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_dict_quick_check": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$suggestions",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "enchant_dict_store_replacement": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mis",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cor",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "enchant_dict_suggest": {
        "args": [
            {
                "name": "$dict",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fribidi_log2vis": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$direction",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Gender\\Gender::connect": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Gender\\Gender::__construct": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Gender\\Gender::country": {
        "args": [
            {
                "name": "$country",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Gender\\Gender::get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$country",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Gender\\Gender::isNick": {
        "args": [
            {
                "name": "$name0",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$country",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Gender\\Gender::similarNames": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$country",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "bind_textdomain_codeset": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$codeset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bindtextdomain": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dcgettext": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$category",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dcngettext": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msgid1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msgid2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$category",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dgettext": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dngettext": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msgid1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msgid2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gettext": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ngettext": {
        "args": [
            {
                "name": "$msgid1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msgid2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "textdomain": {
        "args": [
            {
                "defaultValue": null,
                "name": "$text_domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "iconv_get_encoding": {
        "args": [
            {
                "defaultValue": "all",
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "iconv_mime_decode_headers": {
        "args": [
            {
                "name": "$encoded_headers",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$charset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "iconv_mime_decode": {
        "args": [
            {
                "name": "$encoded_header",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$charset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "iconv_mime_encode": {
        "args": [
            {
                "name": "$field_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$preferences",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "iconv_set_encoding": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "iconv_strlen": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iconv_strpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$charset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iconv_strrpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iconv_substr": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$charset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "iconv": {
        "args": [
            {
                "name": "$in_charset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$out_charset",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ob_iconv_handler": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Collator::asort": {
        "args": [
            {
                "name": "&$arr",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Collator::compare": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Collator::create": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Collator",
            "null"
        ]
    },
    "Collator::getAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Collator::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Collator::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Collator::getLocale": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Collator::getSortKey": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Collator::getStrength": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Collator::setAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Collator::setStrength": {
        "args": [
            {
                "name": "$strength",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Collator::sortWithSortKeys": {
        "args": [
            {
                "name": "&$arr",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Collator::sort": {
        "args": [
            {
                "name": "&$arr",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "NumberFormatter::create": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "NumberFormatter",
            "false"
        ]
    },
    "NumberFormatter::formatCurrency": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$currency",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "NumberFormatter::format": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "number"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "NumberFormatter::getAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "NumberFormatter::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "NumberFormatter::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "NumberFormatter::getLocale": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "NumberFormatter::getPattern": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "NumberFormatter::getSymbol": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "NumberFormatter::getTextAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "NumberFormatter::parseCurrency": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$currency",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$position",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "NumberFormatter::parse": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$position",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "NumberFormatter::setAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "NumberFormatter::setPattern": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "NumberFormatter::setSymbol": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "NumberFormatter::setTextAttribute": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Locale::acceptFromHttp": {
        "args": [
            {
                "name": "$header",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::canonicalize": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::composeLocale": {
        "args": [
            {
                "name": "$subtags",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::filterMatches": {
        "args": [
            {
                "name": "$langtag",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$canonicalize",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Locale::getAllVariants": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "Locale::getDefault": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getDisplayLanguage": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getDisplayName": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getDisplayRegion": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getDisplayScript": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getDisplayVariant": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::getKeywords": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Locale::getPrimaryLanguage": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "Locale::getRegion": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "Locale::getScript": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "Locale::lookup": {
        "args": [
            {
                "name": "$langtag",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$canonicalize",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$default",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Locale::parseLocale": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Locale::setDefault": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Normalizer::getRawDecomposition": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Normalizer::isNormalized": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$form",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Normalizer::normalize": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$form",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "MessageFormatter::create": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "MessageFormatter"
        ]
    },
    "MessageFormatter::formatMessage": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "MessageFormatter::format": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "MessageFormatter::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MessageFormatter::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MessageFormatter::getLocale": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MessageFormatter::getPattern": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "MessageFormatter::parseMessage": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "MessageFormatter::parse": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "MessageFormatter::setPattern": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlCalendar::add": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$amount",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlCalendar::after": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "IntlCalendar"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::before": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "IntlCalendar"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::clear": {
        "args": [
            {
                "defaultValue": null,
                "name": "$field",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlCalendar::__construct": {
        "args": [],
        "returnTypes": []
    },
    "IntlCalendar::createInstance": {
        "args": [
            {
                "defaultValue": null,
                "name": "$timeZone",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": "",
                "name": "$locale",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlCalendar",
            "null"
        ]
    },
    "IntlCalendar::equals": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "IntlCalendar"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlCalendar::fieldDifference": {
        "args": [
            {
                "name": "$when",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::fromDateTime": {
        "args": [
            {
                "name": "$dateTime",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "IntlCalendar",
            "null"
        ]
    },
    "IntlCalendar::get": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlCalendar::getActualMaximum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getActualMinimum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getAvailableLocales": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "IntlCalendar::getDayOfWeekType": {
        "args": [
            {
                "name": "$dayOfWeek",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlCalendar::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlCalendar::getFirstDayOfWeek": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getGreatestMinimum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getKeywordValuesForLocale": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$commonlyUsed",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Iterator",
            "false"
        ]
    },
    "IntlCalendar::getLeastMaximum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getLocale": {
        "args": [
            {
                "name": "$localeType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlCalendar::getMaximum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getMinimalDaysInFirstWeek": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getMinimum": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::getNow": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "IntlCalendar::getRepeatedWallTimeOption": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlCalendar::getSkippedWallTimeOption": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlCalendar::getTime": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "IntlCalendar::getTimeZone": {
        "args": [],
        "returnTypes": [
            "IntlTimeZone"
        ]
    },
    "IntlCalendar::getType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlCalendar::getWeekendTransition": {
        "args": [
            {
                "name": "$dayOfWeek",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlCalendar::inDaylightTime": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::isEquivalentTo": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "IntlCalendar"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::isLenient": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::isSet": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::isWeekend": {
        "args": [
            {
                "defaultValue": null,
                "name": "$date",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::roll": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$amountOrUpOrDown",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlCalendar::set": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setFirstDayOfWeek": {
        "args": [
            {
                "name": "$dayOfWeek",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setLenient": {
        "args": [
            {
                "name": "$isLenient",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setMinimalDaysInFirstWeek": {
        "args": [
            {
                "name": "$minimalDays",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setRepeatedWallTimeOption": {
        "args": [
            {
                "name": "$wallTimeOption",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setSkippedWallTimeOption": {
        "args": [
            {
                "name": "$wallTimeOption",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setTime": {
        "args": [
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::setTimeZone": {
        "args": [
            {
                "name": "$timeZone",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlCalendar::toDateTime": {
        "args": [],
        "returnTypes": [
            "DateTime"
        ]
    },
    "IntlGregorianCalendar::getGregorianChange": {
        "args": [],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "IntlGregorianCalendar::isLeapYear": {
        "args": [
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlGregorianCalendar::setGregorianChange": {
        "args": [
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlTimeZone::countEquivalentIDs": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlTimeZone::createDefault": {
        "args": [],
        "returnTypes": [
            "IntlTimeZone"
        ]
    },
    "IntlTimeZone::createEnumeration": {
        "args": [
            {
                "name": "$countryOrRawOffset",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "IntlIterator"
        ]
    },
    "IntlTimeZone::createTimeZone": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlTimeZone"
        ]
    },
    "IntlTimeZone::createTimeZoneIDEnumeration": {
        "args": [
            {
                "name": "$zoneType",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$region",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$rawOffset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "IntlIterator",
            "false"
        ]
    },
    "IntlTimeZone::fromDateTimeZone": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "DateTimeZone"
            }
        ],
        "returnTypes": [
            "IntlTimeZone"
        ]
    },
    "IntlTimeZone::getCanonicalID": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$isSystemID",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getDisplayName": {
        "args": [
            {
                "name": "$isDaylight",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$style",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$locale",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getDSTSavings": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlTimeZone::getEquivalentID": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlTimeZone::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getGMT": {
        "args": [],
        "returnTypes": [
            "IntlTimeZone"
        ]
    },
    "IntlTimeZone::getID": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getIDForWindowsID": {
        "args": [
            {
                "name": "$timezone",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$region",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlTimeZone::getOffset": {
        "args": [
            {
                "name": "$date",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$local",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "&$rawOffset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$dstOffset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlTimeZone::getRawOffset": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlTimeZone::getRegion": {
        "args": [
            {
                "name": "$zoneId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlTimeZone::getTZDataVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlTimeZone::getUnknown": {
        "args": [],
        "returnTypes": [
            "IntlTimeZone",
            "null"
        ]
    },
    "IntlTimeZone::getWindowsID": {
        "args": [
            {
                "name": "$timezone",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlTimeZone::hasSameRules": {
        "args": [
            {
                "name": "$otherTimeZone",
                "optionalDepth": 0,
                "type": "IntlTimeZone"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlTimeZone::toDateTimeZone": {
        "args": [],
        "returnTypes": [
            "DateTimeZone"
        ]
    },
    "IntlTimeZone::useDaylightTime": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlDateFormatter::create": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$datetype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$timetype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$timezone",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$calendar",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "defaultValue": "",
                "name": "$pattern",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlDateFormatter",
            "false"
        ]
    },
    "IntlDateFormatter::format": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlDateFormatter::formatObject": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "defaultValue": null,
                "name": "$format",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$locale",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlDateFormatter::getCalendar": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlDateFormatter::getDateType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlDateFormatter::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlDateFormatter::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlDateFormatter::getLocale": {
        "args": [
            {
                "name": "$which",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlDateFormatter::getPattern": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlDateFormatter::getTimeType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlDateFormatter::getTimeZoneId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlDateFormatter::getCalendarObject": {
        "args": [],
        "returnTypes": [
            "IntlCalendar"
        ]
    },
    "IntlDateFormatter::getTimeZone": {
        "args": [],
        "returnTypes": [
            "IntlTimeZone",
            "false"
        ]
    },
    "IntlDateFormatter::isLenient": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlDateFormatter::localtime": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$position",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "IntlDateFormatter::parse": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$position",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlDateFormatter::setCalendar": {
        "args": [
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlDateFormatter::setLenient": {
        "args": [
            {
                "name": "$lenient",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlDateFormatter::setPattern": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlDateFormatter::setTimeZoneId": {
        "args": [
            {
                "name": "$zone",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlDateFormatter::setTimeZone": {
        "args": [
            {
                "name": "$zone",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ResourceBundle::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ResourceBundle::create": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$bundlename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fallback",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "ResourceBundle",
            "null"
        ]
    },
    "ResourceBundle::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ResourceBundle::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ResourceBundle::get": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string|int"
            },
            {
                "defaultValue": true,
                "name": "$fallback",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "ResourceBundle::getLocales": {
        "args": [
            {
                "name": "$bundlename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Spoofchecker::areConfusable": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Spoofchecker::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Spoofchecker::isSuspicious": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Spoofchecker::setAllowedLocales": {
        "args": [
            {
                "name": "$locale_list",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Spoofchecker::setChecks": {
        "args": [
            {
                "name": "$checks",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Transliterator::create": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$direction",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Transliterator",
            "null"
        ]
    },
    "Transliterator::createFromRules": {
        "args": [
            {
                "name": "$rules",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$direction",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Transliterator",
            "null"
        ]
    },
    "Transliterator::createInverse": {
        "args": [],
        "returnTypes": [
            "Transliterator",
            "null"
        ]
    },
    "Transliterator::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Transliterator::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Transliterator::listIDs": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Transliterator::transliterate": {
        "args": [
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$end",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlBreakIterator::__construct": {
        "args": [],
        "returnTypes": []
    },
    "IntlBreakIterator::createCharacterInstance": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::createCodePointInstance": {
        "args": [],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::createLineInstance": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::createSentenceInstance": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::createTitleInstance": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::createWordInstance": {
        "args": [
            {
                "name": "$locale",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "IntlBreakIterator::current": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::first": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::following": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlBreakIterator::getLocale": {
        "args": [
            {
                "name": "$locale_type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlBreakIterator::getPartsIterator": {
        "args": [
            {
                "name": "$key_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "IntlPartsIterator"
        ]
    },
    "IntlBreakIterator::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlBreakIterator::isBoundary": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlBreakIterator::last": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::next": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::preceding": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::previous": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlBreakIterator::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlRuleBasedBreakIterator::__construct": {
        "args": [
            {
                "name": "$rules",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$areCompiled",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlRuleBasedBreakIterator::getBinaryRules": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlRuleBasedBreakIterator::getRules": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlRuleBasedBreakIterator::getRuleStatus": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlRuleBasedBreakIterator::getRuleStatusVec": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "IntlCodePointBreakIterator::getLastCodePoint": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "IntlPartsIterator::getBreakIterator": {
        "args": [],
        "returnTypes": [
            "IntlBreakIterator"
        ]
    },
    "UConverter::__construct": {
        "args": [
            {
                "name": "$destination_encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$source_encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::convert": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$reverse",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::fromUCallback": {
        "args": [
            {
                "name": "$reason",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$codePoint",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "UConverter::getAliases": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "UConverter::getAvailable": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "UConverter::getDestinationEncoding": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::getDestinationType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UConverter::getErrorCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UConverter::getErrorMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::getSourceEncoding": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::getSourceType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UConverter::getStandards": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "UConverter::getSubstChars": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::reasonText": {
        "args": [
            {
                "name": "$reason",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UConverter::setDestinationEncoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "UConverter::setSourceEncoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "UConverter::setSubstChars": {
        "args": [
            {
                "name": "$chars",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "UConverter::toUCallback": {
        "args": [
            {
                "name": "$reason",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$codeUnits",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "UConverter::transcode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$toEncoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fromEncoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "grapheme_extract": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$extract_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$start",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$next",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "grapheme_stripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "grapheme_stristr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "grapheme_strlen": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "grapheme_strpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "grapheme_strripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "grapheme_strrpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "grapheme_strstr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "grapheme_substr": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "idn_to_ascii": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$variant",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$idna_info",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "idn_to_utf8": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$variant",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$idna_info",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlChar::charAge": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "IntlChar::charDigitValue": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::charDirection": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::charFromName": {
        "args": [
            {
                "name": "$characterName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nameChoice",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "null"
        ]
    },
    "IntlChar::charMirror": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlChar::charName": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$nameChoice",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "IntlChar::charType": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::chr": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlChar::digit": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 10,
                "name": "$radix",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "IntlChar::enumCharNames": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$nameChoice",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "IntlChar::enumCharTypes": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "IntlChar::foldCase": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlChar::forDigit": {
        "args": [
            {
                "name": "$digit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 10,
                "name": "$radix",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getBidiPairedBracket": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlChar::getBlockCode": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getCombiningClass": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getFC_NFKC_Closure": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "IntlChar::getIntPropertyMaxValue": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getIntPropertyMinValue": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getIntPropertyValue": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getNumericValue": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "IntlChar::getPropertyEnum": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getPropertyName": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nameChoice",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlChar::getPropertyValueEnum": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::getPropertyValueName": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nameChoice",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "IntlChar::getUnicodeVersion": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "IntlChar::hasBinaryProperty": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "IntlChar::isalnum": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isalpha": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isbase": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isblank": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::iscntrl": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isdefined": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isdigit": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isgraph": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isIDIgnorable": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isIDPart": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isIDStart": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isISOControl": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isJavaIDPart": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isJavaIDStart": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isJavaSpaceChar": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::islower": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isMirrored": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isprint": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::ispunct": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isspace": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::istitle": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isUAlphabetic": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isULowercase": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isupper": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isUUppercase": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isUWhiteSpace": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isWhitespace": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::isxdigit": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "IntlChar::ord": {
        "args": [
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "IntlChar::tolower": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlChar::totitle": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlChar::toupper": {
        "args": [
            {
                "name": "$codepoint",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "IntlIterator::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "IntlIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "IntlIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "IntlIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "intl_error_name": {
        "args": [
            {
                "name": "$error_code",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "intl_get_error_code": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "intl_get_error_message": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "intl_is_failure": {
        "args": [
            {
                "name": "$error_code",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mb_check_encoding": {
        "args": [
            {
                "defaultValue": null,
                "name": "$var",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_chr": {
        "args": [
            {
                "name": "$cp",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_convert_case": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_convert_encoding": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to_encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$from_encoding",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_convert_kana": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "KV",
                "name": "$option",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_convert_variables": {
        "args": [
            {
                "name": "$to_encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$from_encoding",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$vars",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_decode_mimeheader": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_decode_numericentity": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$convmap",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_hex",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_detect_encoding": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding_list",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$strict",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_detect_order": {
        "args": [
            {
                "name": "$encoding_list",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mb_encode_mimeheader": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charset",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "B",
                "name": "$transfer_encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\r\n",
                "name": "$linefeed",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$indent",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_encode_numericentity": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$convmap",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_hex",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_encoding_aliases": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "mb_ereg_match": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "msr",
                "name": "$option",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mb_ereg_replace_callback": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "msr",
                "name": "$option",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_ereg_replace": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "msr",
                "name": "$option",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_ereg_search_getpos": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mb_ereg_search_getregs": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mb_ereg_search_init": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "msr",
                "name": "$option",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_ereg_search_pos": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "ms",
                "name": "$option",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mb_ereg_search_regs": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "ms",
                "name": "$option",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mb_ereg_search_setpos": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_ereg_search": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "ms",
                "name": "$option",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_ereg": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$regs",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mb_eregi_replace": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "msri",
                "name": "$option",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_eregi": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$regs",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mb_get_info": {
        "args": [
            {
                "defaultValue": "all",
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mb_http_input": {
        "args": [
            {
                "defaultValue": "",
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mb_http_output": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mb_internal_encoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mb_language": {
        "args": [
            {
                "name": "$language",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mb_list_encodings": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "mb_ord": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mb_output_handler": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_parse_str": {
        "args": [
            {
                "name": "$encoded_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$result",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_preferred_mime_name": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_regex_encoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "mb_regex_set_options": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_scrub": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_send_mail": {
        "args": [
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$additional_headers",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$additional_parameter",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mb_split": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mb_strcut": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_strimwidth": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$trimmarker",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_stripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mb_stristr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_strlen": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mb_strpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mb_strrchr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$part",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_strrichr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$part",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_strripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mb_strrpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mb_strstr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "mb_strtolower": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_strtoupper": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mb_strwidth": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mb_substitute_character": {
        "args": [
            {
                "name": "$substchar",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mb_substr_count": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mb_substr": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "pspell_add_to_personal": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_add_to_session": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_check": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pspell_clear_session": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_create": {
        "args": [
            {
                "name": "$language",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$spelling",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$jargon",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pspell_config_data_dir": {
        "args": [
            {
                "name": "$conf",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_dict_dir": {
        "args": [
            {
                "name": "$conf",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_ignore": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_mode": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_personal": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_repl": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_runtogether": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_config_save_repl": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_new_config": {
        "args": [
            {
                "name": "$config",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pspell_new_personal": {
        "args": [
            {
                "name": "$personal",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$language",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$spelling",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$jargon",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pspell_new": {
        "args": [
            {
                "name": "$language",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$spelling",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$jargon",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pspell_save_wordlist": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_store_replacement": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$misspelled",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$correct",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pspell_suggest": {
        "args": [
            {
                "name": "$dictionary_link",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "recode_file": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$output",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "recode_string": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "cairo_create": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "CairoContext"
        ]
    },
    "cairo_font_options_create": {
        "args": [],
        "returnTypes": [
            "CairoFontOptions"
        ]
    },
    "cairo_font_options_equal": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cairo_font_options_get_antialias": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_font_options_get_hint_metrics": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_font_options_get_hint_style": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_font_options_get_subpixel_order": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_font_options_hash": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_font_options_merge": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_font_options_set_antialias": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$antialias",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_font_options_set_hint_metrics": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$hint_metrics",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_font_options_set_hint_style": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$hint_style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_font_options_set_subpixel_order": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            },
            {
                "name": "$subpixel_order",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_font_options_status": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_format_stride_for_width": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_image_surface_create_for_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$stride",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "CairoImageSurface"
        ]
    },
    "cairo_image_surface_create_from_png": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "CairoImageSurface"
        ]
    },
    "cairo_image_surface_create": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "CairoImageSurface"
        ]
    },
    "cairo_image_surface_get_data": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoImageSurface"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cairo_image_surface_get_format": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoImageSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_image_surface_get_height": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoImageSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_image_surface_get_stride": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoImageSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_image_surface_get_width": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoImageSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_matrix_invert": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_matrix_multiply": {
        "args": [
            {
                "name": "$matrix1",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$matrix2",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "cairo_matrix_transform_distance": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_matrix_transform_point": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_matrix_translate": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$tx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ty",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_add_color_stop_rgb": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoGradientPattern"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_add_color_stop_rgba": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoGradientPattern"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_create_for_surface": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "CairoPattern"
        ]
    },
    "cairo_pattern_create_linear": {
        "args": [
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPattern"
        ]
    },
    "cairo_pattern_create_radial": {
        "args": [
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r1",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPattern"
        ]
    },
    "cairo_pattern_create_rgb": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPattern"
        ]
    },
    "cairo_pattern_create_rgba": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPattern"
        ]
    },
    "cairo_pattern_get_color_stop_count": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoGradientPattern"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_pattern_get_color_stop_rgba": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoGradientPattern"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_pattern_get_extend": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_pattern_get_filter": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoSurfacePattern"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_pattern_get_linear_points": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoLinearGradient"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_pattern_get_matrix": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            }
        ],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "cairo_pattern_get_radial_circles": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoRadialGradient"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_pattern_get_rgba": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoSolidPattern"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_pattern_get_surface": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoSurfacePattern"
            }
        ],
        "returnTypes": [
            "CairoSurface"
        ]
    },
    "cairo_pattern_get_type": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_pattern_set_extend": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extend",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_set_filter": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoSurfacePattern"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_set_matrix": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            },
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_pattern_status": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_pdf_surface_create": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPdfSurface"
        ]
    },
    "cairo_pdf_surface_set_size": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPdfSurface"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_get_levels": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_ps_level_to_string": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "cairo_ps_surface_create": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoPsSurface"
        ]
    },
    "cairo_ps_surface_dsc_begin_page_setup": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_surface_dsc_begin_setup": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_surface_dsc_comment": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            },
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_surface_get_eps": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "cairo_ps_surface_restrict_to_level": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_surface_set_eps": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_ps_surface_set_size": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoPsSurface"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_scaled_font_create": {
        "args": [
            {
                "name": "$fontface",
                "optionalDepth": 0,
                "type": "CairoFontFace"
            },
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$ctm",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$fontoptions",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "CairoScaledFont"
        ]
    },
    "cairo_scaled_font_extents": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_scaled_font_get_ctm": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "cairo_scaled_font_get_font_face": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "CairoFontFace"
        ]
    },
    "cairo_scaled_font_get_font_matrix": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "CairoFontOptions"
        ]
    },
    "cairo_scaled_font_get_font_options": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "CairoFontOptions"
        ]
    },
    "cairo_scaled_font_get_scale_matrix": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "cairo_scaled_font_get_type": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_scaled_font_glyph_extents": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            },
            {
                "name": "$glyphs",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_scaled_font_status": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_scaled_font_text_extents": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_surface_copy_page": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_create_similar": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoSurface"
        ]
    },
    "cairo_surface_finish": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_flush": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_get_content": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_surface_get_device_offset": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cairo_surface_get_font_options": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "CairoFontOptions"
        ]
    },
    "cairo_surface_get_type": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_surface_mark_dirty_rectangle": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_mark_dirty": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_set_device_offset": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_set_fallback_resolution": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_show_page": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_surface_status": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "cairo_surface_write_to_png": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_svg_surface_create": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "CairoSvgSurface"
        ]
    },
    "cairo_svg_surface_restrict_to_version": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSvgSurface"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cairo_svg_version_to_string": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Cairo::availableFonts": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Cairo::availableSurfaces": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Cairo::statusToString": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Cairo::version": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Cairo::versionString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "CairoContext::appendPath": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "CairoPath"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::arc": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::arcNegative": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::clip": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::clipExtents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::clipPreserve": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::clipRectangleList": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::closePath": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::__construct": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "CairoSurface"
        ]
    },
    "CairoContext::copyPage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::copyPath": {
        "args": [],
        "returnTypes": [
            "CairoPath"
        ]
    },
    "CairoContext::copyPathFlat": {
        "args": [],
        "returnTypes": [
            "CairoPath"
        ]
    },
    "CairoContext::curveTo": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::deviceToUser": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::deviceToUserDistance": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::fill": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::fillExtents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::fillPreserve": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::fontExtents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::getAntialias": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getCurrentPoint": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::getDash": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::getDashCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getFillRule": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getFontFace": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getFontMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getFontOptions": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getGroupTarget": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getLineCap": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getLineJoin": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getLineWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "CairoContext::getMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getMiterLimit": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "CairoContext::getOperator": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::getScaledFont": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getSource": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getTarget": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::getTolerance": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "CairoContext::glyphPath": {
        "args": [
            {
                "name": "$glyphs",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::hasCurrentPoint": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "CairoContext::identityMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::inFill": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "CairoContext::inStroke": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "CairoContext::lineTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::mask": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::maskSurface": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$x",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::moveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::newPath": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::newSubPath": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::paint": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::paintWithAlpha": {
        "args": [
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::pathExtents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::popGroup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::popGroupToSource": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::pushGroup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::pushGroupWithContent": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::rectangle": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::relCurveTo": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::relLineTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::relMoveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::resetClip": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::restore": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::rotate": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::save": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::scale": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::selectFontFace": {
        "args": [
            {
                "name": "$family",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$slant",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$weight",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setAntialias": {
        "args": [
            {
                "name": "$antialias",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setDash": {
        "args": [
            {
                "name": "$dashes",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setFillRule": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setFontFace": {
        "args": [
            {
                "name": "$fontface",
                "optionalDepth": 0,
                "type": "CairoFontFace"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setFontMatrix": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setFontOptions": {
        "args": [
            {
                "name": "$fontoptions",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setFontSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setLineCap": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setLineJoin": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setLineWidth": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setMatrix": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setMiterLimit": {
        "args": [
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setOperator": {
        "args": [
            {
                "name": "$setting",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setScaledFont": {
        "args": [
            {
                "name": "$scaledfont",
                "optionalDepth": 0,
                "type": "CairoScaledFont"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setSource": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "CairoPattern"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setSourceRGB": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setSourceRGBA": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setSourceSurface": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$x",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::setTolerance": {
        "args": [
            {
                "name": "$tolerance",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::showPage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::showText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoContext::stroke": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::strokeExtents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::strokePreserve": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::textExtents": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::textPath": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::transform": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::translate": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoContext::userToDevice": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoContext::userToDeviceDistance": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoSurface::__construct": {
        "args": [],
        "returnTypes": []
    },
    "CairoSurface::copyPage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::createSimilar": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "CairoSurface"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::finish": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::flush": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::getContent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoSurface::getDeviceOffset": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoSurface::getFontOptions": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoSurface::markDirty": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::markDirtyRectangle": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::setDeviceOffset": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::setFallbackResolution": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::showPage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurface::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoSurface::writeToPng": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSvgSurface::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CairoSvgSurface::getVersions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoSvgSurface::restrictToVersion": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSvgSurface::versionToString": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CairoImageSurface::__construct": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "CairoImageSurface::createForData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoImageSurface::createFromPng": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "CairoImageSurface"
        ]
    },
    "CairoImageSurface::getData": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "CairoImageSurface::getFormat": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoImageSurface::getHeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoImageSurface::getStride": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoImageSurface::getWidth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoPdfSurface::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CairoPdfSurface::setSize": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CairoPsSurface::dscBeginPageSetup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::dscBeginSetup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::dscComment": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::getEps": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "CairoPsSurface::getLevels": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoPsSurface::levelToString": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CairoPsSurface::restrictToLevel": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::setEps": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPsSurface::setSize": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontFace::__construct": {
        "args": [],
        "returnTypes": []
    },
    "CairoFontFace::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontFace::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::__construct": {
        "args": [],
        "returnTypes": []
    },
    "CairoFontOptions::equal": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "CairoFontOptions::getAntialias": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::getHintMetrics": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::getHintStyle": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::getSubpixelOrder": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::hash": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoFontOptions::merge": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontOptions::setAntialias": {
        "args": [
            {
                "name": "$antialias",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontOptions::setHintMetrics": {
        "args": [
            {
                "name": "$hint_metrics",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontOptions::setHintStyle": {
        "args": [
            {
                "name": "$hint_style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontOptions::setSubpixelOrder": {
        "args": [
            {
                "name": "$subpixel_order",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoFontOptions::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoScaledFont::__construct": {
        "args": [
            {
                "name": "$font_face",
                "optionalDepth": 0,
                "type": "CairoFontFace"
            },
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$ctm",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "CairoFontOptions"
            }
        ],
        "returnTypes": [
            "CairoFontFace"
        ]
    },
    "CairoScaledFont::extents": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoScaledFont::getCtm": {
        "args": [],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "CairoScaledFont::getFontFace": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoScaledFont::getFontMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoScaledFont::getFontOptions": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoScaledFont::getScaleMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoScaledFont::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoScaledFont::glyphExtents": {
        "args": [
            {
                "name": "$glyphs",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoScaledFont::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoScaledFont::textExtents": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoPattern::__construct": {
        "args": [],
        "returnTypes": []
    },
    "CairoPattern::getMatrix": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPattern::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoPattern::setMatrix": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoPattern::status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoGradientPattern::addColorStopRgb": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoGradientPattern::addColorStopRgba": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoGradientPattern::getColorStopCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoGradientPattern::getColorStopRgba": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoGradientPattern::getExtend": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoGradientPattern::setExtend": {
        "args": [
            {
                "name": "$extend",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSolidPattern::__construct": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$alpha",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "CairoSolidPattern::getRgba": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoSurfacePattern::__construct": {
        "args": [
            {
                "name": "$surface",
                "optionalDepth": 0,
                "type": "CairoSurface"
            }
        ],
        "returnTypes": [
            "CairoSurface"
        ]
    },
    "CairoSurfacePattern::getExtend": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoSurfacePattern::getFilter": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CairoSurfacePattern::getSurface": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurfacePattern::setExtend": {
        "args": [
            {
                "name": "$extend",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoSurfacePattern::setFilter": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoLinearGradient::__construct": {
        "args": [
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "CairoLinearGradient::getPoints": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoRadialGradient::__construct": {
        "args": [
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r1",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "CairoRadialGradient::getCircles": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CairoFormat::strideForWidth": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "CairoMatrix::__construct": {
        "args": [
            {
                "defaultValue": 1,
                "name": "$xx",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$yx",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$xy",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "defaultValue": 1,
                "name": "$yy",
                "optionalDepth": 4,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$x0",
                "optionalDepth": 5,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$y0",
                "optionalDepth": 6,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "CairoMatrix::initIdentity": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::initRotate": {
        "args": [
            {
                "name": "$radians",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::initScale": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::initTranslate": {
        "args": [
            {
                "name": "$tx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ty",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::invert": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::multiply": {
        "args": [
            {
                "name": "$matrix1",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            },
            {
                "name": "$matrix2",
                "optionalDepth": 0,
                "type": "CairoMatrix"
            }
        ],
        "returnTypes": [
            "CairoMatrix"
        ]
    },
    "CairoMatrix::rotate": {
        "args": [
            {
                "name": "$radians",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::scale": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CairoMatrix::transformDistance": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoMatrix::transformPoint": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CairoMatrix::translate": {
        "args": [
            {
                "name": "$tx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ty",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "exif_imagetype": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "exif_read_data": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$sections",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$arrays",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$thumbnail",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "exif_tagname": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "exif_thumbnail": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$width",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$height",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$imagetype",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gd_info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "getimagesize": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$imageinfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "getimagesizefromstring": {
        "args": [
            {
                "name": "$imagedata",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$imageinfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "image_type_to_extension": {
        "args": [
            {
                "name": "$imagetype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$include_dot",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "image_type_to_mime_type": {
        "args": [
            {
                "name": "$imagetype",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "image2wbmp": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$foreground",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageaffine": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$affine",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$clip",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imageaffinematrixconcat": {
        "args": [
            {
                "name": "$m1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$m2",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "imageaffinematrixget": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "imagealphablending": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$blendmode",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageantialias": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$enabled",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagearc": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$end",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagebmp": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$compressed",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagechar": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecharup": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecolorallocate": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imagecolorallocatealpha": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imagecolorat": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imagecolorclosest": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolorclosestalpha": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolorclosesthwb": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolordeallocate": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecolorexact": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolorexactalpha": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolormatch": {
        "args": [
            {
                "name": "$image1",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image2",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecolorresolve": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolorresolvealpha": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolorset": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$alpha",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "imagecolorsforindex": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagecolorstotal": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagecolortransparent": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imageconvolution": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$div",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecopy": {
        "args": [
            {
                "name": "$dst_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$src_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dst_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_h",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecopymerge": {
        "args": [
            {
                "name": "$dst_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$src_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dst_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_h",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pct",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecopymergegray": {
        "args": [
            {
                "name": "$dst_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$src_im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dst_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_h",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pct",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecopyresampled": {
        "args": [
            {
                "name": "$dst_image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$src_image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dst_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_h",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_h",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecopyresized": {
        "args": [
            {
                "name": "$dst_image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$src_image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dst_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dst_h",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_w",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$src_h",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagecreate": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefrombmp": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromgd2": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromgd2part": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$srcX",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$srcY",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromgd": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromgif": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromjpeg": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefrompng": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromstring": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromwbmp": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromwebp": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromxbm": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatefromxpm": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecreatetruecolor": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagecrop": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rect",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imagecropauto": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$threshold",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "defaultValue": -1,
                "name": "$color",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imagedashedline": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagedestroy": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageellipse": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefill": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilledarc": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$end",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilledellipse": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilledpolygon": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$points",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$num_points",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilledrectangle": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilltoborder": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$border",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefilter": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filtertype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arg1",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$arg2",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$arg3",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$arg4",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageflip": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagefontheight": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imagefontwidth": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imageftbbox": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extrainfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagefttext": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extrainfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagegammacorrect": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$inputgamma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$outputgamma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagegd2": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": 128,
                "name": "$chunk_size",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagegd": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagegetclip": {
        "args": [
            {
                "name": "$im",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagegif": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagegrabscreen": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "imagegrabwindow": {
        "args": [
            {
                "name": "$window_handle",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$client_area",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imageinterlace": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$interlace",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imageistruecolor": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imagejpeg": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$quality",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagelayereffect": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$effect",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageline": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageloadfont": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imageopenpolygon": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$points",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$num_points",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepalettecopy": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "imagepalettetotruecolor": {
        "args": [
            {
                "name": "$src",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imagepng": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$quality",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$filters",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepolygon": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$points",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$num_points",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepsbbox": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagepsencodefont": {
        "args": [
            {
                "name": "$font_index",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encodingfile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepsextendfont": {
        "args": [
            {
                "name": "$font_index",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$extend",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepsfreefont": {
        "args": [
            {
                "name": "$font_index",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepsloadfont": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "imagepsslantfont": {
        "args": [
            {
                "name": "$font_index",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$slant",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagepstext": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$font_index",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$foreground",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$space",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$tightness",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 0,
                "name": "$angle",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "defaultValue": 4,
                "name": "$antialias_steps",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagerectangle": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imageresolution": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "imagerotate": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bgd_color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$ignore_transparent",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imagesavealpha": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$saveflag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagescale": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$new_height",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imagesetbrush": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$brush",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesetclip": {
        "args": [
            {
                "name": "$im",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesetinterpolation": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$method",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesetpixel": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesetstyle": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesetthickness": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$thickness",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesettile": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tile",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagestring": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagestringup": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagesx": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imagesy": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imagetruecolortopalette": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$ncolors",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagettfbbox": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagettftext": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imagetypes": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "imagewbmp": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$foreground",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagewebp": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$to",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": 80,
                "name": "$quality",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imagexbm": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$foreground",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "iptcembed": {
        "args": [
            {
                "name": "$iptcdata",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$jpeg_file_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$spool",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "iptcparse": {
        "args": [
            {
                "name": "$iptcblock",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "jpeg2wbmp": {
        "args": [
            {
                "name": "$jpegname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$wbmpname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest_height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest_width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "png2wbmp": {
        "args": [
            {
                "name": "$pngname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$wbmpname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dest_height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest_width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Gmagick::addimage": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "Gmagick"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::addnoiseimage": {
        "args": [
            {
                "name": "$noise_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::annotateimage": {
        "args": [
            {
                "name": "$GmagickDraw",
                "optionalDepth": 0,
                "type": "GmagickDraw"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::blurimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::borderimage": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "GmagickPixel"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::charcoalimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::chopimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::clear": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::commentimage": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::compositeimage": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "Gmagick"
            },
            {
                "name": "$COMPOSE",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::cropimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::cropthumbnailimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::current": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::cyclecolormapimage": {
        "args": [
            {
                "name": "$displace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::deconstructimages": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::despeckleimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::destroy": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Gmagick::drawimage": {
        "args": [
            {
                "name": "$GmagickDraw",
                "optionalDepth": 0,
                "type": "GmagickDraw"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::edgeimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::embossimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::enhanceimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::equalizeimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::flipimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::flopimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::frameimage": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "GmagickPixel"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$inner_bevel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$outer_bevel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::gammaimage": {
        "args": [
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::getcopyright": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getfilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getimagebackgroundcolor": {
        "args": [],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "Gmagick::getimageblueprimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimagebordercolor": {
        "args": [],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "Gmagick::getimagechanneldepth": {
        "args": [
            {
                "name": "$channel_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagecolors": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagecolorspace": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagecompose": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagedelay": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagedepth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagedispose": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimageextrema": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimagefilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getimageformat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getimagegamma": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Gmagick::getimagegreenprimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimageheight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagehistogram": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimageindex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimageinterlacescheme": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimageiterations": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagematte": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagemattecolor": {
        "args": [],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "Gmagick::getimageprofile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getimageredprimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimagerenderingintent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimageresolution": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimagescene": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagesignature": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getimagetype": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimageunits": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getimagewhitepoint": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getimagewidth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Gmagick::getpackagename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getquantumdepth": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getreleasedate": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::getsamplingfactors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getsize": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::getversion": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::hasnextimage": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::haspreviousimage": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::implodeimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::labelimage": {
        "args": [
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::levelimage": {
        "args": [
            {
                "name": "$blackPoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$whitePoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::magnifyimage": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Gmagick::mapimage": {
        "args": [
            {
                "name": "$gmagick",
                "optionalDepth": 0,
                "type": "gmagick"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::medianfilterimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Gmagick::minifyimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::modulateimage": {
        "args": [
            {
                "name": "$brightness",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$saturation",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$hue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::motionblurimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::newimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::nextimage": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Gmagick::normalizeimage": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::oilpaintimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::previousimage": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Gmagick::profileimage": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$profile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::quantizeimage": {
        "args": [
            {
                "name": "$numColors",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$treeDepth",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$measureError",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::quantizeimages": {
        "args": [
            {
                "name": "$numColors",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$treeDepth",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$measureError",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::queryfontmetrics": {
        "args": [
            {
                "name": "$draw",
                "optionalDepth": 0,
                "type": "GmagickDraw"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::queryfonts": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::queryformats": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Gmagick::radialblurimage": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::raiseimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$raise",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::read": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::readimage": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::readimageblob": {
        "args": [
            {
                "name": "$imageContents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::readimagefile": {
        "args": [
            {
                "name": "$fp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::reducenoiseimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::removeimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::removeimageprofile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Gmagick::resampleimage": {
        "args": [
            {
                "name": "$xResolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$yResolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blur",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::resizeimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blur",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$fit",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::rollimage": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::rotateimage": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::scaleimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$fit",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::separateimagechannel": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setCompressionQuality": {
        "args": [
            {
                "defaultValue": 75,
                "name": "$quality",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setfilename": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagebackgroundcolor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "GmagickPixel"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageblueprimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagebordercolor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "GmagickPixel"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagechanneldepth": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagecolorspace": {
        "args": [
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagecompose": {
        "args": [
            {
                "name": "$composite",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagedelay": {
        "args": [
            {
                "name": "$delay",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagedepth": {
        "args": [
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagedispose": {
        "args": [
            {
                "name": "$disposeType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagefilename": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageformat": {
        "args": [
            {
                "name": "$imageFormat",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagegamma": {
        "args": [
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagegreenprimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageindex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageinterlacescheme": {
        "args": [
            {
                "name": "$interlace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageiterations": {
        "args": [
            {
                "name": "$iterations",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageprofile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$profile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageredprimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagerenderingintent": {
        "args": [
            {
                "name": "$rendering_intent",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageresolution": {
        "args": [
            {
                "name": "$xResolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$yResolution",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagescene": {
        "args": [
            {
                "name": "$scene",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagetype": {
        "args": [
            {
                "name": "$imgType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimageunits": {
        "args": [
            {
                "name": "$resolution",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setimagewhitepoint": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setsamplingfactors": {
        "args": [
            {
                "name": "$factors",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::setsize": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::shearimage": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$xShear",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$yShear",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::solarizeimage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::spreadimage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::stripimage": {
        "args": [],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::swirlimage": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::thumbnailimage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$fit",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::trimimage": {
        "args": [
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "Gmagick::writeimage": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$all_frames",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Gmagick"
        ]
    },
    "GmagickDraw::annotate": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::arc": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ex",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ey",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sd",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ed",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::bezier": {
        "args": [
            {
                "name": "$coordinate_array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::ellipse": {
        "args": [
            {
                "name": "$ox",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$oy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$end",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::getfillcolor": {
        "args": [],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "GmagickDraw::getfillopacity": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "GmagickDraw::getfont": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "GmagickDraw::getfontsize": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "GmagickDraw::getfontstyle": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GmagickDraw::getfontweight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GmagickDraw::getstrokecolor": {
        "args": [],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "GmagickDraw::getstrokeopacity": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "GmagickDraw::getstrokewidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "GmagickDraw::gettextdecoration": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GmagickDraw::gettextencoding": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "GmagickDraw::line": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ex",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ey",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::point": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::polygon": {
        "args": [
            {
                "name": "$coordinates",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::polyline": {
        "args": [
            {
                "name": "$coordinate_array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::rectangle": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::rotate": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::roundrectangle": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::scale": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfillcolor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfillopacity": {
        "args": [
            {
                "name": "$fill_opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfont": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfontsize": {
        "args": [
            {
                "name": "$pointsize",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfontstyle": {
        "args": [
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setfontweight": {
        "args": [
            {
                "name": "$weight",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setstrokecolor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setstrokeopacity": {
        "args": [
            {
                "name": "$stroke_opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::setstrokewidth": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::settextdecoration": {
        "args": [
            {
                "name": "$decoration",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickDraw::settextencoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GmagickDraw"
        ]
    },
    "GmagickPixel::__construct": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GmagickPixel::getcolor": {
        "args": [
            {
                "defaultValue": false,
                "name": "$as_array",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$normalize_array",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "GmagickPixel::getcolorcount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GmagickPixel::getcolorvalue": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "GmagickPixel::setcolor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "GmagickPixel::setcolorvalue": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "GmagickPixel"
        ]
    },
    "Imagick::adaptiveBlurImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::adaptiveResizeImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$bestfit",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::adaptiveSharpenImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::adaptiveThresholdImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::addImage": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::addNoiseImage": {
        "args": [
            {
                "name": "$noise_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::affineTransformImage": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::animateImages": {
        "args": [
            {
                "name": "$x_server",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::annotateImage": {
        "args": [
            {
                "name": "$draw_settings",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::appendImages": {
        "args": [
            {
                "name": "$stack",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::autoLevelImage": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::averageImages": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::blackThresholdImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::blueShiftImage": {
        "args": [
            {
                "defaultValue": 1.5,
                "name": "$factor",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::blurImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::borderImage": {
        "args": [
            {
                "name": "$bordercolor",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::brightnessContrastImage": {
        "args": [
            {
                "name": "$brightness",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$contrast",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::charcoalImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::chopImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::clampImage": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Imagick::clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::clipImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::clipImagePath": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$inside",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Imagick::clipPathImage": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$inside",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::clone": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::clutImage": {
        "args": [
            {
                "name": "$lookup_table",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::coalesceImages": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::colorFloodfillImage": {
        "args": [
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bordercolor",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::colorizeImage": {
        "args": [
            {
                "name": "$colorize",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::colorMatrixImage": {
        "args": [
            {
                "name": "$color_matrix",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::combineImages": {
        "args": [
            {
                "name": "$channelType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::commentImage": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::compareImageChannels": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$channelType",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$metricType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::compareImageLayers": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::compareImages": {
        "args": [
            {
                "name": "$compare",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$metric",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::compositeImage": {
        "args": [
            {
                "name": "$composite_object",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$composite",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::__construct": {
        "args": [
            {
                "name": "$files",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Imagick::contrastImage": {
        "args": [
            {
                "name": "$sharpen",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::contrastStretchImage": {
        "args": [
            {
                "name": "$black_point",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$white_point",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::convolveImage": {
        "args": [
            {
                "name": "$kernel",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::count": {
        "args": [
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::cropImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::cropThumbnailImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::current": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::cycleColormapImage": {
        "args": [
            {
                "name": "$displace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::decipherImage": {
        "args": [
            {
                "name": "$passphrase",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::deconstructImages": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::deleteImageArtifact": {
        "args": [
            {
                "name": "$artifact",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::deleteImageProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::deskewImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::despeckleImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::destroy": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::displayImage": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::displayImages": {
        "args": [
            {
                "name": "$servername",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::distortImage": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$bestfit",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::drawImage": {
        "args": [
            {
                "name": "$draw",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::edgeImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::embossImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::encipherImage": {
        "args": [
            {
                "name": "$passphrase",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::enhanceImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::equalizeImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::evaluateImage": {
        "args": [
            {
                "name": "$op",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$constant",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::exportImagePixels": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$STORAGE",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::extentImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::filter": {
        "args": [
            {
                "name": "$ImagickKernel",
                "optionalDepth": 0,
                "type": "ImagickKernel"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::flattenImages": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::flipImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::floodFillPaintImage": {
        "args": [
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$invert",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::flopImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::forwardFourierTransformimage": {
        "args": [
            {
                "name": "$magnitude",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::frameImage": {
        "args": [
            {
                "name": "$matte_color",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$inner_bevel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$outer_bevel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::functionImage": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::fxImage": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::gammaImage": {
        "args": [
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::gaussianBlurImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::getColorspace": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getCompression": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getCompressionQuality": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getCopyright": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getFont": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Imagick::getFormat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getGravity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getHomeURL": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImage": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::getImageAlphaChannel": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageArtifact": {
        "args": [
            {
                "name": "$artifact",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageAttribute": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageBackgroundColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "Imagick::getImageBlob": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageBluePrimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageBorderColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "Imagick::getImageChannelDepth": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageChannelDistortion": {
        "args": [
            {
                "name": "$reference",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$metric",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getImageChannelDistortions": {
        "args": [
            {
                "name": "$reference",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$metric",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getImageChannelExtrema": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageChannelKurtosis": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageChannelMean": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageChannelRange": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageChannelStatistics": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageClipMask": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::getImageColormapColor": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "Imagick::getImageColors": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageColorspace": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageCompose": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageCompression": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageCompressionQuality": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageDelay": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageDepth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageDispose": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageDistortion": {
        "args": [
            {
                "name": "$reference",
                "optionalDepth": 0,
                "type": "MagickWand"
            },
            {
                "name": "$metric",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getImageExtrema": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageFormat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageGamma": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getImageGeometry": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageGravity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageGreenPrimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageHeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageHistogram": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageInterlaceScheme": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageInterpolateMethod": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageIterations": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageLength": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageMagickLicense": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageMatte": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::getImageMatteColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "Imagick::getImageMimeType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageOrientation": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImagePage": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImagePixelColor": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "Imagick::getImageProfile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageProfiles": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$include_values",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageProperties": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$include_values",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageRedPrimary": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageRegion": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::getImageRenderingIntent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageResolution": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImagesBlob": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageScene": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageSignature": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getImageSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageTicksPerSecond": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageTotalInkDensity": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getImageType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageUnits": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageVirtualPixelMethod": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getImageWhitePoint": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getImageWidth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getInterlaceScheme": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getIteratorIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getNumberImages": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getOption": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getPackageName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getPage": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getPixelIterator": {
        "args": [],
        "returnTypes": [
            "ImagickPixelIterator"
        ]
    },
    "Imagick::getPixelRegionIterator": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ImagickPixelIterator"
        ]
    },
    "Imagick::getPointSize": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Imagick::getQuantum": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getQuantumDepth": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getQuantumRange": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getRegistry": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getReleaseDate": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::getResource": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getResourceLimit": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getSamplingFactors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getSize": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::getSizeOffset": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Imagick::getVersion": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::haldClutImage": {
        "args": [
            {
                "name": "$clut",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::hasNextImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::hasPreviousImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::identifyFormat": {
        "args": [
            {
                "name": "$embedText",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Imagick::identifyImage": {
        "args": [
            {
                "defaultValue": false,
                "name": "$appendRawOutput",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::implodeImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::importImagePixels": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$storage",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pixels",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::inverseFourierTransformImage": {
        "args": [
            {
                "name": "$complement",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$magnitude",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::labelImage": {
        "args": [
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::levelImage": {
        "args": [
            {
                "name": "$blackPoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$whitePoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::linearStretchImage": {
        "args": [
            {
                "name": "$blackPoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$whitePoint",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::liquidRescaleImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$delta_x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$rigidity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::listRegistry": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::magnifyImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::mapImage": {
        "args": [
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::matteFloodfillImage": {
        "args": [
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bordercolor",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::medianFilterImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::mergeImageLayers": {
        "args": [
            {
                "name": "$layer_method",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::minifyImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::modulateImage": {
        "args": [
            {
                "name": "$brightness",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$saturation",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$hue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::montageImage": {
        "args": [
            {
                "name": "$draw",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            },
            {
                "name": "$tile_geometry",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$thumbnail_geometry",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$frame",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::morphImages": {
        "args": [
            {
                "name": "$number_frames",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::morphology": {
        "args": [
            {
                "name": "$morphologyMethod",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iterations",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$ImagickKernel",
                "optionalDepth": 0,
                "type": "ImagickKernel"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::mosaicImages": {
        "args": [],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::motionBlurImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::negateImage": {
        "args": [
            {
                "name": "$gray",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::newImage": {
        "args": [
            {
                "name": "$cols",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::newPseudoImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pseudoString",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::nextImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::normalizeImage": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::oilPaintImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::opaquePaintImage": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$invert",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::optimizeImageLayers": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::orderedPosterizeImage": {
        "args": [
            {
                "name": "$threshold_map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::paintFloodfillImage": {
        "args": [
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bordercolor",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::paintOpaqueImage": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::paintTransparentImage": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::pingImage": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::pingImageBlob": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::pingImageFile": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fileName",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::polaroidImage": {
        "args": [
            {
                "name": "$properties",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::posterizeImage": {
        "args": [
            {
                "name": "$levels",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::previewImages": {
        "args": [
            {
                "name": "$preview",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::previousImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::profileImage": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$profile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::quantizeImage": {
        "args": [
            {
                "name": "$numberColors",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$treedepth",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$measureError",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::quantizeImages": {
        "args": [
            {
                "name": "$numberColors",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$treedepth",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dither",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$measureError",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::queryFontMetrics": {
        "args": [
            {
                "name": "$properties",
                "optionalDepth": 0,
                "type": "ImagickDraw"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$multiline",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::queryFonts": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::queryFormats": {
        "args": [
            {
                "defaultValue": "*",
                "name": "$pattern",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Imagick::radialBlurImage": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::raiseImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$raise",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::randomThresholdImage": {
        "args": [
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::readImage": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::readImageBlob": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::readImageFile": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$fileName",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::readImages": {
        "args": [
            {
                "name": "$filenames",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::recolorImage": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::reduceNoiseImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::remapImage": {
        "args": [
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$DITHER",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::removeImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::removeImageProfile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::render": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::resampleImage": {
        "args": [
            {
                "name": "$x_resolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_resolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blur",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::resetImagePage": {
        "args": [
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::resizeImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blur",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$bestfit",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::rollImage": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::rotateImage": {
        "args": [
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::rotationalBlurImage": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::roundCorners": {
        "args": [
            {
                "name": "$x_rounding",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_rounding",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": 10,
                "name": "$stroke_width",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "defaultValue": 5,
                "name": "$displace",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "defaultValue": -6,
                "name": "$size_correction",
                "optionalDepth": 3,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sampleImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::scaleImage": {
        "args": [
            {
                "name": "$cols",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$bestfit",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::segmentImage": {
        "args": [
            {
                "name": "$COLORSPACE",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cluster_threshold",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$smooth_threshold",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$verbose",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::selectiveBlurImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::separateImageChannel": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sepiaToneImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setBackgroundColor": {
        "args": [
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setColorspace": {
        "args": [
            {
                "name": "$COLORSPACE",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setCompression": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setCompressionQuality": {
        "args": [
            {
                "name": "$quality",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setFilename": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setFirstIterator": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setFont": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setGravity": {
        "args": [
            {
                "name": "$gravity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImage": {
        "args": [
            {
                "name": "$replace",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageAlphaChannel": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageArtifact": {
        "args": [
            {
                "name": "$artifact",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageAttribute": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageBackgroundColor": {
        "args": [
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageBias": {
        "args": [
            {
                "name": "$bias",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageBiasQuantum": {
        "args": [
            {
                "name": "$bias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Imagick::setImageBluePrimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageBorderColor": {
        "args": [
            {
                "name": "$border",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageChannelDepth": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageClipMask": {
        "args": [
            {
                "name": "$clip_mask",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageColormapColor": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageColorspace": {
        "args": [
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageCompose": {
        "args": [
            {
                "name": "$compose",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageCompression": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageCompressionQuality": {
        "args": [
            {
                "name": "$quality",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageDelay": {
        "args": [
            {
                "name": "$delay",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageDepth": {
        "args": [
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageDispose": {
        "args": [
            {
                "name": "$dispose",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageExtent": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageFilename": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageGamma": {
        "args": [
            {
                "name": "$gamma",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageGravity": {
        "args": [
            {
                "name": "$gravity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageGreenPrimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageInterlaceScheme": {
        "args": [
            {
                "name": "$interlace_scheme",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageInterpolateMethod": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageIterations": {
        "args": [
            {
                "name": "$iterations",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageMatte": {
        "args": [
            {
                "name": "$matte",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageMatteColor": {
        "args": [
            {
                "name": "$matte",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageOpacity": {
        "args": [
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageOrientation": {
        "args": [
            {
                "name": "$orientation",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImagePage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageProfile": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$profile",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageRedPrimary": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageRenderingIntent": {
        "args": [
            {
                "name": "$rendering_intent",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageResolution": {
        "args": [
            {
                "name": "$x_resolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_resolution",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageScene": {
        "args": [
            {
                "name": "$scene",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageTicksPerSecond": {
        "args": [
            {
                "name": "$ticks_per_second",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageType": {
        "args": [
            {
                "name": "$image_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageUnits": {
        "args": [
            {
                "name": "$units",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageVirtualPixelMethod": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setImageWhitePoint": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setInterlaceScheme": {
        "args": [
            {
                "name": "$interlace_scheme",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setIteratorIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setLastIterator": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setOption": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setPage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setPointSize": {
        "args": [
            {
                "name": "$point_size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setProgressMonitor": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setRegistry": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setResolution": {
        "args": [
            {
                "name": "$x_resolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_resolution",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setResourceLimit": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setSamplingFactors": {
        "args": [
            {
                "name": "$factors",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setSize": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setSizeOffset": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::setType": {
        "args": [
            {
                "name": "$image_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::shadeImage": {
        "args": [
            {
                "name": "$gray",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$azimuth",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$elevation",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::shadowImage": {
        "args": [
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sharpenImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::shaveImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::shearImage": {
        "args": [
            {
                "name": "$background",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$x_shear",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_shear",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sigmoidalContrastImage": {
        "args": [
            {
                "name": "$sharpen",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sketchImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::smushImages": {
        "args": [
            {
                "name": "$stack",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::solarizeImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::sparseColorImage": {
        "args": [
            {
                "name": "$SPARSE_METHOD",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::spliceImage": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::spreadImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::statisticImage": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::steganoImage": {
        "args": [
            {
                "name": "$watermark_wand",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::stereoImage": {
        "args": [
            {
                "name": "$offset_wand",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::stripImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::subImageMatch": {
        "args": [
            {
                "name": "$Imagick",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "&$offset",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "&$similarity",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::swirlImage": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::textureImage": {
        "args": [
            {
                "name": "$texture_wand",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::thresholdImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::thumbnailImage": {
        "args": [
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$bestfit",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$fill",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::tintImage": {
        "args": [
            {
                "name": "$tint",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$legacy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Imagick::transformImage": {
        "args": [
            {
                "name": "$crop",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$geometry",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "Imagick::transformImageColorspace": {
        "args": [
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::transparentPaintImage": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$invert",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::transposeImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::transverseImage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::trimImage": {
        "args": [
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::uniqueImageColors": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::unsharpMaskImage": {
        "args": [
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sigma",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$amount",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$channel",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::vignetteImage": {
        "args": [
            {
                "name": "$blackPoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$whitePoint",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::waveImage": {
        "args": [
            {
                "name": "$amplitude",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::whiteThresholdImage": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::writeImage": {
        "args": [
            {
                "defaultValue": null,
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::writeImageFile": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::writeImages": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$adjoin",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Imagick::writeImagesFile": {
        "args": [
            {
                "name": "$filehandle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::affine": {
        "args": [
            {
                "name": "$affine",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::annotation": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::arc": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ex",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ey",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sd",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ed",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::bezier": {
        "args": [
            {
                "name": "$coordinates",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::circle": {
        "args": [
            {
                "name": "$ox",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$oy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$px",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$py",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::clone": {
        "args": [],
        "returnTypes": [
            "ImagickDraw"
        ]
    },
    "ImagickDraw::color": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$paintMethod",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::comment": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::composite": {
        "args": [
            {
                "name": "$compose",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$compositeWand",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::__construct": {
        "args": [],
        "returnTypes": []
    },
    "ImagickDraw::destroy": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::ellipse": {
        "args": [
            {
                "name": "$ox",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$oy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$end",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::getClipPath": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ImagickDraw::getClipRule": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getClipUnits": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getFillColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "ImagickDraw::getFillOpacity": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getFillRule": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getFont": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ImagickDraw::getFontFamily": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ImagickDraw::getFontSize": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getFontStretch": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getFontStyle": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getFontWeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getGravity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getStrokeAntialias": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::getStrokeColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "ImagickDraw::getStrokeDashArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickDraw::getStrokeDashOffset": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getStrokeLineCap": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getStrokeLineJoin": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getStrokeMiterLimit": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getStrokeOpacity": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getStrokeWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getTextAlignment": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getTextAntialias": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::getTextDecoration": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickDraw::getTextEncoding": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ImagickDraw::getTextInterlineSpacing": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getTextInterwordSpacing": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getTextKerning": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickDraw::getTextUnderColor": {
        "args": [],
        "returnTypes": [
            "ImagickPixel"
        ]
    },
    "ImagickDraw::getVectorGraphics": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ImagickDraw::line": {
        "args": [
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ex",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ey",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::matte": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$paintMethod",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::pathClose": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToAbsolute": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToQuadraticBezierAbsolute": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToQuadraticBezierRelative": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToQuadraticBezierSmoothRelative": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToRelative": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToSmoothAbsolute": {
        "args": [
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathCurveToSmoothRelative": {
        "args": [
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathEllipticArcAbsolute": {
        "args": [
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x_axis_rotation",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$large_arc_flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$sweep_flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathEllipticArcRelative": {
        "args": [
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x_axis_rotation",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$large_arc_flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$sweep_flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathFinish": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToAbsolute": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToHorizontalAbsolute": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToHorizontalRelative": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToRelative": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToVerticalAbsolute": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathLineToVerticalRelative": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathMoveToAbsolute": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathMoveToRelative": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pathStart": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::point": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::polygon": {
        "args": [
            {
                "name": "$coordinates",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::polyline": {
        "args": [
            {
                "name": "$coordinates",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pop": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::popClipPath": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::popDefs": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::popPattern": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::push": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::pushClipPath": {
        "args": [
            {
                "name": "$clip_mask_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pushDefs": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::pushPattern": {
        "args": [
            {
                "name": "$pattern_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::rectangle": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::render": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::resetVectorGraphics": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::rotate": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::roundRectangle": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$rx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ry",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::scale": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setClipPath": {
        "args": [
            {
                "name": "$clip_mask",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setClipRule": {
        "args": [
            {
                "name": "$fill_rule",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setClipUnits": {
        "args": [
            {
                "name": "$clip_units",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFillAlpha": {
        "args": [
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFillColor": {
        "args": [
            {
                "name": "$fill_pixel",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFillOpacity": {
        "args": [
            {
                "name": "$fillOpacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFillPatternURL": {
        "args": [
            {
                "name": "$fill_url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::setFillRule": {
        "args": [
            {
                "name": "$fill_rule",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFont": {
        "args": [
            {
                "name": "$font_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFontFamily": {
        "args": [
            {
                "name": "$font_family",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFontSize": {
        "args": [
            {
                "name": "$pointsize",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFontStretch": {
        "args": [
            {
                "name": "$fontStretch",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFontStyle": {
        "args": [
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setFontWeight": {
        "args": [
            {
                "name": "$font_weight",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setGravity": {
        "args": [
            {
                "name": "$gravity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setResolution": {
        "args": [
            {
                "name": "$x_resolution",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y_resolution",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeAlpha": {
        "args": [
            {
                "name": "$opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeAntialias": {
        "args": [
            {
                "name": "$stroke_antialias",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeColor": {
        "args": [
            {
                "name": "$stroke_pixel",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeDashArray": {
        "args": [
            {
                "name": "$dashArray",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeDashOffset": {
        "args": [
            {
                "name": "$dash_offset",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeLineCap": {
        "args": [
            {
                "name": "$linecap",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeLineJoin": {
        "args": [
            {
                "name": "$linejoin",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeMiterLimit": {
        "args": [
            {
                "name": "$miterlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeOpacity": {
        "args": [
            {
                "name": "$stroke_opacity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokePatternURL": {
        "args": [
            {
                "name": "$stroke_url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setStrokeWidth": {
        "args": [
            {
                "name": "$stroke_width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextAlignment": {
        "args": [
            {
                "name": "$alignment",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextAntialias": {
        "args": [
            {
                "name": "$antiAlias",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextDecoration": {
        "args": [
            {
                "name": "$decoration",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextEncoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextInterlineSpacing": {
        "args": [
            {
                "name": "$spacing",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextInterwordSpacing": {
        "args": [
            {
                "name": "$spacing",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextKerning": {
        "args": [
            {
                "name": "$kerning",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setTextUnderColor": {
        "args": [
            {
                "name": "$under_color",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::setVectorGraphics": {
        "args": [
            {
                "name": "$xml",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ImagickDraw::setViewbox": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::skewX": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::skewY": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickDraw::translate": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::__construct": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ImagickPixel::destroy": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::getColor": {
        "args": [
            {
                "defaultValue": null,
                "name": "$normalized",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixel::getColorAsString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ImagickPixel::getColorCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickPixel::getColorQuantum": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixel::getColorValue": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "ImagickPixel::getColorValueQuantum": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "ImagickPixel::getHSL": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixel::getIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickPixel::isPixelSimilar": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::isPixelSimilarQuantum": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::isSimilar": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "ImagickPixel"
            },
            {
                "name": "$fuzz",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setColor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setcolorcount": {
        "args": [
            {
                "name": "$colorCount",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setColorValue": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setColorValueQuantum": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "number"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setHSL": {
        "args": [
            {
                "name": "$hue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$saturation",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$luminosity",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixel::setIndex": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::clear": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::__construct": {
        "args": [
            {
                "name": "$wand",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "Imagick"
        ]
    },
    "ImagickPixelIterator::destroy": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::getCurrentIteratorRow": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixelIterator::getIteratorRow": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ImagickPixelIterator::getNextIteratorRow": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixelIterator::getPreviousIteratorRow": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickPixelIterator::newPixelIterator": {
        "args": [
            {
                "name": "$wand",
                "optionalDepth": 0,
                "type": "Imagick"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::newPixelRegionIterator": {
        "args": [
            {
                "name": "$wand",
                "optionalDepth": 0,
                "type": "Imagick"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$columns",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::resetIterator": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::setIteratorFirstRow": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::setIteratorLastRow": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::setIteratorRow": {
        "args": [
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickPixelIterator::syncIterator": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ImagickKernel::addKernel": {
        "args": [
            {
                "name": "$ImagickKernel",
                "optionalDepth": 0,
                "type": "ImagickKernel"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ImagickKernel::addUnityKernel": {
        "args": [
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ImagickKernel::fromBuiltin": {
        "args": [
            {
                "name": "$kernelType",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$kernelString",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ImagickKernel"
        ]
    },
    "ImagickKernel::fromMatrix": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$origin",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "ImagickKernel"
        ]
    },
    "ImagickKernel::getMatrix": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ImagickKernel::scale": {
        "args": [
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$normalizeFlag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ImagickKernel::separate": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "cyrus_authenticate": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mechlist",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$service",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$minssf",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$maxssf",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$authname",
                "optionalDepth": 6,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 7,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "cyrus_bind": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callbacks",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "cyrus_close": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "cyrus_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "cyrus_query": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "cyrus_unbind": {
        "args": [
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$trigger_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_8bit": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_alerts": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "imap_append": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$internal_date",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_base64": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_binary": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_body": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_bodystruct": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$section",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_check": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_clearflag_full": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sequence",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_close": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_createmailbox": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_delete": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imap_deletemailbox": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_errors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "imap_expunge": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imap_fetch_overview": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sequence",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_fetchbody": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$section",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_fetchheader": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_fetchmime": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$section",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_fetchstructure": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_gc": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$caches",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_get_quota": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$quota_root",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_get_quotaroot": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$quota_root",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_getacl": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_getmailboxes": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_getsubscribed": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_headerinfo": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$fromlength",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$subjectlength",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$defaulthost",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_headers": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_last_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "imap_list": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "imap_listscan": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_lsub": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ref",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_mail_compose": {
        "args": [
            {
                "name": "$envelope",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$body",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_mail_copy": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msglist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_mail_move": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msglist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_mail": {
        "args": [
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$additional_headers",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$cc",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$bcc",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$rpath",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_mailboxmsginfo": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_mime_header_decode": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_msgno": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imap_mutf7_to_utf8": {
        "args": [
            {
                "name": "$in",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "imap_num_msg": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "imap_num_recent": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imap_open": {
        "args": [
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$n_retries",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$params",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "imap_ping": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imap_qprint": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_renamemailbox": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$old_mbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_mbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_reopen": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$n_retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "imap_rfc822_parse_adrlist": {
        "args": [
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default_host",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_rfc822_parse_headers": {
        "args": [
            {
                "name": "$headers",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "UNKNOWN",
                "name": "$defaulthost",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_rfc822_write_address": {
        "args": [
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$personal",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_savebody": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$part_number",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_search": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$criteria",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$charset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_set_quota": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$quota_root",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$quota_limit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_setacl": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rights",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_setflag_full": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sequence",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_sort": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$criteria",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$reverse",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$search_criteria",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$charset",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "imap_status": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "imap_subscribe": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_thread": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "imap_timeout": {
        "args": [
            {
                "name": "$timeout_type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "imap_uid": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "imap_undelete": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msg_number",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_unsubscribe": {
        "args": [
            {
                "name": "$imap_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mailbox",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "imap_utf7_decode": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "imap_utf7_encode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "imap_utf8_to_mutf7": {
        "args": [
            {
                "name": "$in",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "imap_utf8": {
        "args": [
            {
                "name": "$mime_encoded_text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ezmlm_hash": {
        "args": [
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "mail": {
        "args": [
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$additional_headers",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$additional_parameters",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "mailparse_determine_best_xfer_encoding": {
        "args": [
            {
                "name": "$fp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mailparse_msg_create": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "mailparse_msg_extract_part_file": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$callbackfunc",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mailparse_msg_extract_part": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msgbody",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callbackfunc",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mailparse_msg_extract_whole_part_file": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callbackfunc",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "mailparse_msg_free": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mailparse_msg_get_part_data": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mailparse_msg_get_part": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mimesection",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "mailparse_msg_get_structure": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mailparse_msg_parse_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "mailparse_msg_parse": {
        "args": [
            {
                "name": "$mimemail",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mailparse_rfc822_parse_addresses": {
        "args": [
            {
                "name": "$addresses",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "mailparse_stream_encode": {
        "args": [
            {
                "name": "$sourcefp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$destfp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mailparse_uudecode_all": {
        "args": [
            {
                "name": "$fp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "vpopmail_add_alias_domain_ex": {
        "args": [
            {
                "name": "$olddomain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newdomain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_add_alias_domain": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$aliasdomain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_add_domain_ex": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passwd",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$quota",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$bounce",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$apop",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_add_domain": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$gid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_add_user": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$gecos",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$apop",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_alias_add": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_alias_del_domain": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_alias_del": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_alias_get_all": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "vpopmail_alias_get": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "vpopmail_auth_user": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$apop",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_del_domain_ex": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_del_domain": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_del_user": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "vpopmail_passwd": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$apop",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "vpopmail_set_user_quota": {
        "args": [
            {
                "name": "$user",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$quota",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "bcadd": {
        "args": [
            {
                "name": "$left_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$right_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bccomp": {
        "args": [
            {
                "name": "$left_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$right_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "bcdiv": {
        "args": [
            {
                "name": "$dividend",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$divisor",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "bcmod": {
        "args": [
            {
                "name": "$dividend",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$divisor",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "bcmul": {
        "args": [
            {
                "name": "$left_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$right_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bcpow": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$exponent",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bcpowmod": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$exponent",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$modulus",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "bcscale": {
        "args": [
            {
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "bcsqrt": {
        "args": [
            {
                "name": "$operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "bcsub": {
        "args": [
            {
                "name": "$left_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$right_operand",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$scale",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gmp_abs": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_add": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_and": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_binomial": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$k",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP",
            "false"
        ]
    },
    "gmp_clrbit": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "gmp_cmp": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_com": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_div_q": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$round",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_div_qr": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$round",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gmp_div_r": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$round",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_divexact": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_export": {
        "args": [
            {
                "name": "$gmpnumber",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "defaultValue": 1,
                "name": "$word_size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gmp_fact": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_gcd": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_gcdext": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gmp_hamdist": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_import": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$word_size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP",
            "false"
        ]
    },
    "gmp_init": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$base",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_intval": {
        "args": [
            {
                "name": "$gmpnumber",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_invert": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP",
            "false"
        ]
    },
    "gmp_jacobi": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_kronecker": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_lcm": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_legendre": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_mod": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_mul": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_neg": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_nextprime": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_or": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_perfect_power": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "gmp_perfect_square": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "gmp_popcount": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_pow": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$exp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_powm": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$exp",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$mod",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_prob_prime": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "defaultValue": 10,
                "name": "$reps",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_random_bits": {
        "args": [
            {
                "name": "$bits",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_random_range": {
        "args": [
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_random_seed": {
        "args": [
            {
                "name": "$seed",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "gmp_random": {
        "args": [
            {
                "defaultValue": 20,
                "name": "$limiter",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_root": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$nth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_rootrem": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$nth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gmp_scan0": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_scan1": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_setbit": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$bit_on",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "gmp_sign": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gmp_sqrt": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_sqrtrem": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gmp_strval": {
        "args": [
            {
                "name": "$gmpnumber",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "defaultValue": 10,
                "name": "$base",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gmp_sub": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "gmp_testbit": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "gmp_xor": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "GMP"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "GMP"
            }
        ],
        "returnTypes": [
            "GMP"
        ]
    },
    "Lapack::eigenValues": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$left",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$right",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::identity": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::leastSquaresByFactorisation": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::leastSquaresBySVD": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::pseudoInverse": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::singularValues": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Lapack::solveLinearEquation": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "abs": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "acos": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "acosh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "asin": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "asinh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "atan2": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "atan": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "atanh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "base_convert": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$frombase",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$tobase",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bindec": {
        "args": [
            {
                "name": "$binary_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "ceil": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "cos": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "cosh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "decbin": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "dechex": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "decoct": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "deg2rad": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "exp": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "expm1": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "floor": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "fmod": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "getrandmax": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "hexdec": {
        "args": [
            {
                "name": "$hex_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "hypot": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "intdiv": {
        "args": [
            {
                "name": "$dividend",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$divisor",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "is_finite": {
        "args": [
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_infinite": {
        "args": [
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_nan": {
        "args": [
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "lcg_value": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "log10": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "log1p": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "log": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$base",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "max": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "min": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "mt_getrandmax": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "mt_rand": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "mt_srand": {
        "args": [
            {
                "name": "$seed",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "octdec": {
        "args": [
            {
                "name": "$octal_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "pi": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "pow": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "number"
            },
            {
                "name": "$exp",
                "optionalDepth": 0,
                "type": "number"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "rad2deg": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "rand": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "round": {
        "args": [
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$precision",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "sin": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "sinh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "sqrt": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "srand": {
        "args": [
            {
                "name": "$seed",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "tan": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "tanh": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_absolute_deviation": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_cdf_beta": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_binomial": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_cauchy": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_chisquare": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_exponential": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_f": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_gamma": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_laplace": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_logistic": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_negative_binomial": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_noncentral_chisquare": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_noncentral_f": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par4",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_noncentral_t": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_normal": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_poisson": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_t": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_uniform": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_cdf_weibull": {
        "args": [
            {
                "name": "$par1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$par3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$which",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_covariance": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_beta": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_cauchy": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ave",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$stdev",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_chisquare": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfr",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_exponential": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_f": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfr1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfr2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_gamma": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_laplace": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ave",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$stdev",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_logistic": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ave",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$stdev",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_normal": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ave",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$stdev",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_pmf_binomial": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$pi",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_pmf_hypergeometric": {
        "args": [
            {
                "name": "$n1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$n2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$N1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$N2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_pmf_negative_binomial": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$pi",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_pmf_poisson": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lb",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_t": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfr",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_uniform": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_dens_weibull": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_harmonic_mean": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "number",
            "false"
        ]
    },
    "stats_kurtosis": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_rand_gen_beta": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_chisquare": {
        "args": [
            {
                "name": "$df",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_exponential": {
        "args": [
            {
                "name": "$av",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_f": {
        "args": [
            {
                "name": "$dfn",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfd",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_funiform": {
        "args": [
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_gamma": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_ibinomial_negative": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stats_rand_gen_ibinomial": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pp",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stats_rand_gen_int": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "stats_rand_gen_ipoisson": {
        "args": [
            {
                "name": "$mu",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stats_rand_gen_iuniform": {
        "args": [
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stats_rand_gen_noncenral_chisquare": {
        "args": [
            {
                "name": "$df",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xnonc",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_noncentral_chisquare": {
        "args": [
            {
                "name": "$df",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xnonc",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_noncentral_f": {
        "args": [
            {
                "name": "$dfn",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dfd",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xnonc",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_noncentral_t": {
        "args": [
            {
                "name": "$df",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xnonc",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_normal": {
        "args": [
            {
                "name": "$av",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sd",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_gen_t": {
        "args": [
            {
                "name": "$df",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_get_seeds": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "stats_rand_phrase_to_seeds": {
        "args": [
            {
                "name": "$phrase",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stats_rand_ranf": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "stats_rand_setall": {
        "args": [
            {
                "name": "$iseed1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$iseed2",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "stats_skew": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_standard_deviation": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$sample",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_stat_binomial_coef": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_stat_correlation": {
        "args": [
            {
                "name": "$arr1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$arr2",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_stat_factorial": {
        "args": [
            {
                "name": "$n",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_stat_independent_t": {
        "args": [
            {
                "name": "$arr1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$arr2",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_stat_innerproduct": {
        "args": [
            {
                "name": "$arr1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$arr2",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_stat_paired_t": {
        "args": [
            {
                "name": "$arr1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$arr2",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "stats_stat_percentile": {
        "args": [
            {
                "name": "$arr",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$perc",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_stat_powersum": {
        "args": [
            {
                "name": "$arr",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$power",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "stats_variance": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$sample",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "trader_acos": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ad": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$volume",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_add": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_adosc": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$volume",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$slowPeriod",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_adx": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_adxr": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_apo": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$slowPeriod",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$mAType",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_aroon": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_aroonosc": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_asin": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_atan": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_atr": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_avgprice": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_bbands": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$nbDevUp",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "name": "$nbDevDn",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "name": "$mAType",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_beta": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_bop": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cci": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl2crows": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3blackcrows": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3inside": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3linestrike": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3outside": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3starsinsouth": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdl3whitesoldiers": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlabandonedbaby": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdladvanceblock": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlbelthold": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlbreakaway": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlclosingmarubozu": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlconcealbabyswall": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlcounterattack": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdldarkcloudcover": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdldoji": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdldojistar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdldragonflydoji": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlengulfing": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdleveningdojistar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdleveningstar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlgapsidesidewhite": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlgravestonedoji": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhammer": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhangingman": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlharami": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlharamicross": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhighwave": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhikkake": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhikkakemod": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlhomingpigeon": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlidentical3crows": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlinneck": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlinvertedhammer": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlkicking": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlkickingbylength": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlladderbottom": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdllongleggeddoji": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdllongline": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlmarubozu": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlmatchinglow": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlmathold": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlmorningdojistar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlmorningstar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$penetration",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlonneck": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlpiercing": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlrickshawman": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlrisefall3methods": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlseparatinglines": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlshootingstar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlshortline": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlspinningtop": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlstalledpattern": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlsticksandwich": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdltakuri": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdltasukigap": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlthrusting": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdltristar": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlunique3river": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlupsidegap2crows": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cdlxsidegap3methods": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ceil": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cmo": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_correl": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cos": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_cosh": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_dema": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_div": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_dx": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ema": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "trader_exp": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_floor": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_get_compat": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "trader_get_unstable_period": {
        "args": [
            {
                "name": "$functionId",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "trader_ht_dcperiod": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ht_dcphase": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ht_phasor": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ht_sine": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ht_trendline": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ht_trendmode": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_kama": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_linearreg_angle": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_linearreg_intercept": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_linearreg_slope": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_linearreg": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ln": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_log10": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ma": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$mAType",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_macd": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$slowPeriod",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$signalPeriod",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_macdext": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$fastMAType",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$slowPeriod",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$slowMAType",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$signalPeriod",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$signalMAType",
                "optionalDepth": 6,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_macdfix": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$signalPeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_mama": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastLimit",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$slowLimit",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_mavp": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$periods",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$minPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$maxPeriod",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$mAType",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_max": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_maxindex": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_medprice": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_mfi": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$volume",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_midpoint": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_midprice": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_min": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_minindex": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_minmax": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_minmaxindex": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_minus_di": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_minus_dm": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_mom": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_mult": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_natr": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_obv": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$volume",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_plus_di": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_plus_dm": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ppo": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastPeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$slowPeriod",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$mAType",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_roc": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_rocp": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_rocr100": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_rocr": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_rsi": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sar": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$acceleration",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$maximum",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sarext": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$startValue",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$offsetOnReverse",
                "optionalDepth": 2,
                "type": "float"
            },
            {
                "name": "$accelerationInitLong",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "name": "$accelerationLong",
                "optionalDepth": 4,
                "type": "float"
            },
            {
                "name": "$accelerationMaxLong",
                "optionalDepth": 5,
                "type": "float"
            },
            {
                "name": "$accelerationInitShort",
                "optionalDepth": 6,
                "type": "float"
            },
            {
                "name": "$accelerationShort",
                "optionalDepth": 7,
                "type": "float"
            },
            {
                "name": "$accelerationMaxShort",
                "optionalDepth": 8,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_set_compat": {
        "args": [
            {
                "name": "$compatId",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "trader_set_unstable_period": {
        "args": [
            {
                "name": "$functionId",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "trader_sin": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sinh": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sma": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sqrt": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_stddev": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$nbDev",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_stoch": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastK_Period",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$slowK_Period",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$slowK_MAType",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$slowD_Period",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$slowD_MAType",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_stochf": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$fastK_Period",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$fastD_Period",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$fastD_MAType",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_stochrsi": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$fastK_Period",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$fastD_Period",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$fastD_MAType",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sub": {
        "args": [
            {
                "name": "$real0",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$real1",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_sum": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_t3": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$vFactor",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_tan": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_tanh": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_tema": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_trange": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_trima": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_trix": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_tsf": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_typprice": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_ultosc": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod1",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$timePeriod2",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$timePeriod3",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_var": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$nbDev",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_wclprice": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_willr": {
        "args": [
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "trader_wma": {
        "args": [
            {
                "name": "$real",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timePeriod",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fdf_add_doc_javascript": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$script_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$script_code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_add_template": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$newpage",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$template",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rename",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fdf_close": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fdf_create": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fdf_enum_values": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$userdata",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fdf_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "fdf_error": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$error_code",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_get_ap": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$face",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_get_attachment": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$savepath",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fdf_get_encoding": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_get_file": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_get_flags": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$whichflags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fdf_get_opt": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$element",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "fdf_get_status": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_get_value": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$which",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "fdf_get_version": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_header": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "fdf_next_field_name": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "fdf_open_string": {
        "args": [
            {
                "name": "$fdf_data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fdf_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fdf_remove_item": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fdf_save_string": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "fdf_save": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_ap": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$field_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$face",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$page_number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_encoding": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_file": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$target_frame",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_flags": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$whichFlags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$newFlags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_javascript_action": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$trigger",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_on_import_javascript": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$before_data_import",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fdf_set_opt": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$element",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_status": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_submit_form_action": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$trigger",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_target_frame": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$frame_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_value": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$isName",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fdf_set_version": {
        "args": [
            {
                "name": "$fdf_document",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_adddecryptkey": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fingerprint",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_addencryptkey": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fingerprint",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_addsignkey": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fingerprint",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_cleardecryptkeys": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_clearencryptkeys": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_clearsignkeys": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_decrypt": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_decryptverify": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$plaintext",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gnupg_encrypt": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$plaintext",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_encryptsign": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$plaintext",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_export": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fingerprint",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_geterror": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_getprotocol": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gnupg_import": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$keydata",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gnupg_init": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "gnupg_keyinfo": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "gnupg_setarmor": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$armor",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_seterrormode": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$errormode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "gnupg_setsignmode": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$signmode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gnupg_sign": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$plaintext",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gnupg_verify": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$signed_text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$signature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$plaintext",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "HaruDoc::addPage": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::addPageLabel": {
        "args": [
            {
                "name": "$first_page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$first_num",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::__construct": {
        "args": [],
        "returnTypes": []
    },
    "HaruDoc::createOutline": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parent_outline",
                "optionalDepth": 1,
                "type": "object"
            },
            {
                "name": "$encoder",
                "optionalDepth": 2,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::getCurrentEncoder": {
        "args": [],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "HaruDoc::getCurrentPage": {
        "args": [],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "HaruDoc::getEncoder": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::getFont": {
        "args": [
            {
                "name": "$fontname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::getInfoAttr": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "HaruDoc::getPageLayout": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "HaruDoc::getPageMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruDoc::getStreamSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruDoc::insertPage": {
        "args": [
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::loadJPEG": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::loadPNG": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$deferred",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::loadRaw": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$color_space",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruDoc::loadTTC": {
        "args": [
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$embed",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "HaruDoc::loadTTF": {
        "args": [
            {
                "name": "$fontfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$embed",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "HaruDoc::loadType1": {
        "args": [
            {
                "name": "$afmfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pfmfile",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "HaruDoc::output": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::readFromStream": {
        "args": [
            {
                "name": "$bytes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "HaruDoc::resetError": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::resetStream": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::save": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::saveToStream": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setCompressionMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setCurrentEncoder": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setEncryptionMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$key_len",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setInfoAttr": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setInfoDateAttr": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$year",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$month",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$day",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$hour",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sec",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$ind",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$off_hour",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$off_min",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setOpenAction": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setPageLayout": {
        "args": [
            {
                "name": "$layout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setPageMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setPagesConfiguration": {
        "args": [
            {
                "name": "$page_per_pages",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setPassword": {
        "args": [
            {
                "name": "$owner_password",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user_password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::setPermission": {
        "args": [
            {
                "name": "$permission",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useCNSEncodings": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useCNSFonts": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useCNTEncodings": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useCNTFonts": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useJPEncodings": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useJPFonts": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useKREncodings": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDoc::useKRFonts": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::arc": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ray",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ang1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ang2",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::beginText": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::circle": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ray",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::closePath": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::concat": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::createDestination": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "HaruPage::createLinkAnnotation": {
        "args": [
            {
                "name": "$rectangle",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruPage::createTextAnnotation": {
        "args": [
            {
                "name": "$rectangle",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoder",
                "optionalDepth": 1,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruPage::createURLAnnotation": {
        "args": [
            {
                "name": "$rectangle",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "HaruPage::curveTo2": {
        "args": [
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::curveTo3": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::curveTo": {
        "args": [
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::drawImage": {
        "args": [
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::ellipse": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xray",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$yray",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::endPath": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::endText": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::eofill": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::eoFillStroke": {
        "args": [
            {
                "defaultValue": false,
                "name": "$close_path",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::fill": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::fillStroke": {
        "args": [
            {
                "defaultValue": false,
                "name": "$close_path",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::getCharSpace": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getCMYKFill": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getCMYKStroke": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getCurrentFont": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "HaruPage::getCurrentFontSize": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getCurrentPos": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getCurrentTextPos": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getDash": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "HaruPage::getFillingColorSpace": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getFlatness": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getGMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getGrayFill": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getGrayStroke": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getHeight": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getHorizontalScaling": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getLineCap": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getLineJoin": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getLineWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getMiterLimit": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getRGBFill": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getRGBStroke": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getStrokingColorSpace": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getTextLeading": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getTextMatrix": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getTextRenderingMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::getTextRise": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getTextWidth": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getTransMatrix": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruPage::getWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::getWordSpace": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "HaruPage::lineTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::measureText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$wordwrap",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HaruPage::moveTextPos": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$set_leading",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::moveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::moveToNextLine": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::rectangle": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setCharSpace": {
        "args": [
            {
                "name": "$char_space",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setCMYKFill": {
        "args": [
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$m",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$k",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setCMYKStroke": {
        "args": [
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$m",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$k",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setDash": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$phase",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setFlatness": {
        "args": [
            {
                "name": "$flatness",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setFontAndSize": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setGrayFill": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setGrayStroke": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setHeight": {
        "args": [
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setHorizontalScaling": {
        "args": [
            {
                "name": "$scaling",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setLineCap": {
        "args": [
            {
                "name": "$cap",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setLineJoin": {
        "args": [
            {
                "name": "$join",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setLineWidth": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setMiterLimit": {
        "args": [
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setRGBFill": {
        "args": [
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setRGBStroke": {
        "args": [
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setRotate": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$direction",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setSlideShow": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$disp_time",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$trans_time",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setTextLeading": {
        "args": [
            {
                "name": "$text_leading",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setTextMatrix": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setTextRenderingMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setTextRise": {
        "args": [
            {
                "name": "$rise",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setWidth": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::setWordSpace": {
        "args": [
            {
                "name": "$word_space",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::showText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::showTextNextLine": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$word_space",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$char_space",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::stroke": {
        "args": [
            {
                "defaultValue": false,
                "name": "$close_path",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::textOut": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruPage::textRect": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bottom",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$align",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruFont::getAscent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruFont::getCapHeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruFont::getDescent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruFont::getEncodingName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "HaruFont::getFontName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "HaruFont::getTextWidth": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "HaruFont::getUnicodeWidth": {
        "args": [
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HaruFont::getXHeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruFont::measureText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$font_size",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$char_space",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$word_space",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$word_wrap",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HaruImage::getBitsPerComponent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruImage::getColorSpace": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "HaruImage::getHeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruImage::getSize": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "HaruImage::getWidth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruImage::setColorMask": {
        "args": [
            {
                "name": "$rmin",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$rmax",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$gmin",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$gmax",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bmin",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bmax",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruImage::setMaskImage": {
        "args": [
            {
                "name": "$mask_image",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruEncoder::getByteType": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HaruEncoder::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruEncoder::getUnicode": {
        "args": [
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "HaruEncoder::getWritingMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "HaruOutline::setDestination": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruOutline::setOpened": {
        "args": [
            {
                "name": "$opened",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruAnnotation::setBorderStyle": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dash_on",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dash_off",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruAnnotation::setHighlightMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruAnnotation::setIcon": {
        "args": [
            {
                "name": "$icon",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruAnnotation::setOpened": {
        "args": [
            {
                "name": "$opened",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFit": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitB": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitBH": {
        "args": [
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitBV": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitH": {
        "args": [
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitR": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bottom",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setFitV": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "HaruDestination::setXYZ": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$zoom",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ming_keypress": {
        "args": [
            {
                "name": "$char",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ming_setcubicthreshold": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ming_setscale": {
        "args": [
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ming_setswfcompression": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ming_useconstants": {
        "args": [
            {
                "name": "$use",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ming_useswfversion": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFAction::__construct": {
        "args": [
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SWFBitmap::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$alphafile",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SWFBitmap::getHeight": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFBitmap::getWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFButton::addAction": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "SWFAction"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::addASound": {
        "args": [
            {
                "name": "$sound",
                "optionalDepth": 0,
                "type": "SWFSound"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SWFSoundInstance"
        ]
    },
    "SWFButton::addShape": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFButton::setAction": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "SWFAction"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::setDown": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::setHit": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::setMenu": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::setOver": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFButton::setUp": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::addAction": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "SWFAction"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::addColor": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$a",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::endMask": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::move": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::moveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::multColor": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$a",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::remove": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::rotate": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::rotateTo": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::scale": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::scaleTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::setDepth": {
        "args": [
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::setMaskLevel": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::setMatrix": {
        "args": [
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::setName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::setRatio": {
        "args": [
            {
                "name": "$ratio",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::skewX": {
        "args": [
            {
                "name": "$ddegrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::skewXTo": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::skewY": {
        "args": [
            {
                "name": "$ddegrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFDisplayItem::skewYTo": {
        "args": [
            {
                "name": "$degrees",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFill::moveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFill::rotateTo": {
        "args": [
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFill::scaleTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFill::skewXTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFill::skewYTo": {
        "args": [
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFont::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SWFFont::getAscent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFFont::getDescent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFFont::getLeading": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFFont::getShape": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SWFFont::getUTF8Width": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SWFFont::getWidth": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SWFFontChar::addChars": {
        "args": [
            {
                "name": "$char",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFFontChar::addUTF8Chars": {
        "args": [
            {
                "name": "$char",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFGradient::addEntry": {
        "args": [
            {
                "name": "$ratio",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 255,
                "name": "$alpha",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFGradient::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFMorph::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFMorph::getShape1": {
        "args": [],
        "returnTypes": [
            "SWFShape"
        ]
    },
    "SWFMorph::getShape2": {
        "args": [],
        "returnTypes": [
            "SWFShape"
        ]
    },
    "SWFMovie::add": {
        "args": [
            {
                "name": "$instance",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SWFMovie::__construct": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFMovie::labelFrame": {
        "args": [
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::nextFrame": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::output": {
        "args": [
            {
                "name": "$compression",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SWFMovie::remove": {
        "args": [
            {
                "name": "$instance",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::save": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$compression",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SWFMovie::setbackground": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::setDimension": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::setFrames": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::setRate": {
        "args": [
            {
                "name": "$rate",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFMovie::streamMP3": {
        "args": [
            {
                "name": "$mp3file",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$skip",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFPrebuiltClip::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SWFShape::addFill": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 255,
                "name": "$alpha",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SWFFill"
        ]
    },
    "SWFShape::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFShape::drawArc": {
        "args": [
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$startAngle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$endAngle",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::drawCircle": {
        "args": [
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::drawCubic": {
        "args": [
            {
                "name": "$bx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$by",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFShape::drawCubicTo": {
        "args": [
            {
                "name": "$bx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$by",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$cx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$cy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFShape::drawCurve": {
        "args": [
            {
                "name": "$controldx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$controldy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$anchordx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$anchordy",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$targetdx",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$targetdy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFShape::drawCurveTo": {
        "args": [
            {
                "name": "$controlx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$controly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$anchorx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$anchory",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$targetx",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$targety",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFShape::drawGlyph": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "SWFFont"
            },
            {
                "name": "$character",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::drawLine": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::drawLineTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::movePen": {
        "args": [
            {
                "name": "$dx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$dy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::movePenTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::setLeftFill": {
        "args": [
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "SWFGradient"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::setLine": {
        "args": [
            {
                "name": "$shape",
                "optionalDepth": 0,
                "type": "SWFShape"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFShape::setRightFill": {
        "args": [
            {
                "name": "$fill",
                "optionalDepth": 0,
                "type": "SWFGradient"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFSound::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SWFSprite::add": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFSprite::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFSprite::labelFrame": {
        "args": [
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFSprite::nextFrame": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SWFSprite::remove": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFSprite::setFrames": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::addString": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::addUTF8String": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SWFText::getAscent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFText::getDescent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFText::getLeading": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SWFText::getUTF8Width": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SWFText::getWidth": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SWFText::moveTo": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::setColor": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 255,
                "name": "$a",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::setFont": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "SWFFont"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::setHeight": {
        "args": [
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFText::setSpacing": {
        "args": [
            {
                "name": "$spacing",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::addChars": {
        "args": [
            {
                "name": "$chars",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::addString": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::align": {
        "args": [
            {
                "name": "$alignement",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::__construct": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SWFTextField::setBounds": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setColor": {
        "args": [
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 255,
                "name": "$a",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setFont": {
        "args": [
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "SWFFont"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setHeight": {
        "args": [
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setIndentation": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setLeftMargin": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setLineSpacing": {
        "args": [
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setMargins": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setPadding": {
        "args": [
            {
                "name": "$padding",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFTextField::setRightMargin": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SWFVideoStream::__construct": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SWFVideoStream::getNumFrames": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SWFVideoStream::setDimension": {
        "args": [
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "PDF_activate_item": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_launchlink": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_locallink": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$lowerleftx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lowerlefty",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$upperrightx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$upperrighty",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_nameddest": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_note": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$icon",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_pdflink": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bottom_left_x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bottom_left_y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$up_right_x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$up_right_y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_table_cell": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_add_textflow": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$textflow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_add_thumbnail": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_add_weblink": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$lowerleftx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lowerlefty",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$upperrightx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$upperrighty",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_arc": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_arcn": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_attach_file": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$description",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$author",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mimetype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$icon",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_document": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_begin_font": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$e",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$f",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_glyph": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$glyphname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$wx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_item": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tag",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_begin_layer": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_page_ext": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_page": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_begin_pattern": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xstep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ystep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$painttype",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_begin_template_ext": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_begin_template": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_circle": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$r",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_clip": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_close_image": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_close_pdi_page": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_close_pdi": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_close": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_closepath_fill_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_closepath_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_closepath": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_concat": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$e",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$f",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_continue_text": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_create_3dview": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_create_action": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_create_annotation": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_create_bookmark": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_create_field": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_create_fieldgroup": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_create_gstate": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_create_pvf": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_create_textflow": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_curveto": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_define_layer": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_delete_pvf": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_delete_table": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_delete_textflow": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$textflow",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_delete": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_encoding_set_char": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$slot",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$glyphname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uv",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_document": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_font": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_glyph": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_item": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_layer": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_page_ext": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_page": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_pattern": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_end_template": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_endpath": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_fill_imageblock": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blockname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_fill_pdfblock": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blockname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_fill_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_fill_textblock": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$blockname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_fill": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_findfont": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fontname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$embed",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_fit_image": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_fit_pdi_page": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_fit_table": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_fit_textflow": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$textflow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_fit_textline": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_get_apiname": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_get_buffer": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_get_errmsg": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_get_errnum": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_get_majorversion": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_get_minorversion": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_get_parameter": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$modifier",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_get_pdi_parameter": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$reserved",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_get_pdi_value": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$reserved",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_get_value": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$modifier",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_info_font": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$keyword",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_info_matchbox": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$boxname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$keyword",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_info_table": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$table",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$keyword",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_info_textflow": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$textflow",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$keyword",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_info_textline": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keyword",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_initgraphics": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_lineto": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_load_3ddata": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_load_font": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fontname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_load_iccprofile": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$profilename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_load_image": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$imagetype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_makespotcolor": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$spotname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_moveto": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_new": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "PDF_open_ccitt": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$BitReverse",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$k",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$Blackls1",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_file": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_open_image_file": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$imagetype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$stringparam",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$intparam",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_image": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$imagetype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$components",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bpc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_memory_image": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_pdi_document": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_pdi_page": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pagenumber",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_open_pdi": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_pcos_get_number": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_pcos_get_stream": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_pcos_get_string": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_place_image": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$image",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_place_pdi_page": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_process_pdi": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_rect": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_restore": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_resume_page": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_rotate": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$phi",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_save": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_scale": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sy",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_border_color": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_border_dash": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$black",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$white",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_border_style": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_gstate": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$gstate",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_info": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_layer_dependency": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_parameter": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_text_pos": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_set_value": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setcolor": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fstype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$c1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c4",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setdash": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$w",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setdashpattern": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setflat": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$flatness",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setfont": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fontsize",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setgray_fill": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setgray_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setgray": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$g",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setlinecap": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$linecap",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setlinejoin": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setlinewidth": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setmatrix": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$a",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$b",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$d",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$e",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$f",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setmiterlimit": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$miter",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setrgbcolor_fill": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setrgbcolor_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_setrgbcolor": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_shading_pattern": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$shading",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_shading": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$shtype",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c4",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_shfill": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$shading",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_show_boxed": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$feature",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "PDF_show_xy": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_show": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_skew": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_stringwidth": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$font",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fontsize",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "PDF_stroke": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_suspend_page": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_translate": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ty",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "PDF_utf16_to_utf8": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$utf16string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_utf32_to_utf16": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$utf32string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ordering",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "PDF_utf8_to_utf16": {
        "args": [
            {
                "name": "$pdfdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$utf8string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ordering",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "wkhtmltox\\PDF\\Converter::add": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "wkhtmltox\\PDF\\Object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "wkhtmltox\\PDF\\Converter::convert": {
        "args": [],
        "returnTypes": [
            "?string"
        ]
    },
    "wkhtmltox\\PDF\\Converter::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "wkhtmltox\\Image\\Converter::convert": {
        "args": [],
        "returnTypes": [
            "?string"
        ]
    },
    "wkhtmltox\\Image\\Converter::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ps_add_bookmark": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$parent",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$open",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_add_launchlink": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_add_locallink": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_add_note": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$icon",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_add_pdflink": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_add_weblink": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$llx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$lly",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$urx",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ury",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_arc": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_arcn": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$alpha",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$beta",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_begin_page": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_begin_pattern": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$xstep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ystep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$painttype",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ps_begin_template": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ps_circle": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_clip": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_close_image": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$imageid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "ps_close": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_closepath_stroke": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_closepath": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_continue_text": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_curveto": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y3",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_delete": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_end_page": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_end_pattern": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_end_template": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_fill_stroke": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_fill": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_findfont": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fontname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$embed",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_get_buffer": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ps_get_parameter": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$modifier",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ps_get_value": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$modifier",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "ps_hyphenate": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ps_include_file": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_lineto": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_makespotcolor": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$reserved",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_moveto": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_new": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ps_open_file": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_open_image_file": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$stringparam",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$intparam",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_open_image": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lenght",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$components",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bpc",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_open_memory_image": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$gd",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_place_image": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$imageid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$scale",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_rect": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_restore": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_rotate": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rot",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_save": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_scale": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_border_color": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$red",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$green",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$blue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_border_dash": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$black",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$white",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_border_style": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_info": {
        "args": [
            {
                "name": "$p",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_parameter": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_text_pos": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_set_value": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setcolor": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$colorspace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$c1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c4",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setdash": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$on",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$off",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setflat": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setfont": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fontid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setgray": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$gray",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setlinecap": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setlinejoin": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setlinewidth": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setmiterlimit": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setoverprintmode": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_setpolydash": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$arr",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_shading_pattern": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$shadingid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ps_shading": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y0",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$x1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c1",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c2",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c3",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$c4",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$optlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ps_shfill": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$shadingid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_show_boxed": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$bottom",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$hmode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$feature",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ps_show_xy2": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$xcoor",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$ycoor",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_show_xy": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_show2": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_show": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_string_geometry": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$fontid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 0,
                "name": "$size",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ps_stringwidth": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$fontid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 0,
                "name": "$size",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "ps_stroke": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_symbol_name": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ord",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$fontid",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ps_symbol_width": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ord",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$fontid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 0,
                "name": "$size",
                "optionalDepth": 2,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "ps_symbol": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ord",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ps_translate": {
        "args": [
            {
                "name": "$psdoc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$x",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$y",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rpm_close": {
        "args": [
            {
                "name": "$rpmr",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rpm_get_tag": {
        "args": [
            {
                "name": "$rpmr",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tagnum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "rpm_is_valid": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rpm_open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "rpm_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::addSheet": {
        "args": [
            {
                "name": "$sheetName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::autoFilter": {
        "args": [
            {
                "name": "$scope",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::constMemory": {
        "args": [
            {
                "name": "$fileName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sheetName",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::__construct": {
        "args": [
            {
                "name": "$config",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Vtiful\\Kernel\\Excel::data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Vtiful\\Kernel\\Excel::fileName": {
        "args": [
            {
                "name": "$fileName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sheetName",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::getHandle": {
        "args": [],
        "returnTypes": []
    },
    "Vtiful\\Kernel\\Excel::header": {
        "args": [
            {
                "name": "$headerData",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Vtiful\\Kernel\\Excel::insertFormula": {
        "args": [
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$formula",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Vtiful\\Kernel\\Excel::insertImage": {
        "args": [
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$localImagePath",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Vtiful\\Kernel\\Excel::insertText": {
        "args": [
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Vtiful\\Kernel\\Excel::mergeCells": {
        "args": [
            {
                "name": "$scope",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::output": {
        "args": [],
        "returnTypes": []
    },
    "Vtiful\\Kernel\\Excel::setColumn": {
        "args": [
            {
                "name": "$range",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Excel::setRow": {
        "args": [
            {
                "name": "$range",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$height",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$format",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Vtiful\\Kernel\\Format::align": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "Vtiful\\Kernel\\Format::bold": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "Vtiful\\Kernel\\Format::italic": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "Vtiful\\Kernel\\Format::underline": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_busy": {
        "args": [
            {
                "name": "$delay",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_cancel": {
        "args": [
            {
                "name": "$req",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_chmod": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_chown": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$gid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 4,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_close": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_custom": {
        "args": [
            {
                "name": "$execute",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_dup2": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$fd2",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_event_loop": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "eio_fallocate": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_fchmod": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_fchown": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$gid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 4,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_fdatasync": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_fstat": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_fstatvfs": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_fsync": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_ftruncate": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 4,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_futime": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$atime",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$mtime",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_get_event_stream": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "eio_get_last_error": {
        "args": [
            {
                "name": "$req",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "eio_grp_add": {
        "args": [
            {
                "name": "$grp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$req",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_grp_cancel": {
        "args": [
            {
                "name": "$grp",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_grp_limit": {
        "args": [
            {
                "name": "$grp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_grp": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_init": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "eio_link": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_lstat": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_mkdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_mknod": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$dev",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_nop": {
        "args": [
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_npending": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "eio_nready": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "eio_nreqs": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "eio_nthreads": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "eio_open": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_poll": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "eio_read": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_readahead": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_readdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_readlink": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_realpath": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_rename": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_rmdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_seek": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_sendfile": {
        "args": [
            {
                "name": "$out_fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$in_fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_set_max_idle": {
        "args": [
            {
                "name": "$nthreads",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_set_max_parallel": {
        "args": [
            {
                "name": "$nthreads",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_set_max_poll_reqs": {
        "args": [
            {
                "name": "$nreqs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_set_max_poll_time": {
        "args": [
            {
                "name": "$nseconds",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_set_min_parallel": {
        "args": [
            {
                "name": "$nthreads",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "eio_stat": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_statvfs": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "eio_symlink": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$new_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_sync_file_range": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nbytes",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_sync": {
        "args": [
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_syncfs": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_truncate": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 4,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_unlink": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_utime": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$atime",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$mtime",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$pri",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "eio_write": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$pri",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callback",
                "optionalDepth": 4,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 5,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "Ev::backend": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ev::depth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ev::embeddableBackends": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::feedSignal": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::feedSignalEvent": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::iteration": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ev::now": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Ev::nowUpdate": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::recommendedBackends": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::resume": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::run": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::sleep": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::stop": {
        "args": [
            {
                "name": "$how",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::supportedBackends": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::suspend": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ev::time": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "Ev::verify": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvCheck::__construct": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "callable"
        ]
    },
    "EvCheck::createStopped": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "EvChild::__construct": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$trace",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EvChild::createStopped": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$trace",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "EvChild::set": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$trace",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvEmbed::__construct": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "EvEmbed::createStopped": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvEmbed::set": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvEmbed::sweep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvFork::__construct": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "callable"
        ]
    },
    "EvFork::createStopped": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "EvIdle::__construct": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "callable"
        ]
    },
    "EvIdle::createStopped": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "EvIo::__construct": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "EvIo::createStopped": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvIo"
        ]
    },
    "EvIo::set": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::backend": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EvLoop::check": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "EvCheck"
        ]
    },
    "EvLoop::child": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$trace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "EvChild"
        ]
    },
    "EvLoop::__construct": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "defaultValue": 0,
                "name": "$io_interval",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$timeout_interval",
                "optionalDepth": 4,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EvLoop::defaultLoop": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "defaultValue": 0,
                "name": "$io_interval",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "defaultValue": 0,
                "name": "$timeout_interval",
                "optionalDepth": 4,
                "type": "float"
            }
        ],
        "returnTypes": [
            "EvLoop"
        ]
    },
    "EvLoop::embed": {
        "args": [
            {
                "name": "$other",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "EvEmbed"
        ]
    },
    "EvLoop::fork": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvFork"
        ]
    },
    "EvLoop::idle": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvIdle"
        ]
    },
    "EvLoop::invokePending": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::io": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvIo"
        ]
    },
    "EvLoop::loopFork": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::now": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "EvLoop::nowUpdate": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::periodic": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvPeriodic"
        ]
    },
    "EvLoop::prepare": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvPrepare"
        ]
    },
    "EvLoop::resume": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::run": {
        "args": [
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::signal": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvSignal"
        ]
    },
    "EvLoop::stat": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvStat"
        ]
    },
    "EvLoop::stop": {
        "args": [
            {
                "name": "$how",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::suspend": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvLoop::timer": {
        "args": [
            {
                "name": "$after",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$repeat",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvTimer"
        ]
    },
    "EvLoop::verify": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvPeriodic::again": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvPeriodic::at": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "EvPeriodic::__construct": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$reschedule_cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "EvPeriodic::createStopped": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$reschedule_cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvPeriodic"
        ]
    },
    "EvPeriodic::set": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvPrepare::__construct": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$priority",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EvPrepare::createStopped": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvPrepare"
        ]
    },
    "EvSignal::__construct": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EvSignal::createStopped": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvSignal"
        ]
    },
    "EvSignal::set": {
        "args": [
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvStat::attr": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "EvStat::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EvStat::createStopped": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvStat::prev": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvStat::set": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$interval",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvStat::stat": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EvTimer::again": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvTimer::__construct": {
        "args": [
            {
                "name": "$after",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$repeat",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "EvTimer::createStopped": {
        "args": [
            {
                "name": "$after",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$repeat",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$priority",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EvTimer"
        ]
    },
    "EvTimer::set": {
        "args": [
            {
                "name": "$after",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$repeat",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvWatcher::clear": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EvWatcher::__construct": {
        "args": [],
        "returnTypes": []
    },
    "EvWatcher::feed": {
        "args": [
            {
                "name": "$revents",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvWatcher::getLoop": {
        "args": [],
        "returnTypes": [
            "EvLoop"
        ]
    },
    "EvWatcher::invoke": {
        "args": [
            {
                "name": "$revents",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvWatcher::keepalive": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EvWatcher::setCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EvWatcher::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EvWatcher::stop": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "expect_expectl": {
        "args": [
            {
                "name": "$expect",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cases",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$match",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "expect_popen": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "event_add": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_base_free": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_base_loop": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "event_base_loopbreak": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_base_loopexit": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_base_new": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "event_base_priority_init": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$npriorities",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_base_reinit": {
        "args": [
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_base_set": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_base_set": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$event_base",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_disable": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_enable": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_fd_set": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_buffer_free": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_buffer_new": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$readcb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$writecb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$errorcb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "event_buffer_priority_set": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_read": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data_size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "event_buffer_set_callback": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$readcb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$writecb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$errorcb",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_buffer_timeout_set": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$read_timeout",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$write_timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_buffer_watermark_set": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$lowmark",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$highmark",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_buffer_write": {
        "args": [
            {
                "name": "$bevent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$data_size",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_del": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_free": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "event_new": {
        "args": [],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "event_priority_set": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_set": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "event_timer_set": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pcntl_alarm": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_async_signals": {
        "args": [
            {
                "defaultValue": null,
                "name": "$on",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pcntl_exec": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$envs",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "pcntl_fork": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_get_last_error": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_getpriority": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$process_identifier",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "pcntl_setpriority": {
        "args": [
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$process_identifier",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pcntl_signal_dispatch": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pcntl_signal_get_handler": {
        "args": [
            {
                "name": "$signo",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "pcntl_signal": {
        "args": [
            {
                "name": "$signo",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable|int"
            },
            {
                "defaultValue": true,
                "name": "$restart_syscalls",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pcntl_sigprocmask": {
        "args": [
            {
                "name": "$how",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$oldset",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pcntl_sigtimedwait": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$siginfo",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$seconds",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$nanoseconds",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_sigwaitinfo": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$siginfo",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_strerror": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "pcntl_wait": {
        "args": [
            {
                "name": "&$status",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$rusage",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_waitpid": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$status",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$rusage",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_wexitstatus": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_wifexited": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pcntl_wifsignaled": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pcntl_wifstopped": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pcntl_wstopsig": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pcntl_wtermsig": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "posix_access": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_ctermid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "posix_get_last_error": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getcwd": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "posix_getegid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_geteuid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getgid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getgrgid": {
        "args": [
            {
                "name": "$gid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "posix_getgrnam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "posix_getgroups": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "posix_getlogin": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "posix_getpgid": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getpgrp": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getpid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getppid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getpwnam": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "posix_getpwuid": {
        "args": [
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "posix_getrlimit": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "posix_getsid": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "posix_getuid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_initgroups": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$base_group_id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_isatty": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "posix_kill": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sig",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_mkfifo": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_mknod": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$major",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$minor",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_setegid": {
        "args": [
            {
                "name": "$gid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_seteuid": {
        "args": [
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_setgid": {
        "args": [
            {
                "name": "$gid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_setpgid": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$pgid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_setrlimit": {
        "args": [
            {
                "name": "$resource",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$softlimit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$hardlimit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_setsid": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "posix_setuid": {
        "args": [
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "posix_strerror": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "posix_times": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "posix_ttyname": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "posix_uname": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "escapeshellarg": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "escapeshellcmd": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "exec": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$output",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "&$return_var",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "passthru": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$return_var",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "proc_close": {
        "args": [
            {
                "name": "$process",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "proc_get_status": {
        "args": [
            {
                "name": "$process",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "proc_nice": {
        "args": [
            {
                "name": "$increment",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "proc_open": {
        "args": [
            {
                "name": "$cmd",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$descriptorspec",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$pipes",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$cwd",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$env",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$other_options",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "proc_terminate": {
        "args": [
            {
                "name": "$process",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 15,
                "name": "$signal",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "shell_exec": {
        "args": [
            {
                "name": "$cmd",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "system": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$return_var",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Threaded::chunk": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$preserve",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Threaded::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Threaded::extend": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::from": {
        "args": [
            {
                "name": "$run",
                "optionalDepth": 0,
                "type": "Closure"
            },
            {
                "name": "$construct",
                "optionalDepth": 1,
                "type": "Closure"
            },
            {
                "name": "$args",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "Threaded"
        ]
    },
    "Threaded::getTerminationInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Threaded::isRunning": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::isTerminated": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::isWaiting": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::lock": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::merge": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::notify": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::notifyOne": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::pop": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::run": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Threaded::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Threaded::synchronized": {
        "args": [
            {
                "name": "$block",
                "optionalDepth": 0,
                "type": "Closure"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Threaded::unlock": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Threaded::wait": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Thread::detach": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Thread::getCreatorId": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Thread::getCurrentThread": {
        "args": [],
        "returnTypes": [
            "Thread"
        ]
    },
    "Thread::getCurrentThreadId": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Thread::getThreadId": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Thread::globally": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Thread::isJoined": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Thread::isStarted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Thread::join": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Thread::kill": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Thread::start": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Worker::collect": {
        "args": [
            {
                "name": "$collector",
                "optionalDepth": 1,
                "type": "Callable"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Worker::getStacked": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Worker::isShutdown": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Worker::isWorking": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Worker::shutdown": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Worker::stack": {
        "args": [
            {
                "name": "&$work",
                "optionalDepth": 0,
                "type": "Threaded"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Worker::unstack": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Collectable::isGarbage": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Collectable::setGarbage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Pool::collect": {
        "args": [
            {
                "name": "$collector",
                "optionalDepth": 1,
                "type": "Callable"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Pool::__construct": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$class",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ctor",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "Pool"
        ]
    },
    "Pool::resize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Pool::shutdown": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Pool::submit": {
        "args": [
            {
                "name": "$task",
                "optionalDepth": 0,
                "type": "Threaded"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Pool::submitTo": {
        "args": [
            {
                "name": "$worker",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$task",
                "optionalDepth": 0,
                "type": "Threaded"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Mutex::create": {
        "args": [
            {
                "name": "$lock",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Mutex::destroy": {
        "args": [
            {
                "name": "$mutex",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mutex::lock": {
        "args": [
            {
                "name": "$mutex",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mutex::trylock": {
        "args": [
            {
                "name": "$mutex",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Mutex::unlock": {
        "args": [
            {
                "name": "$mutex",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$destroy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Cond::broadcast": {
        "args": [
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Cond::create": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Cond::destroy": {
        "args": [
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Cond::signal": {
        "args": [
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Cond::wait": {
        "args": [
            {
                "name": "$condition",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mutex",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "pht\\Thread::addClassTask": {
        "args": [
            {
                "name": "$className",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...ctorArgs",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Thread::addFileTask": {
        "args": [
            {
                "name": "$fileName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...globals",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Thread::addFunctionTask": {
        "args": [
            {
                "name": "$func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...funcArgs",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Thread::join": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Thread::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Thread::taskCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pht\\Runnable::run": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\HashTable::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\HashTable::size": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pht\\HashTable::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$value",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Vector"
        ]
    },
    "pht\\Vector::deleteAt": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::insertAt": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "pht\\Vector::push": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::resize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$value",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "pht\\Vector::size": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pht\\Vector::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::unshift": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Vector::updateAt": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Queue::front": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "pht\\Queue::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Queue::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "pht\\Queue::push": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Queue::size": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pht\\Queue::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\AtomicInteger::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$value",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "AtomicInteger"
        ]
    },
    "pht\\AtomicInteger::dec": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\AtomicInteger::get": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "pht\\AtomicInteger::inc": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\AtomicInteger::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\AtomicInteger::set": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\AtomicInteger::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Threaded::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "pht\\Threaded::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ftok": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$proj",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "msg_get_queue": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 438,
                "name": "$perms",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "msg_queue_exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msg_receive": {
        "args": [
            {
                "name": "$queue",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$desiredmsgtype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$msgtype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$maxsize",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$message",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$unserialize",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$errorcode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msg_remove_queue": {
        "args": [
            {
                "name": "$queue",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msg_send": {
        "args": [
            {
                "name": "$queue",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$msgtype",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$serialize",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": true,
                "name": "$blocking",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "&$errorcode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msg_set_queue": {
        "args": [
            {
                "name": "$queue",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msg_stat_queue": {
        "args": [
            {
                "name": "$queue",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sem_acquire": {
        "args": [
            {
                "name": "$sem_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": false,
                "name": "$nowait",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sem_get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 1,
                "name": "$max_acquire",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 438,
                "name": "$perm",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 1,
                "name": "$auto_release",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "sem_release": {
        "args": [
            {
                "name": "$sem_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sem_remove": {
        "args": [
            {
                "name": "$sem_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shm_attach": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$memsize",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 438,
                "name": "$perm",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "shm_detach": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "shm_get_var": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$variable_key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "shm_has_var": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$variable_key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "shm_put_var": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$variable_key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$variable",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shm_remove_var": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$variable_key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shm_remove": {
        "args": [
            {
                "name": "$shm_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shmop_close": {
        "args": [
            {
                "name": "$shmid",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "shmop_delete": {
        "args": [
            {
                "name": "$shmid",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shmop_open": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "shmop_read": {
        "args": [
            {
                "name": "$shmid",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "shmop_size": {
        "args": [
            {
                "name": "$shmid",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "shmop_write": {
        "args": [
            {
                "name": "$shmid",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SyncMutex::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SyncMutex::lock": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncMutex::unlock": {
        "args": [
            {
                "defaultValue": false,
                "name": "$all",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncSemaphore::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$initialval",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$autounlock",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SyncSemaphore::lock": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncSemaphore::unlock": {
        "args": [
            {
                "name": "&$prevcount",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncEvent::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$manual",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$prefire",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SyncEvent::fire": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncEvent::reset": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncEvent::wait": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncReaderWriter::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$autounlock",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SyncReaderWriter::readlock": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncReaderWriter::readunlock": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncReaderWriter::writelock": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$wait",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncReaderWriter::writeunlock": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncSharedMemory::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SyncSharedMemory::first": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncSharedMemory::read": {
        "args": [
            {
                "defaultValue": null,
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SyncSharedMemory::size": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SyncSharedMemory::write": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$start",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "geoip_asnum_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_continent_code_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_country_code_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_country_code3_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_country_name_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_database_info": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "geoip_db_avail": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "null"
        ]
    },
    "geoip_db_filename": {
        "args": [
            {
                "name": "$database",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "geoip_db_get_all_info": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "geoip_domain_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_id_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "geoip_isp_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_netspeedcell_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_org_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_record_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "geoip_region_by_name": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "geoip_region_name_by_code": {
        "args": [
            {
                "name": "$country_code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$region_code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "geoip_setup_custom_directory": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "geoip_time_zone_by_country_and_region": {
        "args": [
            {
                "name": "$country_code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$region_code",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "fann_cascadetrain_on_data": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$max_neurons",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neurons_between_reports",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$desired_error",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_cascadetrain_on_file": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$max_neurons",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neurons_between_reports",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$desired_error",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_clear_scaling_params": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_copy": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_from_file": {
        "args": [
            {
                "name": "$configuration_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_shortcut_array": {
        "args": [
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$layers",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_shortcut": {
        "args": [
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_sparse_array": {
        "args": [
            {
                "name": "$connection_rate",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$layers",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_sparse": {
        "args": [
            {
                "name": "$connection_rate",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_standard_array": {
        "args": [
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$layers",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_standard": {
        "args": [
            {
                "name": "$num_layers",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_neurons2",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_train_from_callback": {
        "args": [
            {
                "name": "$num_data",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_input",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_output",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$user_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_create_train": {
        "args": [
            {
                "name": "$num_data",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_input",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num_output",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_descale_input": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$input_vector",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_descale_output": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$output_vector",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_descale_train": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_destroy_train": {
        "args": [
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_destroy": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_duplicate_train_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_get_activation_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neuron",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_activation_steepness": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neuron",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_bias_array": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fann_get_bit_fail_limit": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_bit_fail": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_activation_functions_count": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_activation_functions": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fann_get_cascade_activation_steepnesses_count": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_activation_steepnesses": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fann_get_cascade_candidate_change_fraction": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_cascade_candidate_limit": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_cascade_candidate_stagnation_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_max_cand_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_max_out_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_min_cand_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_min_out_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_num_candidate_groups": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_num_candidates": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_output_change_fraction": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_cascade_output_stagnation_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_cascade_weight_multiplier": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_connection_array": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fann_get_connection_rate": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_errno": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_errstr": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "fann_get_layer_array": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fann_get_learning_momentum": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_learning_rate": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_MSE": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_network_type": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_num_input": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_num_layers": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_num_output": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_quickprop_decay": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_quickprop_mu": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_rprop_decrease_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_rprop_delta_max": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_rprop_delta_min": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_rprop_delta_zero": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_rprop_increase_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_sarprop_step_error_shift": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_sarprop_step_error_threshold_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_sarprop_temperature": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_sarprop_weight_decay_shift": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_get_total_connections": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_total_neurons": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_train_error_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_train_stop_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_get_training_algorithm": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_init_weights": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_length_train_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_merge_train_data": {
        "args": [
            {
                "name": "$data1",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data2",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_num_input_train_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_num_output_train_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "fann_print_error": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fann_randomize_weights": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$min_weight",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$max_weight",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_read_train_from_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_reset_errno": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fann_reset_errstr": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fann_reset_MSE": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_run": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fann_save_train": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_save": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$configuration_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_input_train_data": {
        "args": [
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_input": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$input_vector",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_output_train_data": {
        "args": [
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_output": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$output_vector",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_train_data": {
        "args": [
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_scale_train": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_function_hidden": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_function",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_function_layer": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_function",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_function_output": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_function",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_function",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neuron",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_steepness_hidden": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_steepness",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_steepness_layer": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_steepness",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_steepness_output": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_steepness",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_activation_steepness": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$activation_steepness",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$layer",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$neuron",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_bit_fail_limit": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bit_fail_limit",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_callback": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "collable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_activation_functions": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_activation_functions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_activation_steepnesses": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_activation_steepnesses_count",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_candidate_change_fraction": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_candidate_change_fraction",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_candidate_limit": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_candidate_limit",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_candidate_stagnation_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_candidate_stagnation_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_max_cand_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_max_cand_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_max_out_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_max_out_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_min_cand_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_min_cand_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_min_out_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_min_out_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_num_candidate_groups": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_num_candidate_groups",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_output_change_fraction": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_output_change_fraction",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_output_stagnation_epochs": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_output_stagnation_epochs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_cascade_weight_multiplier": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$cascade_weight_multiplier",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_error_log": {
        "args": [
            {
                "name": "$errdat",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$log_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fann_set_input_scaling_params": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_input_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_input_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_learning_momentum": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$learning_momentum",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_learning_rate": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$learning_rate",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_output_scaling_params": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_output_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_output_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_quickprop_decay": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$quickprop_decay",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_quickprop_mu": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$quickprop_mu",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_rprop_decrease_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rprop_decrease_factor",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_rprop_delta_max": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rprop_delta_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_rprop_delta_min": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rprop_delta_min",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_rprop_delta_zero": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rprop_delta_zero",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_rprop_increase_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rprop_increase_factor",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_sarprop_step_error_shift": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sarprop_step_error_shift",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_sarprop_step_error_threshold_factor": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sarprop_step_error_threshold_factor",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_sarprop_temperature": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sarprop_temperature",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_sarprop_weight_decay_shift": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sarprop_weight_decay_shift",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_scaling_params": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$new_input_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_input_max",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_output_min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$new_output_max",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_train_error_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$error_function",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_train_stop_function": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$stop_function",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_training_algorithm": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$training_algorithm",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_weight_array": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$connections",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_set_weight": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$from_neuron",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$to_neuron",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$weight",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_shuffle_train_data": {
        "args": [
            {
                "name": "$train_data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_subset_train_data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pos",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fann_test_data": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_test": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$desired_output",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fann_train_epoch": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "fann_train_on_data": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$max_epochs",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$epochs_between_reports",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$desired_error",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_train_on_file": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$max_epochs",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$epochs_between_reports",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$desired_error",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fann_train": {
        "args": [
            {
                "name": "$ann",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$desired_output",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "FANNConnection::__construct": {
        "args": [
            {
                "name": "$from_neuron",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$to_neuron",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$weight",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "FANNConnection::getFromNeuron": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "FANNConnection::getToNeuron": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "FANNConnection::getWeight": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "FANNConnection::setWeight": {
        "args": [
            {
                "name": "$weight",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "JsonSerializable::jsonSerialize": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "json_decode": {
        "args": [
            {
                "name": "$json",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$assoc",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": 512,
                "name": "$depth",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "json_encode": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 512,
                "name": "$depth",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "json_last_error_msg": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "json_last_error": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::byCount": {
        "args": [
            {
                "name": "$nth_index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::__construct": {
        "args": [
            {
                "name": "$judy_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::count": {
        "args": [
            {
                "defaultValue": null,
                "name": "$index_start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$index_end",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Judy::first": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Judy::firstEmpty": {
        "args": [
            {
                "defaultValue": null,
                "name": "$index",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::free": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::getType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::last": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Judy::lastEmpty": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$index",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::memoryUsage": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::next": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Judy::nextEmpty": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::offsetExists": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Judy::offsetGet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Judy::offsetSet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Judy::offsetUnset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Judy::prev": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Judy::prevEmpty": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Judy::size": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "judy_type": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "Judy"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "judy_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Lua::assign": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "Lua::call": {
        "args": [
            {
                "name": "$lua_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$use_self",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Lua::__construct": {
        "args": [
            {
                "defaultValue": null,
                "name": "$lua_script_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Lua::eval": {
        "args": [
            {
                "name": "$statements",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Lua::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Lua::include": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Lua::registerCallback": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "LuaClosure::__invoke": {
        "args": [
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "connection_aborted": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "connection_status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "constant": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "define": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$case_insensitive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "defined": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "eval": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "exit": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "get_browser": {
        "args": [
            {
                "name": "$user_agent",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$return_array",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "__halt_compiler": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "highlight_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "highlight_string": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "hrtime": {
        "args": [
            {
                "defaultValue": false,
                "name": "$get_as_number",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ignore_user_abort": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "pack": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "php_check_syntax": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$error_message",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "php_strip_whitespace": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sapi_windows_cp_conv": {
        "args": [
            {
                "name": "$in_codepage",
                "optionalDepth": 0,
                "type": "int|string"
            },
            {
                "name": "$out_codepage",
                "optionalDepth": 0,
                "type": "int|string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "sapi_windows_cp_get": {
        "args": [
            {
                "name": "$kind",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "sapi_windows_cp_is_utf8": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "sapi_windows_cp_set": {
        "args": [
            {
                "name": "$cp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sapi_windows_vt100_support": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$enable",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "sleep": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "sys_getloadavg": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "time_nanosleep": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$nanoseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "time_sleep_until": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uniqid": {
        "args": [
            {
                "defaultValue": "",
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$more_entropy",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "unpack": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "usleep": {
        "args": [
            {
                "name": "$micro_seconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "parsekit_compile_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$errors",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "parsekit_compile_string": {
        "args": [
            {
                "name": "$phpcode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$errors",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "parsekit_func_arginfo": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "seaslog_get_author": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "seaslog_get_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SeasLog::alert": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::analyzerCount": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$log_path",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$key_word",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SeasLog::analyzerDetail": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$log_path",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$key_word",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$limit",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$order",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SeasLog::closeLoggerStream": {
        "args": [
            {
                "name": "$model",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$logger",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::critical": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::debug": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::__destruct": {
        "args": [],
        "returnTypes": []
    },
    "SeasLog::emergency": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::error": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::flushBuffer": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Seaslog::getBasePath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SeasLog::getBuffer": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SeasLog::getBufferEnabled": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::getDatetimeFormat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SeasLog::getLastLogger": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SeasLog::getRequestID": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SeasLog::getRequestVariable": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::info": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::log": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::notice": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::setBasePath": {
        "args": [
            {
                "name": "$base_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::setDatetimeFormat": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::setLogger": {
        "args": [
            {
                "name": "$logger",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::setRequestID": {
        "args": [
            {
                "name": "$request_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::setRequestVariable": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SeasLog::warning": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$logger",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SplDoublyLinkedList::add": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::bottom": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplDoublyLinkedList::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::getIteratorMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplDoublyLinkedList::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplDoublyLinkedList::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SplDoublyLinkedList::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::offsetSet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::offsetUnset": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::prev": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::push": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplDoublyLinkedList::setIteratorMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::top": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplDoublyLinkedList::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::unshift": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplDoublyLinkedList::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplStack::setIteratorMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplQueue::dequeue": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplQueue::enqueue": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplQueue::setIteratorMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplHeap::compare": {
        "args": [
            {
                "name": "$value1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value2",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplHeap::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplHeap::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplHeap::extract": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplHeap::insert": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplHeap::isCorrupted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplHeap::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplHeap::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplHeap::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplHeap::recoverFromCorruption": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplHeap::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplHeap::top": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplHeap::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplMaxHeap::compare": {
        "args": [
            {
                "name": "$value1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value2",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplMinHeap::compare": {
        "args": [
            {
                "name": "$value1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value2",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplPriorityQueue::compare": {
        "args": [
            {
                "name": "$priority1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$priority2",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplPriorityQueue::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplPriorityQueue::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplPriorityQueue::extract": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplPriorityQueue::getExtractFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplPriorityQueue::insert": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplPriorityQueue::isCorrupted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplPriorityQueue::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplPriorityQueue::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplPriorityQueue::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplPriorityQueue::recoverFromCorruption": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplPriorityQueue::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplPriorityQueue::setExtractFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplPriorityQueue::top": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplPriorityQueue::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFixedArray::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFixedArray::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplFixedArray::fromArray": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$save_indexes",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SplFixedArray"
        ]
    },
    "SplFixedArray::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFixedArray::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFixedArray::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFixedArray::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFixedArray::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplFixedArray::offsetSet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFixedArray::offsetUnset": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFixedArray::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFixedArray::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SplFixedArray::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SplFixedArray::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFixedArray::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::addAll": {
        "args": [
            {
                "name": "$storage",
                "optionalDepth": 0,
                "type": "SplObjectStorage"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::attach": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::contains": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SplObjectStorage::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplObjectStorage::current": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "SplObjectStorage::detach": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::getHash": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SplObjectStorage::getInfo": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplObjectStorage::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplObjectStorage::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::offsetExists": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SplObjectStorage::offsetGet": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplObjectStorage::offsetSet": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::offsetUnset": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::removeAll": {
        "args": [
            {
                "name": "$storage",
                "optionalDepth": 0,
                "type": "SplObjectStorage"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::removeAllExcept": {
        "args": [
            {
                "name": "$storage",
                "optionalDepth": 0,
                "type": "SplObjectStorage"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplObjectStorage::setInfo": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObjectStorage::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "AppendIterator::append": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "AppendIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "AppendIterator::getArrayIterator": {
        "args": [],
        "returnTypes": [
            "ArrayIterator"
        ]
    },
    "AppendIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Iterator",
            "null"
        ]
    },
    "AppendIterator::getIteratorIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "AppendIterator::key": {
        "args": [],
        "returnTypes": [
            "scalar",
            "null"
        ]
    },
    "AppendIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "AppendIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "AppendIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ArrayIterator::append": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::asort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::__construct": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ArrayIterator::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ArrayIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "ArrayIterator::getArrayCopy": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ArrayIterator::getFlags": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "ArrayIterator::ksort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::natcasesort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::natsort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ArrayIterator::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ArrayIterator::offsetSet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::offsetUnset": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::seek": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ArrayIterator::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::uasort": {
        "args": [
            {
                "name": "$cmp_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::uksort": {
        "args": [
            {
                "name": "$cmp_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayIterator::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ArrayIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "CachingIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "CachingIterator::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CachingIterator::current": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::getCache": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "CachingIterator::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "CachingIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Iterator"
        ]
    },
    "CachingIterator::hasNext": {
        "args": [],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "CachingIterator::key": {
        "args": [],
        "returnTypes": [
            "scalar"
        ]
    },
    "CachingIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::offsetSet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::offsetUnset": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::__toString": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CachingIterator::valid": {
        "args": [],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "CallbackFilterIterator::accept": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DirectoryIterator::current": {
        "args": [],
        "returnTypes": [
            "DirectoryIterator"
        ]
    },
    "DirectoryIterator::getATime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getBasename": {
        "args": [
            {
                "name": "$suffix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::getCTime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getExtension": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::getFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::getGroup": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getInode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getMTime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getOwner": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getPath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::getPathname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::getPerms": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DirectoryIterator::getType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::isDir": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isDot": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isExecutable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isFile": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isLink": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isReadable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::isWritable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DirectoryIterator::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "DirectoryIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "DirectoryIterator::seek": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DirectoryIterator::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "DirectoryIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EmptyIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "EmptyIterator::key": {
        "args": [],
        "returnTypes": [
            "scalar"
        ]
    },
    "EmptyIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EmptyIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EmptyIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "FilesystemIterator::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "FilesystemIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "FilesystemIterator::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "FilesystemIterator::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "FilesystemIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "FilesystemIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "FilesystemIterator::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "FilterIterator::accept": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "FilterIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "FilterIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "FilterIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Iterator"
        ]
    },
    "FilterIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "FilterIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "FilterIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "FilterIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "GlobIterator::__construct": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GlobIterator::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "InfiniteIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "InfiniteIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "IteratorIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Traversable"
            }
        ],
        "returnTypes": [
            "Traversable"
        ]
    },
    "IteratorIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "IteratorIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Traversable"
        ]
    },
    "IteratorIterator::key": {
        "args": [],
        "returnTypes": [
            "scalar"
        ]
    },
    "IteratorIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "IteratorIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "IteratorIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "LimitIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$count",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "LimitIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "LimitIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Iterator"
        ]
    },
    "LimitIterator::getPosition": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "LimitIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "LimitIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "LimitIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "LimitIterator::seek": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "LimitIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MultipleIterator::attachIterator": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "name": "$infos",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MultipleIterator::containsIterator": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "MultipleIterator::countIterators": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MultipleIterator::current": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "MultipleIterator::detachIterator": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MultipleIterator::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "MultipleIterator::key": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "MultipleIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MultipleIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "MultipleIterator::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "MultipleIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "NoRewindIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "NoRewindIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "NoRewindIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "iterator"
        ]
    },
    "NoRewindIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "NoRewindIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "NoRewindIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "NoRewindIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ParentIterator::accept": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ParentIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "RecursiveIterator"
            }
        ],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "ParentIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "ParentIterator"
        ]
    },
    "ParentIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ParentIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ParentIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveArrayIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveArrayIterator"
        ]
    },
    "RecursiveArrayIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveCachingIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Iterator"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Iterator"
        ]
    },
    "RecursiveCachingIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveCachingIterator"
        ]
    },
    "RecursiveCachingIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveCallbackFilterIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveCallbackFilterIterator"
        ]
    },
    "RecursiveCallbackFilterIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveDirectoryIterator::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveDirectoryIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "RecursiveDirectoryIterator::getSubPath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveDirectoryIterator::getSubPathname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveDirectoryIterator::hasChildren": {
        "args": [
            {
                "defaultValue": false,
                "name": "$allow_links",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveDirectoryIterator::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveDirectoryIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveDirectoryIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveFilterIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "RecursiveIterator"
            }
        ],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveFilterIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveFilterIterator"
        ]
    },
    "RecursiveFilterIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveIteratorIterator::beginChildren": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::beginIteration": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::callGetChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveIteratorIterator::callHasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveIteratorIterator::__construct": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Traversable"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Traversable"
        ]
    },
    "RecursiveIteratorIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "RecursiveIteratorIterator::endChildren": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::endIteration": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::getDepth": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "RecursiveIteratorIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "iterator"
        ]
    },
    "RecursiveIteratorIterator::getMaxDepth": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "RecursiveIteratorIterator::getSubIterator": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveIteratorIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "RecursiveIteratorIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::nextElement": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::setMaxDepth": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$max_depth",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveIteratorIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveRegexIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveRegexIterator"
        ]
    },
    "RecursiveRegexIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveTreeIterator::beginChildren": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::beginIteration": {
        "args": [],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveTreeIterator::callGetChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveTreeIterator::callHasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RecursiveTreeIterator::__construct": {
        "args": [
            {
                "name": "$it",
                "optionalDepth": 0,
                "type": "RecursiveIterator|IteratorAggregate"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$cit_flags",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "RecursiveIterator|IteratorAggregate"
        ]
    },
    "RecursiveTreeIterator::current": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveTreeIterator::endChildren": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::endIteration": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::getEntry": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveTreeIterator::getPostfix": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveTreeIterator::getPrefix": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveTreeIterator::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RecursiveTreeIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::nextElement": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::setPostfix": {
        "args": [
            {
                "name": "$postfix",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::setPrefixPart": {
        "args": [
            {
                "name": "$part",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RecursiveTreeIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RegexIterator::accept": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "RegexIterator::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "RegexIterator::getMode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "RegexIterator::getPregFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "RegexIterator::getRegex": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "RegexIterator::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RegexIterator::setMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RegexIterator::setPregFlags": {
        "args": [
            {
                "name": "$preg_flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Countable::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "OuterIterator::getInnerIterator": {
        "args": [],
        "returnTypes": [
            "Iterator"
        ]
    },
    "RecursiveIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "RecursiveIterator"
        ]
    },
    "RecursiveIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SeekableIterator::seek": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "class_implements": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "class_parents": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "class_uses": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "iterator_apply": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Traversable"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iterator_count": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Traversable"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iterator_to_array": {
        "args": [
            {
                "name": "$iterator",
                "optionalDepth": 0,
                "type": "Traversable"
            },
            {
                "defaultValue": true,
                "name": "$use_keys",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "spl_autoload_call": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "spl_autoload_extensions": {
        "args": [
            {
                "name": "$file_extensions",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "spl_autoload_functions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "spl_autoload_register": {
        "args": [
            {
                "name": "$autoload_function",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": true,
                "name": "$throw",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$prepend",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "spl_autoload_unregister": {
        "args": [
            {
                "name": "$autoload_function",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "spl_autoload": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$file_extensions",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "spl_classes": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "spl_object_hash": {
        "args": [
            {
                "name": "$obj",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "spl_object_id": {
        "args": [
            {
                "name": "$obj",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getATime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getBasename": {
        "args": [
            {
                "name": "$suffix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getCTime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getExtension": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getFileInfo": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SplFileInfo"
        ]
    },
    "SplFileInfo::getFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getGroup": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getInode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getLinkTarget": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getMTime": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getOwner": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getPath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getPathInfo": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SplFileInfo"
        ]
    },
    "SplFileInfo::getPathname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::getPerms": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getRealPath": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SplFileInfo::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileInfo::getType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SplFileInfo::isDir": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::isExecutable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::isFile": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::isLink": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::isReadable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::isWritable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileInfo::openFile": {
        "args": [
            {
                "defaultValue": "r",
                "name": "$open_mode",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$context",
                "optionalDepth": 3,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "SplFileObject"
        ]
    },
    "SplFileInfo::setFileClass": {
        "args": [
            {
                "defaultValue": "SplFileObject",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileInfo::setInfoClass": {
        "args": [
            {
                "defaultValue": "SplFileInfo",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileInfo::__toString": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::current": {
        "args": [],
        "returnTypes": [
            "string|array"
        ]
    },
    "SplFileObject::eof": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileObject::fflush": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SplFileObject::fgetc": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SplFileObject::fgetcsv": {
        "args": [
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SplFileObject::fgets": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SplFileObject::fgetss": {
        "args": [
            {
                "name": "$allowable_tags",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SplFileObject::flock": {
        "args": [
            {
                "name": "$operation",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$wouldblock",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SplFileObject::fpassthru": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::fputcsv": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SplFileObject::fread": {
        "args": [
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SplFileObject::fscanf": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplFileObject::fseek": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::fstat": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SplFileObject::ftell": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SplFileObject::ftruncate": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SplFileObject::fwrite": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::getChildren": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::getCsvControl": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SplFileObject::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::getMaxLineLen": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SplFileObject::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SplFileObject::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::seek": {
        "args": [
            {
                "name": "$line_pos",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::setCsvControl": {
        "args": [
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::setMaxLineLen": {
        "args": [
            {
                "name": "$max_len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplFileObject::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ArrayObject::append": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::asort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ArrayObject::exchangeArray": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ArrayObject::getArrayCopy": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ArrayObject::getFlags": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ArrayObject::getIterator": {
        "args": [],
        "returnTypes": [
            "ArrayIterator"
        ]
    },
    "ArrayObject::getIteratorClass": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ArrayObject::ksort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::natcasesort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::natsort": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ArrayObject::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "ArrayObject::offsetSet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::offsetUnset": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ArrayObject::setFlags": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::setIteratorClass": {
        "args": [
            {
                "name": "$iterator_class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::uasort": {
        "args": [
            {
                "name": "$cmp_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::uksort": {
        "args": [
            {
                "name": "$cmp_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ArrayObject::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplObserver::update": {
        "args": [
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "SplSubject"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplSubject::attach": {
        "args": [
            {
                "name": "$observer",
                "optionalDepth": 0,
                "type": "SplObserver"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplSubject::detach": {
        "args": [
            {
                "name": "$observer",
                "optionalDepth": 0,
                "type": "SplObserver"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SplSubject::notify": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SplType::__construct": {
        "args": [
            {
                "name": "$initial_value",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$strict",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SplEnum::getConstList": {
        "args": [
            {
                "defaultValue": false,
                "name": "$include_default",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "php_user_filter::filter": {
        "args": [
            {
                "name": "$in",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$out",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$consumed",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$closing",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "php_user_filter::onClose": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "php_user_filter::onCreate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "streamWrapper::__construct": {
        "args": [],
        "returnTypes": []
    },
    "streamWrapper::__destruct": {
        "args": [],
        "returnTypes": []
    },
    "streamWrapper::dir_closedir": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::dir_opendir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::dir_readdir": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "streamWrapper::dir_rewinddir": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::mkdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::rename": {
        "args": [
            {
                "name": "$path_from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$path_to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::rmdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_cast": {
        "args": [
            {
                "name": "$cast_as",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "streamWrapper::stream_close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "streamWrapper::stream_eof": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_flush": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_lock": {
        "args": [
            {
                "name": "$operation",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_metadata": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_open": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$opened_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_read": {
        "args": [
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "streamWrapper::stream_seek": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$whence",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "streamWrapper::stream_set_option": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arg1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$arg2",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_stat": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "streamWrapper::stream_tell": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "streamWrapper::stream_truncate": {
        "args": [
            {
                "name": "$new_size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::stream_write": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "streamWrapper::unlink": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "streamWrapper::url_stat": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stream_bucket_append": {
        "args": [
            {
                "name": "$brigade",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bucket",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "stream_bucket_make_writeable": {
        "args": [
            {
                "name": "$brigade",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "stream_bucket_new": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "stream_bucket_prepend": {
        "args": [
            {
                "name": "$brigade",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bucket",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "stream_context_create": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "stream_context_get_default": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "stream_context_get_options": {
        "args": [
            {
                "name": "$stream_or_context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stream_context_get_params": {
        "args": [
            {
                "name": "$stream_or_context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stream_context_set_default": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "stream_context_set_option": {
        "args": [
            {
                "name": "$stream_or_context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$wrapper",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_context_set_params": {
        "args": [
            {
                "name": "$stream_or_context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_copy_to_stream": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dest",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$maxlength",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "stream_filter_append": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filtername",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$read_write",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "stream_filter_prepend": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filtername",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$read_write",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$params",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "stream_filter_register": {
        "args": [
            {
                "name": "$filtername",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_filter_remove": {
        "args": [
            {
                "name": "$stream_filter",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_get_contents": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": -1,
                "name": "$maxlength",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$offset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "stream_get_filters": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "stream_get_line": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$ending",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stream_get_meta_data": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stream_get_transports": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "stream_get_wrappers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "stream_is_local": {
        "args": [
            {
                "name": "$stream_or_url",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_isatty": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_notification_callback": {
        "args": [
            {
                "name": "$notification_code",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$severity",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$message_code",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bytes_transferred",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$bytes_max",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "stream_resolve_include_path": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "stream_select": {
        "args": [
            {
                "name": "&$read",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$write",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$except",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$tv_sec",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$tv_usec",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stream_set_blocking": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_set_chunk_size": {
        "args": [
            {
                "name": "$fp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$chunk_size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stream_set_read_buffer": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stream_set_timeout": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$microseconds",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_set_write_buffer": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stream_socket_accept": {
        "args": [
            {
                "name": "$server_socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "&$peername",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "stream_socket_client": {
        "args": [
            {
                "name": "$remote_socket",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$errno",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$errstr",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 3,
                "type": "float"
            },
            {
                "name": "$flags",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 5,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "stream_socket_enable_crypto": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$enable",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$crypto_type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$session_stream",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "stream_socket_get_name": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$want_peer",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stream_socket_pair": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "stream_socket_recvfrom": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$address",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stream_socket_sendto": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$address",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stream_socket_server": {
        "args": [
            {
                "name": "$local_socket",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$errno",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$errstr",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 4,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "stream_socket_shutdown": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$how",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_supports_lock": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_wrapper_register": {
        "args": [
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_wrapper_restore": {
        "args": [
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "stream_wrapper_unregister": {
        "args": [
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_async_dns_lookup": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_async_read": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": 65536,
                "name": "$chunk_size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "swoole_async_readfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_async_set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "swoole_async_write": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_async_writefile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_client_select": {
        "args": [
            {
                "name": "&$read_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$write_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$error_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": 0.5,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_cpu_num": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_event_add": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$read_callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$write_callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$events",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_event_defer": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_event_del": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_event_exit": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "swoole_event_set": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$read_callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$write_callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$events",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "swoole_event_wait": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "swoole_event_write": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "swoole_get_local_ip": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "swoole_last_error": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_load_module": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "swoole_select": {
        "args": [
            {
                "name": "&$read_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$write_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$error_array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_set_process_name": {
        "args": [
            {
                "name": "$process_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 128,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "swoole_strerror": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$error_type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "swoole_timer_after": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_timer_exists": {
        "args": [
            {
                "name": "$timer_id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "swoole_timer_tick": {
        "args": [
            {
                "name": "$ms",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "swoole_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Async::dnsLookup": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Async::read": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$chunk_size",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$offset",
                "optionalDepth": 2,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Swoole\\Async::readFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Async::set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Async::write": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Async::writeFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Atomic::add": {
        "args": [
            {
                "name": "$add_value",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Atomic::cmpset": {
        "args": [
            {
                "name": "$cmp_value",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$new_value",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Atomic::get": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Atomic::set": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Atomic::sub": {
        "args": [
            {
                "name": "$sub_value",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Buffer::append": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Buffer::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Buffer::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Buffer::expand": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Buffer::read": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Buffer::recycle": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Buffer::substr": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$remove",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Buffer::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Buffer::write": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Channel::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Channel::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Channel::push": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Swoole\\Channel::stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Client::close": {
        "args": [
            {
                "name": "$force",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Swoole\\Client::connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "integer"
            },
            {
                "name": "$flag",
                "optionalDepth": 3,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Swoole\\Client::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::getpeername": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Client::getsockname": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Client::isConnected": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Swoole\\Client::on": {
        "args": [
            {
                "name": "$event",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::pause": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::pipe": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::recv": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$flag",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::resume": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::send": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Client::sendfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Client::sendto": {
        "args": [
            {
                "name": "$ip",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Client::set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::sleep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Client::wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Connection\\Iterator::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Swoole\\Connection\\Iterator::current": {
        "args": [],
        "returnTypes": [
            "Connection"
        ]
    },
    "Swoole\\Connection\\Iterator::key": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Swoole\\Connection\\Iterator::next": {
        "args": [],
        "returnTypes": [
            "Connection"
        ]
    },
    "Swoole\\Connection\\Iterator::offsetExists": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Connection\\Iterator::offsetGet": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Connection"
        ]
    },
    "Swoole\\Connection\\Iterator::offsetSet": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$connection",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Connection\\Iterator::offsetUnset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Connection\\Iterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Connection\\Iterator::valid": {
        "args": [],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Coroutine::call_user_func_array": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param_array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Coroutine::call_user_func": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Coroutine::cli_wait": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine::create": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::close": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::connect": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::__destruct": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::getpeername": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::getsockname": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::isConnected": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::recv": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::send": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::sendfile": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::sendto": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Client::set": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::addFile": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::close": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::__destruct": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::execute": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::get": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::getDefer": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::isConnected": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::post": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::recv": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::set": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::setCookies": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::setData": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::setDefer": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::setHeaders": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\Http\\Client::setMethod": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::close": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::connect": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::__destruct": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::getDefer": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::query": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::recv": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine\\MySQL::setDefer": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine::getuid": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine::resume": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Coroutine::suspend": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Event::add": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$read_callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$write_callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$events",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Event::defer": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Event::del": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Event::exit": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Event::set": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$read_callback",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$write_callback",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$events",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Event::wait": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Event::write": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::addFile": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$filename",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::download": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::execute": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::get": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::isConnected": {
        "args": [],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Http\\Client::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::post": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::push": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opcode",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$finish",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::setCookies": {
        "args": [
            {
                "name": "$cookies",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::setData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Client::setHeaders": {
        "args": [
            {
                "name": "$headers",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::setMethod": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Client::upgrade": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Request::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Request::rawcontent": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Http\\Response::cookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$expires",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$path",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$secure",
                "optionalDepth": 5,
                "type": "string"
            },
            {
                "name": "$httponly",
                "optionalDepth": 6,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Http\\Response::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Response::end": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Response::gzip": {
        "args": [
            {
                "name": "$compress_level",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Response::header": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ucwords",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Response::initHeader": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Response::rawcookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$expires",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$path",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$secure",
                "optionalDepth": 5,
                "type": "string"
            },
            {
                "name": "$httponly",
                "optionalDepth": 6,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Response::sendfile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Response::status": {
        "args": [
            {
                "name": "$http_code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Http\\Response::write": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Server::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Http\\Server::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::lock_read": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::trylock_read": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::trylock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Lock::unlock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Mmap::open": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\MySQL::close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\MySQL::connect": {
        "args": [
            {
                "name": "$server_config",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\MySQL::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\MySQL::getBuffer": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\MySQL::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\MySQL::query": {
        "args": [
            {
                "name": "$sql",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Process::alarm": {
        "args": [
            {
                "name": "$interval_usec",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::daemon": {
        "args": [
            {
                "name": "$nochdir",
                "optionalDepth": 1,
                "type": "boolean"
            },
            {
                "name": "$noclose",
                "optionalDepth": 2,
                "type": "boolean"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::exec": {
        "args": [
            {
                "name": "$exec_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Process::exit": {
        "args": [
            {
                "name": "$exit_code",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::freeQueue": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::kill": {
        "args": [
            {
                "name": "$pid",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$signal_no",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::name": {
        "args": [
            {
                "name": "$process_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::pop": {
        "args": [
            {
                "name": "$maxsize",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Process::push": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Process::read": {
        "args": [
            {
                "name": "$maxsize",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Process::signal": {
        "args": [
            {
                "name": "$signal_no",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Process::statQueue": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Process::useQueue": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Process::wait": {
        "args": [
            {
                "name": "$blocking",
                "optionalDepth": 1,
                "type": "boolean"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Process::write": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Redis\\Server::format": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Redis\\Server::setHandler": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$number_of_string_param",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$type_of_array_param",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Redis\\Server::start": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Serialize::pack": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$is_fast",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Serialize::unpack": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Server::addlistener": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$socket_type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::addProcess": {
        "args": [
            {
                "name": "$process",
                "optionalDepth": 0,
                "type": "swoole_process"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::after": {
        "args": [
            {
                "name": "$after_time_ms",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Server::bind": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$uid",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::clearTimer": {
        "args": [
            {
                "name": "$timer_id",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::close": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$reset",
                "optionalDepth": 1,
                "type": "boolean"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::confirm": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::connection_info": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$reactor_id",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Server::connection_list": {
        "args": [
            {
                "name": "$start_fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$pagesize",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Server::defer": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server\\Port::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server\\Port::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Server\\Port::set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::exist": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::finish": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::getClientInfo": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$reactor_id",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Server::getClientList": {
        "args": [
            {
                "name": "$start_fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$pagesize",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Server::getLastError": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Server::heartbeat": {
        "args": [
            {
                "name": "$if_close_connection",
                "optionalDepth": 0,
                "type": "boolean"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Server::listen": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$socket_type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::pause": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::protect": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$is_protected",
                "optionalDepth": 1,
                "type": "boolean"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::reload": {
        "args": [],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::resume": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::send": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$reactor_id",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::sendfile": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::sendMessage": {
        "args": [
            {
                "name": "$worker_id",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::sendto": {
        "args": [
            {
                "name": "$ip",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server_socket",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::sendwait": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::set": {
        "args": [
            {
                "name": "$settings",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Server::shutdown": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::stats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Server::stop": {
        "args": [
            {
                "name": "$worker_id",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Server::task": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dst_worker_id",
                "optionalDepth": 1,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Swoole\\Server::taskwait": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            },
            {
                "name": "$worker_id",
                "optionalDepth": 2,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::taskWaitMulti": {
        "args": [
            {
                "name": "$tasks",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$timeout_ms",
                "optionalDepth": 1,
                "type": "double"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Server::tick": {
        "args": [
            {
                "name": "$interval_ms",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::column": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Table::count": {
        "args": [],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Table::create": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::current": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Swoole\\Table::decr": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$decrby",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Table::del": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::destroy": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::exist": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Table::get": {
        "args": [
            {
                "name": "$row_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "integer"
        ]
    },
    "Swoole\\Table::incr": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$incrby",
                "optionalDepth": 1,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Swoole\\Table::next": {
        "args": [],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\Table::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Table::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "VOID"
        ]
    },
    "Swoole\\Table::valid": {
        "args": [],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Timer::after": {
        "args": [
            {
                "name": "$after_time_ms",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Timer::clear": {
        "args": [
            {
                "name": "$timer_id",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\Timer::exists": {
        "args": [
            {
                "name": "$timer_id",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\Timer::tick": {
        "args": [
            {
                "name": "$interval_ms",
                "optionalDepth": 0,
                "type": "integer"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\WebSocket\\Server::exist": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "integer"
            }
        ],
        "returnTypes": [
            "boolean"
        ]
    },
    "Swoole\\WebSocket\\Server::on": {
        "args": [
            {
                "name": "$event_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "ReturnType"
        ]
    },
    "Swoole\\WebSocket\\Server::pack": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opcode",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$finish",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$mask",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "binary"
        ]
    },
    "Swoole\\WebSocket\\Server::push": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opcode",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$finish",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swoole\\WebSocket\\Server::unpack": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "binary"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::body": {
        "args": [],
        "returnTypes": [
            "tidyNode"
        ]
    },
    "tidy::cleanRepair": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tidy::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$use_include_path",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::diagnose": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tidy_get_error_buffer": {
        "args": [
            {
                "name": "$tidy",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::getConfig": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "tidy::getHtmlVer": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "tidy::getOpt": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "tidy::getOptDoc": {
        "args": [
            {
                "name": "$optname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::getRelease": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::getStatus": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "tidy::head": {
        "args": [],
        "returnTypes": [
            "tidyNode"
        ]
    },
    "tidy::html": {
        "args": [],
        "returnTypes": [
            "tidyNode"
        ]
    },
    "tidy::isXhtml": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tidy::isXml": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tidy::parseFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "tidy::parseString": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "tidy::repairFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::repairString": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy::root": {
        "args": [],
        "returnTypes": [
            "tidyNode"
        ]
    },
    "tidyNode::getParent": {
        "args": [],
        "returnTypes": [
            "tidyNode",
            "null"
        ]
    },
    "tidyNode::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::hasSiblings": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isAsp": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isComment": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isHtml": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isJste": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isPhp": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "tidyNode::isText": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ob_tidyhandler": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy_access_count": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "tidy_config_count": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "tidy_error_count": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "tidy_get_output": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "tidy_warning_count": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "tidy"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "token_get_all": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "token_name": {
        "args": [
            {
                "name": "$token",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "base64_decode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$strict",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "base64_encode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "get_headers": {
        "args": [
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$context",
                "optionalDepth": 2,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "get_meta_tags": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$use_include_path",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "http_build_query": {
        "args": [
            {
                "name": "$query_data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$numeric_prefix",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$arg_separator",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$enc_type",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "parse_url": {
        "args": [
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$component",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "rawurldecode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "rawurlencode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "urldecode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "urlencode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "V8Js::__construct": {
        "args": [
            {
                "defaultValue": "PHP",
                "name": "$object_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$variables",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$extensions",
                "optionalDepth": 3,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$report_uncaught_exceptions",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "V8Js::executeString": {
        "args": [
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "V8Js::executeString()",
                "name": "$identifier",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "V8Js::getExtensions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "V8Js::getPendingException": {
        "args": [],
        "returnTypes": [
            "V8JsException",
            "null"
        ]
    },
    "V8Js::registerExtension": {
        "args": [
            {
                "name": "$extension_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$script",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dependencies",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$auto_enable",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "V8JsException::getJsFileName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "V8JsException::getJsLineNumber": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "V8JsException::getJsSourceLine": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "V8JsException::getJsTrace": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "yaml_emit_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$linebreak",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "yaml_emit": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$linebreak",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaml_parse_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$pos",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$ndocs",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "yaml_parse_url": {
        "args": [
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$pos",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$ndocs",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "yaml_parse": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$pos",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$ndocs",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Yaf_Application::app": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Application::bootstrap": {
        "args": [
            {
                "name": "$bootstrap",
                "optionalDepth": 1,
                "type": "Yaf_Bootstrap_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::clearLastError": {
        "args": [],
        "returnTypes": [
            "Yaf_Application"
        ]
    },
    "Yaf_Application::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::__construct": {
        "args": [
            {
                "name": "$config",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$envrion",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Application::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::environ": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::execute": {
        "args": [
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::getAppDirectory": {
        "args": [],
        "returnTypes": [
            "Yaf_Application"
        ]
    },
    "Yaf_Application::getConfig": {
        "args": [],
        "returnTypes": [
            "Yaf_Config_Abstract"
        ]
    },
    "Yaf_Application::getDispatcher": {
        "args": [],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Application::getLastErrorMsg": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Application::getLastErrorNo": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Yaf_Application::getModules": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Yaf_Application::run": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::setAppDirectory": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Yaf_Application"
        ]
    },
    "Yaf_Application::__sleep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Application::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Dispatcher::autoRender": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::catchException": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Dispatcher::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Dispatcher::disableView": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Dispatcher::dispatch": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "Yaf_Response_Abstract"
        ]
    },
    "Yaf_Dispatcher::enableView": {
        "args": [],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::flushInstantly": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::getApplication": {
        "args": [],
        "returnTypes": [
            "Yaf_Application"
        ]
    },
    "Yaf_Dispatcher::getInstance": {
        "args": [],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::getRequest": {
        "args": [],
        "returnTypes": [
            "Yaf_Request_Abstract"
        ]
    },
    "Yaf_Dispatcher::getRouter": {
        "args": [],
        "returnTypes": [
            "Yaf_Router"
        ]
    },
    "Yaf_Dispatcher::initView": {
        "args": [
            {
                "name": "$templates_dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "Yaf_View_Interface"
        ]
    },
    "Yaf_Dispatcher::registerPlugin": {
        "args": [
            {
                "name": "$plugin",
                "optionalDepth": 0,
                "type": "Yaf_Plugin_Abstract"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::returnResponse": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setDefaultAction": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setDefaultController": {
        "args": [
            {
                "name": "$controller",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setDefaultModule": {
        "args": [
            {
                "name": "$module",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setErrorHandler": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "call"
            },
            {
                "name": "$error_types",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setRequest": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::setView": {
        "args": [
            {
                "name": "$view",
                "optionalDepth": 0,
                "type": "Yaf_View_Interface"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::__sleep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Dispatcher::throwException": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Dispatcher"
        ]
    },
    "Yaf_Dispatcher::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Abstract::get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Config_Abstract::readonly": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Config_Abstract::set": {
        "args": [],
        "returnTypes": [
            "Yaf_Config_Abstract"
        ]
    },
    "Yaf_Config_Abstract::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Yaf_Config_Ini::__construct": {
        "args": [
            {
                "name": "$config_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$section",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Config_Ini::count": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::current": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::__isset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::key": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::offsetExists": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::offsetGet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::offsetSet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::offsetUnset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::readonly": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::__set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Ini::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Yaf_Config_Ini::valid": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::__construct": {
        "args": [
            {
                "name": "$config_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$section",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Config_Simple::count": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::current": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::__isset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::key": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::offsetExists": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::offsetGet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::offsetSet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::offsetUnset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::readonly": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::__set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Config_Simple::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Yaf_Config_Simple::valid": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Controller_Abstract::display": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Controller_Abstract::forward": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$paramters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::getInvokeArg": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::getInvokeArgs": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::getModuleName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Controller_Abstract::getRequest": {
        "args": [],
        "returnTypes": [
            "Yaf_Request_Abstract"
        ]
    },
    "Yaf_Controller_Abstract::getResponse": {
        "args": [],
        "returnTypes": [
            "Yaf_Response_Abstract"
        ]
    },
    "Yaf_Controller_Abstract::getView": {
        "args": [],
        "returnTypes": [
            "Yaf_View_Interface"
        ]
    },
    "Yaf_Controller_Abstract::getViewpath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Controller_Abstract::init": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::initView": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Controller_Abstract::redirect": {
        "args": [
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Controller_Abstract::render": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Controller_Abstract::setViewpath": {
        "args": [
            {
                "name": "$view_directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Action_Abstract::execute": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Action_Abstract::getController": {
        "args": [],
        "returnTypes": [
            "Yaf_Controller_Abstract"
        ]
    },
    "Yaf_View_Interface::assign": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Interface::display": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tpl_vars",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Interface::getScriptPath": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_View_Interface::render": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tpl_vars",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_View_Interface::setScriptPath": {
        "args": [
            {
                "name": "$template_dir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_View_Simple::assign": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Simple::assignRef": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Simple::clear": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Simple::__construct": {
        "args": [
            {
                "name": "$template_dir",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_View_Simple::display": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tpl_vars",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_View_Simple::eval": {
        "args": [
            {
                "name": "$tpl_content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tpl_vars",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_View_Simple::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_View_Simple::getScriptPath": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_View_Simple::__isset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_View_Simple::render": {
        "args": [
            {
                "name": "$tpl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tpl_vars",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_View_Simple::__set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_View_Simple::setScriptPath": {
        "args": [
            {
                "name": "$template_dir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Loader::autoload": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::clearLocalNamespace": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Loader::getInstance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::getLibraryPath": {
        "args": [
            {
                "defaultValue": false,
                "name": "$is_global",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Loader"
        ]
    },
    "Yaf_Loader::getLocalNamespace": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::import": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::isLocalName": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::registerLocalNamespace": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::setLibraryPath": {
        "args": [
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_global",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "Yaf_Loader"
        ]
    },
    "Yaf_Loader::__sleep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Loader::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::dispatchLoopShutdown": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::dispatchLoopStartup": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::postDispatch": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::preDispatch": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::preResponse": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::routerShutdown": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Plugin_Abstract::routerStartup": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            },
            {
                "name": "$response",
                "optionalDepth": 0,
                "type": "Yaf_Response_Abstract"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Registry::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Registry::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Registry::del": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Registry::get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Registry::has": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Registry::set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::getActionName": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getBaseUri": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getControllerName": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getEnv": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getException": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getLanguage": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getMethod": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Request_Abstract::getModuleName": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getParam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Abstract::getParams": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Yaf_Request_Abstract::getRequestUri": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::getServer": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::isCli": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isDispatched": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isGet": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isHead": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isOptions": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isPost": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isPut": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isRouted": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::isXmlHttpRequest": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::setActionName": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::setBaseUri": {
        "args": [
            {
                "name": "$uir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::setControllerName": {
        "args": [
            {
                "name": "$controller",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::setDispatched": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::setModuleName": {
        "args": [
            {
                "name": "$module",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::setParam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Abstract::setRequestUri": {
        "args": [
            {
                "name": "$uir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Abstract::setRouted": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Http::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Http::__construct": {
        "args": [
            {
                "name": "$request_uri",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$base_uri",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Request_Http::get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Http::getCookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Http::getFiles": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Http::getPost": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Http::getQuery": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Http::getRaw": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Request_Http::getRequest": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Http::isXmlHttpRequest": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Request_Simple::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::__construct": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$module",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$controller",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$action",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 5,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Request_Simple::get": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::getCookie": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::getFiles": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::getPost": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::getQuery": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::getRequest": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Request_Simple::isXmlHttpRequest": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::appendBody": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Response_Abstract::clearBody": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Response_Abstract::clearHeaders": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Response_Abstract::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::getBody": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Response_Abstract::getHeader": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::prependBody": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Response_Abstract::response": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::setAllHeaders": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::setBody": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Response_Abstract::setHeader": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replace",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Response_Abstract::setRedirect": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Response_Abstract::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Interface::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Interface::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Map::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Map::__construct": {
        "args": [
            {
                "defaultValue": false,
                "name": "$controller_prefer",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$delimiter",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Map::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Regex::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Regex::__construct": {
        "args": [
            {
                "name": "$match",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$route",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$map",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$verify",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$reverse",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Regex::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Rewrite::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Rewrite::__construct": {
        "args": [
            {
                "name": "$match",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$route",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$verify",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Rewrite::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Router::addConfig": {
        "args": [
            {
                "name": "$config",
                "optionalDepth": 0,
                "type": "Yaf_Config_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Router::addRoute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$route",
                "optionalDepth": 0,
                "type": "Yaf_Route_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Router::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Router::getCurrentRoute": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Router::getRoute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "Yaf_Route_Interface"
        ]
    },
    "Yaf_Router::getRoutes": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaf_Router::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Simple::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Simple::__construct": {
        "args": [
            {
                "name": "$module_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$controller_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$action_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Simple::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Static::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Static::match": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Route_Static::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Route_Supervar::assemble": {
        "args": [
            {
                "name": "$info",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Supervar::__construct": {
        "args": [
            {
                "name": "$supervar_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yaf_Route_Supervar::route": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "Yaf_Request_Abstract"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yaf_Session::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Session::count": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::current": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::del": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::getInstance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::has": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__isset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::key": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::offsetExists": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::offsetGet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::offsetSet": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::offsetUnset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__sleep": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::start": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__unset": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::valid": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Session::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaf_Exception::__construct": {
        "args": [],
        "returnTypes": []
    },
    "Yaf_Exception::getPrevious": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Yaconf::get": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$default_value",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yaconf::has": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_tainted": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "taint": {
        "args": [
            {
                "name": "&$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "untaint": {
        "args": [
            {
                "name": "&$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Collection::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Collection::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Collection"
        ]
    },
    "Ds\\Collection::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Collection::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Hashable::equals": {
        "args": [
            {
                "name": "$obj",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Hashable::hash": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::apply": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Sequence::contains": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Sequence::filter": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::find": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Ds\\Sequence::first": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::get": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::insert": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::join": {
        "args": [
            {
                "name": "$glue",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Ds\\Sequence::last": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::map": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::merge": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::push": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::reduce": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::remove": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::reverse": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::reversed": {
        "args": [],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::rotate": {
        "args": [
            {
                "name": "$rotations",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::set": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Sequence::slice": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::sort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Sequence::sorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Sequence::sum": {
        "args": [],
        "returnTypes": [
            "number"
        ]
    },
    "Ds\\Sequence::unshift": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::apply": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Vector::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::contains": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Vector::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::filter": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::find": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Ds\\Vector::first": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::get": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::insert": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Vector::join": {
        "args": [
            {
                "name": "$glue",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Ds\\Vector::last": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::map": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::merge": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::push": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::reduce": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::remove": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::reverse": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::reversed": {
        "args": [],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::rotate": {
        "args": [
            {
                "name": "$rotations",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::set": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Vector::slice": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::sort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Vector::sorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Vector"
        ]
    },
    "Ds\\Vector::sum": {
        "args": [],
        "returnTypes": [
            "number"
        ]
    },
    "Ds\\Vector::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Vector::unshift": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::apply": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Deque::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::contains": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Deque::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::filter": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::find": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Ds\\Deque::first": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::get": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::insert": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Deque::join": {
        "args": [
            {
                "name": "$glue",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Ds\\Deque::last": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::map": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::merge": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::push": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::reduce": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::remove": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::reverse": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::reversed": {
        "args": [],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::rotate": {
        "args": [
            {
                "name": "$rotations",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::set": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::shift": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Deque::slice": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::sort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Deque::sorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Deque"
        ]
    },
    "Ds\\Deque::sum": {
        "args": [],
        "returnTypes": [
            "number"
        ]
    },
    "Ds\\Deque::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Deque::unshift": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::apply": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Map::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::diff": {
        "args": [
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "Ds\\Map"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::filter": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::first": {
        "args": [],
        "returnTypes": [
            "Ds\\Pair"
        ]
    },
    "Ds\\Map::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Map::hasKey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Map::hasValue": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Map::intersect": {
        "args": [
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "Ds\\Map"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Map::keys": {
        "args": [],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Map::ksort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::ksorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::last": {
        "args": [],
        "returnTypes": [
            "Ds\\Pair"
        ]
    },
    "Ds\\Map::map": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::merge": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::pairs": {
        "args": [],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Map::put": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::putAll": {
        "args": [
            {
                "name": "$pairs",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::reduce": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Map::remove": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$default",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Map::reverse": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::reversed": {
        "args": [],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::skip": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Pair"
        ]
    },
    "Ds\\Map::slice": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::sort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Map::sorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::sum": {
        "args": [],
        "returnTypes": [
            "number"
        ]
    },
    "Ds\\Map::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Map::union": {
        "args": [
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "Ds\\Map"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Map::values": {
        "args": [],
        "returnTypes": [
            "Ds\\Sequence"
        ]
    },
    "Ds\\Map::xor": {
        "args": [
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "Ds\\Map"
            }
        ],
        "returnTypes": [
            "Ds\\Map"
        ]
    },
    "Ds\\Pair::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Pair::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Pair"
        ]
    },
    "Ds\\Pair::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Pair::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Set::add": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Set::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::contains": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Set::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::diff": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "Ds\\Set"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::filter": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::first": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::get": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Set::intersect": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "Ds\\Set"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Set::join": {
        "args": [
            {
                "name": "$glue",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Ds\\Set::last": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::merge": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::reduce": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Set::remove": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::reverse": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::reversed": {
        "args": [],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::slice": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::sort": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Set::sorted": {
        "args": [
            {
                "name": "$comparator",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::sum": {
        "args": [],
        "returnTypes": [
            "number"
        ]
    },
    "Ds\\Set::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Set::union": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "Ds\\Set"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Set::xor": {
        "args": [
            {
                "name": "$set",
                "optionalDepth": 0,
                "type": "Ds\\Set"
            }
        ],
        "returnTypes": [
            "Ds\\Set"
        ]
    },
    "Ds\\Stack::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Stack::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Stack::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Stack::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Stack"
        ]
    },
    "Ds\\Stack::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Stack::peek": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Stack::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Stack::push": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Stack::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\Queue::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Queue::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\Queue::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Queue::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\Queue"
        ]
    },
    "Ds\\Queue::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\Queue::peek": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Queue::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\Queue::push": {
        "args": [
            {
                "name": "$...values",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\Queue::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Ds\\PriorityQueue::allocate": {
        "args": [
            {
                "name": "$capacity",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\PriorityQueue::capacity": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Ds\\PriorityQueue::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\PriorityQueue::copy": {
        "args": [],
        "returnTypes": [
            "Ds\\PriorityQueue"
        ]
    },
    "Ds\\PriorityQueue::isEmpty": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Ds\\PriorityQueue::peek": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\PriorityQueue::pop": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "Ds\\PriorityQueue::push": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Ds\\PriorityQueue::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "chdb::__construct": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "chdb::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "chdb_create": {
        "args": [
            {
                "name": "$pathname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "curl_close": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "curl_copy_handle": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "curl_errno": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_error": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "curl_escape": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "curl_exec": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "curl_getinfo": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$opt",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "curl_init": {
        "args": [
            {
                "defaultValue": null,
                "name": "$url",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "curl_multi_add_handle": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_multi_close": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "curl_multi_errno": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "curl_multi_exec": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$still_running",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_multi_getcontent": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "curl_multi_info_read": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "&$msgs_in_queue",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "curl_multi_init": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "curl_multi_remove_handle": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_multi_select": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 1,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_multi_setopt": {
        "args": [
            {
                "name": "$mh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "curl_multi_strerror": {
        "args": [
            {
                "name": "$errornum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "curl_pause": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bitmask",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "curl_reset": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "curl_setopt_array": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "curl_setopt": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "curl_share_close": {
        "args": [
            {
                "name": "$sh",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "curl_share_errno": {
        "args": [
            {
                "name": "$sh",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "curl_share_init": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "curl_share_setopt": {
        "args": [
            {
                "name": "$sh",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "curl_share_strerror": {
        "args": [
            {
                "name": "$errornum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "curl_strerror": {
        "args": [
            {
                "name": "$errornum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "curl_unescape": {
        "args": [
            {
                "name": "$ch",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "curl_version": {
        "args": [
            {
                "name": "$age",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "CURLFile::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mimetype",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$postname",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CURLFile::getFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "CURLFile::getMimeType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "CURLFile::getPostFilename": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "CURLFile::setMimeType": {
        "args": [
            {
                "name": "$mime",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CURLFile::setPostFilename": {
        "args": [
            {
                "name": "$postname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CURLFile::__wakeup": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Event::add": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::addSignal": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::addTimer": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$what",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "Event::del": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::delSignal": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::delTimer": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::free": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Event::getSupportedMethods": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Event::pending": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::set": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$what",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$cb",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::setPriority": {
        "args": [
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::setTimer": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Event::signal": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$signum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Event"
        ]
    },
    "Event::timer": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Event"
        ]
    },
    "EventBase::__construct": {
        "args": [
            {
                "name": "$cfg",
                "optionalDepth": 1,
                "type": "EventConfig"
            }
        ],
        "returnTypes": [
            "EventConfig"
        ]
    },
    "EventBase::dispatch": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBase::exit": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::free": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBase::getFeatures": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EventBase::getMethod": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "EventBase::getTimeOfDayCached": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "EventBase::gotExit": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::gotStop": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::loop": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::priorityInit": {
        "args": [
            {
                "name": "$n_priorities",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::reInit": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBase::stop": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::add": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::addBuffer": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::appendFrom": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EventBuffer::__construct": {
        "args": [],
        "returnTypes": []
    },
    "EventBuffer::copyout": {
        "args": [
            {
                "name": "&$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$max_bytes",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EventBuffer::drain": {
        "args": [
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::expand": {
        "args": [
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::freeze": {
        "args": [
            {
                "name": "$at_front",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::lock": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBuffer::prepend": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::prependBuffer": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::pullup": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EventBuffer::read": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$howmuch",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "EventBuffer::readLine": {
        "args": [
            {
                "name": "$eol_style",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EventBuffer::search": {
        "args": [
            {
                "name": "$what",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$end",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "EventBuffer::searchEol": {
        "args": [
            {
                "defaultValue": -1,
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$eol_style",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "EventBuffer::substr": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "EventBuffer::unfreeze": {
        "args": [
            {
                "name": "$at_front",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::unlock": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBuffer::write": {
        "args": [
            {
                "name": "$fd",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$howmuch",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "EventBufferEvent::close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBufferEvent::connect": {
        "args": [
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::connectHost": {
        "args": [
            {
                "name": "$dns_base",
                "optionalDepth": 0,
                "type": "EventDnsBase"
            },
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$family",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "defaultValue": null,
                "name": "$socket",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$readcb",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$writecb",
                "optionalDepth": 4,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$eventcb",
                "optionalDepth": 5,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventBufferEvent::createPair": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "EventBufferEvent::disable": {
        "args": [
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::enable": {
        "args": [
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::free": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBufferEvent::getDnsErrorString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "EventBufferEvent::getEnabled": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EventBufferEvent::getInput": {
        "args": [],
        "returnTypes": [
            "EventBuffer"
        ]
    },
    "EventBufferEvent::getOutput": {
        "args": [],
        "returnTypes": [
            "EventBuffer"
        ]
    },
    "EventBufferEvent::read": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EventBufferEvent::readBuffer": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::setCallbacks": {
        "args": [
            {
                "name": "$readcb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$writecb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$eventcb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventBufferEvent::setPriority": {
        "args": [
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::setTimeouts": {
        "args": [
            {
                "name": "$timeout_read",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$timeout_write",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::setWatermark": {
        "args": [
            {
                "name": "$events",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$lowmark",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$highmark",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventBufferEvent::sslError": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "EventBufferEvent::sslFilter": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$underlying",
                "optionalDepth": 0,
                "type": "EventBufferEvent"
            },
            {
                "name": "$ctx",
                "optionalDepth": 0,
                "type": "EventSslContext"
            },
            {
                "name": "$state",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EventBufferEvent"
        ]
    },
    "EventBufferEvent::sslGetCipherInfo": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "EventBufferEvent::sslGetCipherName": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "EventBufferEvent::sslGetCipherVersion": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "EventBufferEvent::sslGetProtocol": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "EventBufferEvent::sslRenegotiate": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventBufferEvent::sslSocket": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$ctx",
                "optionalDepth": 0,
                "type": "EventSslContext"
            },
            {
                "name": "$state",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "EventBufferEvent"
        ]
    },
    "EventBufferEvent::write": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventBufferEvent::writeBuffer": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventConfig::avoidMethod": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventConfig::__construct": {
        "args": [],
        "returnTypes": []
    },
    "EventConfig::requireFeatures": {
        "args": [
            {
                "name": "$feature",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventConfig::setMaxDispatchInterval": {
        "args": [
            {
                "name": "$max_interval",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$max_callbacks",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$min_priority",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventDnsBase::addNameserverIp": {
        "args": [
            {
                "name": "$ip",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventDnsBase::addSearch": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventDnsBase::clearSearch": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventDnsBase::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$initialize",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventDnsBase::countNameservers": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EventDnsBase::loadHosts": {
        "args": [
            {
                "name": "$hosts",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventDnsBase::parseResolvConf": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventDnsBase::setOption": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventDnsBase::setSearchNdots": {
        "args": [
            {
                "name": "$ndots",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttp::accept": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttp::addServerAlias": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttp::bind": {
        "args": [
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "defaultValue": null,
                "name": "$ctx",
                "optionalDepth": 1,
                "type": "EventSslContext"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventHttp::removeServerAlias": {
        "args": [
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttp::setAllowedMethods": {
        "args": [
            {
                "name": "$methods",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::setCallback": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::setDefaultCallback": {
        "args": [
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::setMaxBodySize": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::setMaxHeadersSize": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttp::setTimeout": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$dns_base",
                "optionalDepth": 0,
                "type": "EventDnsBase"
            },
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$ctx",
                "optionalDepth": 1,
                "type": "EventSslContext"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventHttpConnection::getBase": {
        "args": [],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventHttpConnection::getPeer": {
        "args": [
            {
                "name": "&$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::makeRequest": {
        "args": [
            {
                "name": "$req",
                "optionalDepth": 0,
                "type": "EventHttpRequest"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttpConnection::setCloseCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setLocalAddress": {
        "args": [
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setLocalPort": {
        "args": [
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setMaxBodySize": {
        "args": [
            {
                "name": "$max_size",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setMaxHeadersSize": {
        "args": [
            {
                "name": "$max_size",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setRetries": {
        "args": [
            {
                "name": "$retries",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpConnection::setTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::addHeader": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventHttpRequest::cancel": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::clearHeaders": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::closeConnection": {
        "args": [],
        "returnTypes": [
            "EventHttpConnection"
        ]
    },
    "EventHttpRequest::__construct": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "callable"
        ]
    },
    "EventHttpRequest::findHeader": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::free": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::getCommand": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::getHost": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "EventHttpRequest::getInputBuffer": {
        "args": [],
        "returnTypes": [
            "EventBuffer"
        ]
    },
    "EventHttpRequest::getInputHeaders": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "EventHttpRequest::getOutputBuffer": {
        "args": [],
        "returnTypes": [
            "EventBuffer"
        ]
    },
    "EventHttpRequest::getOutputHeaders": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::getResponseCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "EventHttpRequest::getUri": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "EventHttpRequest::removeHeader": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::sendError": {
        "args": [
            {
                "name": "$error",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$reason",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::sendReply": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$reason",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$buf",
                "optionalDepth": 1,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::sendReplyChunk": {
        "args": [
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "EventBuffer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::sendReplyEnd": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventHttpRequest::sendReplyStart": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$reason",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventListener::__construct": {
        "args": [
            {
                "name": "$base",
                "optionalDepth": 0,
                "type": "EventBase"
            },
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$backlog",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "EventBase"
        ]
    },
    "EventListener::disable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventListener::enable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "EventListener::getBase": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "EventListener::getSocketName": {
        "args": [
            {
                "name": "&$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventListener::setCallback": {
        "args": [
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventListener::setErrorCallback": {
        "args": [
            {
                "name": "$cb",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "EventSslContext::__construct": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EventUtil::__construct": {
        "args": [],
        "returnTypes": []
    },
    "EventUtil::getLastSocketErrno": {
        "args": [
            {
                "defaultValue": null,
                "name": "$socket",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EventUtil::getLastSocketError": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "EventUtil::getSocketFd": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "EventUtil::getSocketName": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventUtil::setSocketOption": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optname",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "EventUtil::sslRandPoll": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "fam_cancel_monitor": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fam_monitor",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fam_close": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "fam_monitor_collection": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$depth",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mask",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fam_monitor_directory": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fam_monitor_file": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fam_next_event": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fam_open": {
        "args": [
            {
                "name": "$appname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "fam_pending": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "fam_resume_monitor": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fam_monitor",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "fam_suspend_monitor": {
        "args": [
            {
                "name": "$fam",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$fam_monitor",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_alloc": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filesize",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$result",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_append": {
        "args": [
            {
                "name": "$ftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_cdup": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_chdir": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_chmod": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ftp_close": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 21,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 90,
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ftp_delete": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_exec": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ftp_fget": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$resumepos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_fput": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$startpos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_get_option": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "ftp_get": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$resumepos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_login": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_mdtm": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_mkdir": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ftp_mlsd": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ftp_nb_continue": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_nb_fget": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$resumepos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_nb_fput": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$startpos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_nb_get": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$resumepos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_nb_put": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$startpos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_nlist": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ftp_pasv": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pasv",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_put": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$startpos",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_pwd": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ftp_raw": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ftp_rawlist": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ftp_rename": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$oldname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_rmdir": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$directory",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_set_option": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ftp_site": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ftp_size": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ftp_ssl_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 21,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 90,
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ftp_systype": {
        "args": [
            {
                "name": "$ftp_stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "GearmanClient::addOptions": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::addServer": {
        "args": [
            {
                "defaultValue": "127.0.0.1",
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": 4730,
                "name": "$port",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::addServers": {
        "args": [
            {
                "defaultValue": "127.0.0.1:4730",
                "name": "$servers",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::addTask": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskHigh": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskHighBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskLow": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskLowBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$unique",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanClient::addTaskStatus": {
        "args": [
            {
                "name": "$job_handle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "GearmanTask"
        ]
    },
    "GearmanClient::clearCallbacks": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::clone": {
        "args": [],
        "returnTypes": [
            "GearmanClient"
        ]
    },
    "GearmanClient::__construct": {
        "args": [],
        "returnTypes": []
    },
    "GearmanClient::context": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::data": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::do": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doHigh": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doHighBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doJobHandle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doLow": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doLowBackground": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doNormal": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$unique",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::doStatus": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "GearmanClient::echo": {
        "args": [
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanClient::getErrno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanClient::jobStatus": {
        "args": [
            {
                "name": "$job_handle",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "GearmanClient::ping": {
        "args": [
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::removeOptions": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::returnCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanClient::runTasks": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setClientCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "GearmanClient::setCompleteCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setContext": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::setCreatedCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::setDataCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setExceptionCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setFailCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setOptions": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::setStatusCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanClient::setWarningCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::setWorkloadCallback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanClient::timeout": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanJob::complete": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::__construct": {
        "args": [],
        "returnTypes": []
    },
    "GearmanJob::data": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::exception": {
        "args": [
            {
                "name": "$exception",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::fail": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::functionName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanJob::handle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanJob::returnCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanJob::sendComplete": {
        "args": [
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::sendData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::sendException": {
        "args": [
            {
                "name": "$exception",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::sendFail": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::sendStatus": {
        "args": [
            {
                "name": "$numerator",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$denominator",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::sendWarning": {
        "args": [
            {
                "name": "$warning",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::setReturn": {
        "args": [
            {
                "name": "$gearman_return_t",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanJob::status": {
        "args": [
            {
                "name": "$numerator",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$denominator",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::unique": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanJob::warning": {
        "args": [
            {
                "name": "$warning",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanJob::workload": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanJob::workloadSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanTask::__construct": {
        "args": [],
        "returnTypes": []
    },
    "GearmanTask::create": {
        "args": [],
        "returnTypes": [
            "GearmanTask",
            "false"
        ]
    },
    "GearmanTask::data": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "GearmanTask::dataSize": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "GearmanTask::function": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanTask::functionName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanTask::isKnown": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanTask::isRunning": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanTask::jobHandle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanTask::recvData": {
        "args": [
            {
                "name": "$data_len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "GearmanTask::returnCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanTask::sendData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "GearmanTask::sendWorkload": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "GearmanTask::taskDenominator": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "GearmanTask::taskNumerator": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "GearmanTask::unique": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "GearmanTask::uuid": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "GearmanWorker::addFunction": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "&$context",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanWorker::addOptions": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::addServer": {
        "args": [
            {
                "defaultValue": "127.0.0.1",
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": 4730,
                "name": "$port",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanWorker::addServers": {
        "args": [
            {
                "defaultValue": "127.0.0.1:4730",
                "name": "$servers",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanWorker::clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "GearmanWorker::__construct": {
        "args": [],
        "returnTypes": []
    },
    "GearmanWorker::echo": {
        "args": [
            {
                "name": "$workload",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "GearmanWorker::getErrno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanWorker::options": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanWorker::register": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::removeOptions": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::returnCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanWorker::setId": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanWorker::setOptions": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::setTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::timeout": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "GearmanWorker::unregister": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::unregisterAll": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "GearmanWorker::wait": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "GearmanWorker::work": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gopher_parsedir": {
        "args": [
            {
                "name": "$dirent",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gupnp_context_get_host_ip": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gupnp_context_get_port": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gupnp_context_get_subscription_timeout": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "gupnp_context_host_path": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$local_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_context_new": {
        "args": [
            {
                "name": "$host_ip",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gupnp_context_set_subscription_timeout": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "gupnp_context_timeout_add": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_context_unhost_path": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$server_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_control_point_browse_start": {
        "args": [
            {
                "name": "$cpoint",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_control_point_browse_stop": {
        "args": [
            {
                "name": "$cpoint",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_control_point_callback_set": {
        "args": [
            {
                "name": "$cpoint",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$signal",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_control_point_new": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gupnp_device_action_callback_set": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$signal",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$action_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_device_info_get_service": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gupnp_device_info_get": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gupnp_root_device_get_available": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_root_device_get_relative_location": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gupnp_root_device_new": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$location",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$description_dir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gupnp_root_device_set_available": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$available",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_root_device_start": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_root_device_stop": {
        "args": [
            {
                "name": "$root_device",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_action_get": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "gupnp_service_action_return_error": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$error_code",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$error_description",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_action_return": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_action_set": {
        "args": [
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_freeze_notify": {
        "args": [
            {
                "name": "$service",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_info_get_introspection": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "gupnp_service_info_get": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "gupnp_service_introspection_get_state_variable": {
        "args": [
            {
                "name": "$introspection",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$variable_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "gupnp_service_notify": {
        "args": [
            {
                "name": "$service",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_action_get": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "gupnp_service_proxy_action_set": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_add_notify": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_callback_set": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$signal",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$arg",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_get_subscribed": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_remove_notify": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_proxy_send_action": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$in_params",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$out_params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "gupnp_service_proxy_set_subscribed": {
        "args": [
            {
                "name": "$proxy",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$subscribed",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "gupnp_service_thaw_notify": {
        "args": [
            {
                "name": "$service",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::checkin": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::checkout": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::children": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::content": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "HW_API_Content"
        ]
    },
    "hw_api::copy": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_content"
        ]
    },
    "hw_api::dbstat": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::dcstat": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::dstanchors": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::dstofsrcanchor": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::find": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::ftstat": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::hwstat": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::identify": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hw_api::info": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::insert": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::insertanchor": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::insertcollection": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::insertdocument": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::link": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hw_api::lock": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::move": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::object": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::objectbyanchor": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::parents": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::remove": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api::replace": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::setcommittedversion": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::srcanchors": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::srcsofdst": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api::unlock": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hw_api::user": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "hw_api::userlist": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api_attribute::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_attribute::langdepvalue": {
        "args": [
            {
                "name": "$language",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_attribute::value": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_attribute::values": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "hw_api_content::mimetype": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_content::read": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_error::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "hw_api_error::reason": {
        "args": [],
        "returnTypes": [
            "HW_API_Reason"
        ]
    },
    "hw_api_object::assign": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api_object::attreditable": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "hw_api_object::count": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "hw_api_object::insert": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "HW_API_Attribute"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api_object::remove": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "hw_api_object::title": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_object::value": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "hw_api_reason::description": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "hw_api_reason::type": {
        "args": [],
        "returnTypes": [
            "HW_API_Reason"
        ]
    },
    "hwapi_attribute_new": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "HW_API_Attribute"
        ]
    },
    "hwapi_content_new": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mimetype",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "HW_API_Content"
        ]
    },
    "hwapi_hgcsp": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "HW_API"
        ]
    },
    "hwapi_object_new": {
        "args": [
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "hw_api_object"
        ]
    },
    "ldap_8859_to_t61": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_add_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_add": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_bind_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$bind_rdn",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$bind_password",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_bind": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$bind_rdn",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$bind_password",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_compare": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ldap_connect": {
        "args": [
            {
                "defaultValue": null,
                "name": "$host",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": 389,
                "name": "$port",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ldap_control_paged_result_response": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$cookie",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "&$estimated",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_control_paged_result": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pagesize",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$iscritical",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": "",
                "name": "$cookie",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_count_entries": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ldap_delete_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_delete": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_dn2ufn": {
        "args": [
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_err2str": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_errno": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ldap_error": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_escape": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$ignore",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_exop_passwd": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": "",
                "name": "$user",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$oldpw",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$newpw",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "&$serverctrls",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ldap_exop_refresh": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ttl",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ldap_exop_whoami": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ldap_exop": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$reqoid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$reqdata",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$serverctrls",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "&$retdata",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "&$retoid",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "ldap_explode_dn": {
        "args": [
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$with_attrib",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ldap_first_attribute": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_first_entry": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ldap_first_reference": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ldap_free_result": {
        "args": [
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_get_attributes": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ldap_get_dn": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_get_entries": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ldap_get_option": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$retval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_get_values_len": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ldap_get_values": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ldap_list": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$base_dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attributes",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$attrsonly",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$sizelimit",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$timelimit",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$deref",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 6,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_mod_add_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_mod_add": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_mod_del_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_mod_del": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_mod_replace_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_mod_replace": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_modify_batch": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_next_attribute": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_next_entry": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result_entry_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ldap_next_reference": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ldap_parse_exop": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$retdata",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "&$retoid",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_parse_reference": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$referrals",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ldap_parse_result": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$errcode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$matcheddn",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "&$errmsg",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "&$referrals",
                "optionalDepth": 3,
                "type": "array"
            },
            {
                "name": "&$serverctrls",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_read": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$base_dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attributes",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$attrsonly",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$sizelimit",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$timelimit",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$deref",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 6,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_rename_ext": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newrdn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newparent",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$deleteoldrdn",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_rename": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newrdn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newparent",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$deleteoldrdn",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_sasl_bind": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$binddn",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$password",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$sasl_mech",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$sasl_realm",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$sasl_authc_id",
                "optionalDepth": 5,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$sasl_authz_id",
                "optionalDepth": 6,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$props",
                "optionalDepth": 7,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_search": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$base_dn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attributes",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$attrsonly",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$sizelimit",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": -1,
                "name": "$timelimit",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$deref",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$serverctrls",
                "optionalDepth": 6,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ldap_set_option": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$newval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ldap_set_rebind_proc": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ldap_sort": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$result",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$sortfilter",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ldap_start_tls": {
        "args": [
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ldap_t61_to_8859": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ldap_unbind": {
        "args": [
            {
                "name": "$link_identifier",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$expire",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::addServer": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 11211,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$persistent",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$weight",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$timeout",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$retry_interval",
                "optionalDepth": 5,
                "type": "int"
            },
            {
                "name": "$status",
                "optionalDepth": 6,
                "type": "bool"
            },
            {
                "name": "$failure_callback",
                "optionalDepth": 7,
                "type": "callable"
            },
            {
                "name": "$timeoutms",
                "optionalDepth": 8,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::decrement": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$value",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcache::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::flush": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Memcache::getExtendedStats": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$slabid",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 100,
                "name": "$limit",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcache::getServerStatus": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 11211,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Memcache::getStats": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$slabid",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": 100,
                "name": "$limit",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcache::getVersion": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Memcache::increment": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$value",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcache::pconnect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Memcache::replace": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$expire",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$flag",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$expire",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::setCompressThreshold": {
        "args": [
            {
                "name": "$threshold",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$min_savings",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcache::setServerParams": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 11211,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$timeout",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$retry_interval",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$status",
                "optionalDepth": 4,
                "type": "bool"
            },
            {
                "name": "$failure_callback",
                "optionalDepth": 5,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "memcache_debug": {
        "args": [
            {
                "name": "$on_off",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Memcached::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::addByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::addServer": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$weight",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::addServers": {
        "args": [
            {
                "name": "$servers",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::append": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::appendByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::cas": {
        "args": [
            {
                "name": "$cas_token",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::casByKey": {
        "args": [
            {
                "name": "$cas_token",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::decrement": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$initial_value",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$expiry",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcached::decrementByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$initial_value",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$expiry",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcached::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$time",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::deleteByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$time",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::deleteMulti": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$time",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Memcached::deleteMultiByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$time",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::fetch": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcached::fetchAll": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcached::flush": {
        "args": [
            {
                "defaultValue": null,
                "name": "$delay",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cache_cb",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Memcached::getAllKeys": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcached::getByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cache_cb",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Memcached::getDelayed": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$with_cas",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$value_cb",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::getDelayedByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$with_cas",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$value_cb",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::getMulti": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Memcached::getMultiByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcached::getOption": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "Memcached::getResultCode": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Memcached::getResultMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Memcached::getServerByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "Memcached::getServerList": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Memcached::getStats": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Memcached::getVersion": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Memcached::increment": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$initial_value",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$expiry",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcached::incrementByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$initial_value",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$expiry",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "Memcached::isPersistent": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Memcached::isPristine": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Memcached::prepend": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::prependByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::quit": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::replace": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::replaceByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::resetServerList": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setMulti": {
        "args": [
            {
                "name": "$items",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setMultiByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$items",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$expiration",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setOption": {
        "args": [
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setOptions": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::setSaslAuthData": {
        "args": [
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Memcached::touch": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expiration",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Memcached::touchByKey": {
        "args": [
            {
                "name": "$server_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$expiration",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "mqseries_back": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_begin": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$beginOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_close": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hobj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_cmit": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_conn": {
        "args": [
            {
                "name": "$qManagerName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_connx": {
        "args": [
            {
                "name": "$qManagerName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$connOptions",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_disc": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_get": {
        "args": [
            {
                "name": "$hConn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hObj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$md",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$gmo",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$bufferLength",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$msg",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$data_length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_inq": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hobj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$selectorCount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$selectors",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$intAttrCount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$intAttr",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$charAttrLength",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$charAttr",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_open": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$objDesc",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$hobj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_put1": {
        "args": [
            {
                "name": "$hconn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$objDesc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$msgDesc",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$pmo",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_put": {
        "args": [
            {
                "name": "$hConn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hObj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$md",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$pmo",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_set": {
        "args": [
            {
                "name": "$hConn",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$hObj",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$selectorCount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$selectors",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$intAttrCount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$intAttrs",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$charAttrLength",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$charAttrs",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$compCode",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$reason",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "mqseries_strerror": {
        "args": [
            {
                "name": "$reason",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "checkdnsrr": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "MX",
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "closelog": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "define_syslog_variables": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "dns_get_record": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$authns",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "&$addtl",
                "optionalDepth": 3,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$raw",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "fsockopen": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$errno",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$errstr",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 4,
                "type": "float"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "gethostbyaddr": {
        "args": [
            {
                "name": "$ip_address",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "gethostbyname": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gethostbynamel": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "gethostname": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "getmxrr": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$mxhosts",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$weight",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "getprotobyname": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getprotobynumber": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "getservbyname": {
        "args": [
            {
                "name": "$service",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "getservbyport": {
        "args": [
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "header_register_callback": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "header_remove": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "header": {
        "args": [
            {
                "name": "$header",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$replace",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$http_response_code",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "headers_list": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "headers_sent": {
        "args": [
            {
                "name": "&$file",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "&$line",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "http_response_code": {
        "args": [
            {
                "name": "$response_code",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "inet_ntop": {
        "args": [
            {
                "name": "$in_addr",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "inet_pton": {
        "args": [
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ip2long": {
        "args": [
            {
                "name": "$ip_address",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "long2ip": {
        "args": [
            {
                "name": "$proper_address",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "openlog": {
        "args": [
            {
                "name": "$ident",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$facility",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "pfsockopen": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$errno",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "&$errstr",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$timeout",
                "optionalDepth": 4,
                "type": "float"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "setcookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$expires",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$path",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$domain",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$secure",
                "optionalDepth": 5,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$httponly",
                "optionalDepth": 6,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "setrawcookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$expires",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$path",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 4,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$secure",
                "optionalDepth": 5,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$httponly",
                "optionalDepth": 6,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "syslog": {
        "args": [
            {
                "name": "$priority",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rrd_create": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "rrd_error": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "rrd_fetch": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "rrd_first": {
        "args": [
            {
                "name": "$file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$raaindex",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "rrd_graph": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "rrd_info": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "rrd_last": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "rrd_lastupdate": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "rrd_restore": {
        "args": [
            {
                "name": "$xml_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rrd_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "rrd_tune": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "rrd_update": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "rrd_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "rrd_xport": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "rrdc_disconnect": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "RRDCreator::addArchive": {
        "args": [
            {
                "name": "$description",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RRDCreator::addDataSource": {
        "args": [
            {
                "name": "$description",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RRDCreator::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$startTime",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$step",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "RRDCreator::save": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "RRDGraph::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "RRDGraph::save": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "RRDGraph::saveVerbose": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "RRDGraph::setOptions": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "RRDUpdater::__construct": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "RRDUpdater::update": {
        "args": [
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$time",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SAMConnection::commit": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SAMConnection::connect": {
        "args": [
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SAMConnection::disconnect": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SAMConnection::isConnected": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SAMConnection::peek": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SAMMessage",
            "false"
        ]
    },
    "SAMConnection::peekAll": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SAMConnection::receive": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SAMMessage",
            "false"
        ]
    },
    "SAMConnection::remove": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SAMMessage"
        ]
    },
    "SAMConnection::rollback": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SAMConnection::send": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "SAMMessage"
            },
            {
                "name": "$properties",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SAMConnection::setDebug": {
        "args": [
            {
                "name": "$switch",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SAMConnection::subscribe": {
        "args": [
            {
                "name": "$targetTopic",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SAMConnection::unsubscribe": {
        "args": [
            {
                "name": "$subscriptionId",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$targetTopic",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_get_quick_print": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_get_valueretrieval": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "snmp_read_mib": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_set_enum_print": {
        "args": [
            {
                "name": "$enum_print",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_set_oid_numeric_print": {
        "args": [
            {
                "name": "$oid_format",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "snmp_set_oid_output_format": {
        "args": [
            {
                "name": "$oid_format",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_set_quick_print": {
        "args": [
            {
                "name": "$quick_print",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp_set_valueretrieval": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "snmp2_get": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmp2_getnext": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmp2_real_walk": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmp2_set": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "snmp2_walk": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmp3_get": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmp3_getnext": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmp3_real_walk": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmp3_set": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "snmp3_walk": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sec_level",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_protocol",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$priv_passphrase",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmpget": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmpgetnext": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "snmprealwalk": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmpset": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "snmpwalk": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "snmpwalkoid": {
        "args": [
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$community",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1000000,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": 5,
                "name": "$retries",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SNMP::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SNMP::get": {
        "args": [
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$preserve_keys",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "SNMP::getErrno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SNMP::getError": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SNMP::getnext": {
        "args": [
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "SNMP::set": {
        "args": [
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SNMP::walk": {
        "args": [
            {
                "name": "$object_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$suffix_as_key",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$max_repetitions",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "name": "$non_repeaters",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "socket_accept": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "socket_addrinfo_bind": {
        "args": [
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "socket_addrinfo_connect": {
        "args": [
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "socket_addrinfo_explain": {
        "args": [
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "socket_addrinfo_lookup": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$service",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$hints",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "socket_bind": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_clear_error": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "socket_close": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "socket_cmsg_space": {
        "args": [
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$n",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "socket_connect": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_create_listen": {
        "args": [
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": 128,
                "name": "$backlog",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "socket_create_pair": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$fd",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_create": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$protocol",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "socket_export_stream": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "socket_get_option": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optname",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "socket_getpeername": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_getsockname": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$addr",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_import_stream": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "socket_last_error": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 1,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "socket_listen": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": null,
                "name": "$backlog",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_read": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "socket_recv": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$buf",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "socket_recvfrom": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$buf",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "&$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "socket_recvmsg": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$message",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "socket_select": {
        "args": [
            {
                "name": "&$read",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$write",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$except",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$tv_sec",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$tv_usec",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "socket_send": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "socket_sendmsg": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "socket_sendto": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buf",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$addr",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "socket_set_block": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_set_nonblock": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_set_option": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optname",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$optval",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_shutdown": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": 2,
                "name": "$how",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "socket_strerror": {
        "args": [
            {
                "name": "$errno",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "socket_write": {
        "args": [
            {
                "name": "$socket",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ssh2_auth_agent": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_auth_hostbased_file": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$hostname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pubkeyfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$privkeyfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$local_username",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_auth_none": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ssh2_auth_password": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_auth_pubkey_file": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$username",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pubkeyfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$privkeyfile",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$passphrase",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 22,
                "name": "$port",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$methods",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$callbacks",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ssh2_disconnect": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_exec": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$command",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pty",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$env",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "defaultValue": 80,
                "name": "$width",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": 25,
                "name": "$height",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$width_height_type",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ssh2_fetch_stream": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$streamid",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ssh2_fingerprint": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ssh2_methods_negotiated": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ssh2_publickey_add": {
        "args": [
            {
                "name": "$pkey",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$algoname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$blob",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$attributes",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_publickey_init": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "ssh2_publickey_list": {
        "args": [
            {
                "name": "$pkey",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ssh2_publickey_remove": {
        "args": [
            {
                "name": "$pkey",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$algoname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$blob",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_scp_recv": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_scp_send": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$local_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$remote_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 420,
                "name": "$create_mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_chmod": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_lstat": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ssh2_sftp_mkdir": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 511,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_readlink": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ssh2_sftp_realpath": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ssh2_sftp_rename": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_rmdir": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$dirname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_stat": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ssh2_sftp_symlink": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$link",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp_unlink": {
        "args": [
            {
                "name": "$sftp",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ssh2_sftp": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ssh2_shell": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "defaultValue": "vanilla",
                "name": "$term_type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$env",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "defaultValue": 80,
                "name": "$width",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "defaultValue": 25,
                "name": "$height",
                "optionalDepth": 4,
                "type": "int"
            },
            {
                "name": "$width_height_type",
                "optionalDepth": 5,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "ssh2_tunnel": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "stomp_connect_error": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "stomp_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Stomp::abort": {
        "args": [
            {
                "name": "$transaction_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::ack": {
        "args": [
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::begin": {
        "args": [
            {
                "name": "$transaction_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::commit": {
        "args": [
            {
                "name": "$transaction_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::__construct": {
        "args": [
            {
                "name": "$broker",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$username",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$password",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Stomp::__destruct": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::error": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Stomp::getReadTimeout": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "Stomp::getSessionId": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "Stomp::hasFrame": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::readFrame": {
        "args": [
            {
                "defaultValue": "stompFrame",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "stompframe"
        ]
    },
    "Stomp::send": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::setReadTimeout": {
        "args": [
            {
                "name": "$seconds",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$microseconds",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Stomp::subscribe": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Stomp::unsubscribe": {
        "args": [
            {
                "name": "$destination",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "StompFrame::__construct": {
        "args": [
            {
                "name": "$command",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$headers",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "name": "$body",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "StompException::getDetails": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SVM::__construct": {
        "args": [],
        "returnTypes": []
    },
    "svm::crossvalidate": {
        "args": [
            {
                "name": "$problem",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$number_of_folds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SVM::getOptions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SVM::setOptions": {
        "args": [
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svm::train": {
        "args": [
            {
                "name": "$problem",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$weights",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SVMModel"
        ]
    },
    "SVMModel::checkProbabilityModel": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SVMModel::__construct": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SVMModel::getLabels": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SVMModel::getNrClass": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SVMModel::getSvmType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SVMModel::getSvrProbability": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SVMModel::load": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SVMModel::predict_probability": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SVMModel::predict": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "SVMModel::save": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_add": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$force",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_auth_get_parameter": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "svn_auth_set_parameter": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "svn_blame": {
        "args": [
            {
                "name": "$repository_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$revision_no",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_cat": {
        "args": [
            {
                "name": "$repos_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$revision_no",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "svn_checkout": {
        "args": [
            {
                "name": "$repos",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$targetpath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$revision",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_cleanup": {
        "args": [
            {
                "name": "$workingdir",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_client_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "svn_commit": {
        "args": [
            {
                "name": "$log",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$targets",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_delete": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$force",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_diff": {
        "args": [
            {
                "name": "$path1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rev1",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$path2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rev2",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "svn_export": {
        "args": [
            {
                "name": "$frompath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$topath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$working_copy",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": -1,
                "name": "$revision_no",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_fs_abort_txn": {
        "args": [
            {
                "name": "$txn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_apply_text": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_fs_begin_txn2": {
        "args": [
            {
                "name": "$repos",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rev",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_fs_change_node_prop": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_check_path": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "svn_fs_contents_changed": {
        "args": [
            {
                "name": "$root1",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$root2",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_copy": {
        "args": [
            {
                "name": "$from_root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$from_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to_root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$to_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_delete": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_dir_entries": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_fs_file_contents": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_fs_file_length": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "svn_fs_is_dir": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_is_file": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_make_dir": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_make_file": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_node_created_rev": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "svn_fs_node_prop": {
        "args": [
            {
                "name": "$fsroot",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$propname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "svn_fs_props_changed": {
        "args": [
            {
                "name": "$root1",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$root2",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$path2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_fs_revision_prop": {
        "args": [
            {
                "name": "$fs",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$revnum",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$propname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "svn_fs_revision_root": {
        "args": [
            {
                "name": "$fs",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$revnum",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_fs_txn_root": {
        "args": [
            {
                "name": "$txn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_fs_youngest_rev": {
        "args": [
            {
                "name": "$fs",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "svn_import": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$nonrecursive",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_log": {
        "args": [
            {
                "name": "$repos_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start_revision",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$end_revision",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$limit",
                "optionalDepth": 3,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 4,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_ls": {
        "args": [
            {
                "name": "$repos_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$revision_no",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$recurse",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$peg",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_mkdir": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$log_message",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_repos_create": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$fsconfig",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_repos_fs_begin_txn_for_commit": {
        "args": [
            {
                "name": "$repos",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$rev",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$author",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$log_msg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_repos_fs_commit_txn": {
        "args": [
            {
                "name": "$txn",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "svn_repos_fs": {
        "args": [
            {
                "name": "$repos",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_repos_hotcopy": {
        "args": [
            {
                "name": "$repospath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$destpath",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cleanlogs",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_repos_open": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "svn_repos_recover": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "svn_revert": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "svn_status": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "svn_update": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$revno",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$recurse",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "tcpwrap_check": {
        "args": [
            {
                "name": "$daemon",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$address",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$nodns",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "VarnishAdmin::auth": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "VarnishAdmin::ban": {
        "args": [
            {
                "name": "$vcl_regex",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishAdmin::banUrl": {
        "args": [
            {
                "name": "$vcl_regex",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishAdmin::clearPanic": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishAdmin::connect": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "VarnishAdmin::__construct": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishAdmin::disconnect": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "VarnishAdmin::getPanic": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "VarnishAdmin::getParams": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishAdmin::isRunning": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "VarnishAdmin::setCompat": {
        "args": [
            {
                "name": "$compat",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::setHost": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::setIdent": {
        "args": [
            {
                "name": "$ident",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::setParam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string|integer"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishAdmin::setPort": {
        "args": [
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::setSecret": {
        "args": [
            {
                "name": "$secret",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::setTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "VarnishAdmin::start": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishAdmin::stop": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "VarnishStat::__construct": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishStat::getSnapshot": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishLog::__construct": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishLog::getLine": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "VarnishLog::getTagName": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaz_addinfo": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaz_ccl_conf": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$config",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_ccl_parse": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$result",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_close": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_connect": {
        "args": [
            {
                "name": "$zurl",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "yaz_database": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$databases",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_element": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$elementset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_errno": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "yaz_error": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaz_es_result": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "yaz_es": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_get_option": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaz_hits": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$searchresult",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "yaz_itemorder": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_present": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_range": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_record": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$pos",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yaz_scan_result": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$result",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "yaz_scan": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$startterm",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_schema": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$schema",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_search": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "yaz_set_option": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_sort": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$criteria",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_syntax": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$syntax",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yaz_wait": {
        "args": [
            {
                "name": "&$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "yp_all": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "yp_cat": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "yp_err_string": {
        "args": [
            {
                "name": "$errorcode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yp_errno": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "yp_first": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "yp_get_default_domain": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "yp_master": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "yp_match": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "yp_next": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "yp_order": {
        "args": [
            {
                "name": "$domain",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$map",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ZMQ::__construct": {
        "args": [],
        "returnTypes": []
    },
    "ZMQContext::__construct": {
        "args": [
            {
                "defaultValue": 1,
                "name": "$io_threads",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$is_persistent",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ZMQContext::getOpt": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ZMQContext::getSocket": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$persistent_id",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$on_new_socket",
                "optionalDepth": 2,
                "type": "callback"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQContext::isPersistent": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ZMQContext::setOpt": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "ZMQContext"
        ]
    },
    "ZMQSocket::bind": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$force",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQSocket::connect": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$force",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQSocket::__construct": {
        "args": [
            {
                "name": "$context",
                "optionalDepth": 0,
                "type": "ZMQContext"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$persistent_id",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$on_new_socket",
                "optionalDepth": 2,
                "type": "callback"
            }
        ],
        "returnTypes": [
            "ZMQContext"
        ]
    },
    "ZMQSocket::disconnect": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQSocket::getEndpoints": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ZMQSocket::getPersistentId": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ZMQSocket::getSocketType": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ZMQSocket::getSockOpt": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ZMQSocket::isPersistent": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ZMQSocket::recv": {
        "args": [
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ZMQSocket::recvMulti": {
        "args": [
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ZMQSocket::send": {
        "args": [
            {
                "name": "$message",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQSocket::setSockOpt": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQSocket::unbind": {
        "args": [
            {
                "name": "$dsn",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQPoll::add": {
        "args": [
            {
                "name": "$entry",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ZMQPoll::clear": {
        "args": [],
        "returnTypes": [
            "ZMQPoll"
        ]
    },
    "ZMQPoll::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ZMQPoll::getLastErrors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ZMQPoll::poll": {
        "args": [
            {
                "name": "&$readable",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$writable",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": -1,
                "name": "$timeout",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ZMQPoll::remove": {
        "args": [
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ZMQDevice::__construct": {
        "args": [
            {
                "name": "$frontend",
                "optionalDepth": 0,
                "type": "ZMQSocket"
            },
            {
                "name": "$backend",
                "optionalDepth": 0,
                "type": "ZMQSocket"
            },
            {
                "name": "$listener",
                "optionalDepth": 1,
                "type": "ZMQSocket"
            }
        ],
        "returnTypes": [
            "ZMQSocket"
        ]
    },
    "ZMQDevice::getIdleTimeout": {
        "args": [],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "ZMQDevice::getTimerTimeout": {
        "args": [],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "ZMQDevice::run": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ZMQDevice::setIdleCallback": {
        "args": [
            {
                "name": "$cb_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$user_data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "ZMQDevice::setIdleTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "ZMQDevice::setTimerCallback": {
        "args": [
            {
                "name": "$cb_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$user_data",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "ZMQDevice::setTimerTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "ZMQDevice"
        ]
    },
    "zookeeper_dispatch": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Zookeeper::addAuth": {
        "args": [
            {
                "name": "$scheme",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$completion_cb",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::close": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Zookeeper::connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$watcher_cb",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": 10000,
                "name": "$recv_timeout",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Zookeeper::create": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$acls",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Zookeeper::delete": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::exists": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$watcher_cb",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Zookeeper::get": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$watcher_cb",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$max_size",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Zookeeper::getAcl": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Zookeeper::getChildren": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$watcher_cb",
                "optionalDepth": 1,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Zookeeper::getClientId": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Zookeeper::getConfig": {
        "args": [],
        "returnTypes": [
            "ZookeeperConfig"
        ]
    },
    "Zookeeper::getRecvTimeout": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Zookeeper::getState": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Zookeeper::isRecoverable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Zookeeper::set": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::setAcl": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$acl",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::setDebugLevel": {
        "args": [
            {
                "name": "$logLevel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::setDeterministicConnOrder": {
        "args": [
            {
                "name": "$yesOrNo",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::setLogStream": {
        "args": [
            {
                "name": "$stream",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "Zookeeper::setWatcher": {
        "args": [
            {
                "name": "$watcher_cb",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ZookeeperConfig::add": {
        "args": [
            {
                "name": "$members",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ZookeeperConfig::get": {
        "args": [
            {
                "defaultValue": null,
                "name": "$watcher_cb",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ZookeeperConfig::remove": {
        "args": [
            {
                "name": "$id_list",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ZookeeperConfig::set": {
        "args": [
            {
                "name": "$members",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "&$stat",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "udm_add_search_limit": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "udm_alloc_agent_array": {
        "args": [
            {
                "name": "$databases",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "udm_alloc_agent": {
        "args": [
            {
                "name": "$dbaddr",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dbmode",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "udm_api_version": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "udm_cat_list": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$category",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "udm_cat_path": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$category",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "udm_check_charset": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$charset",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "udm_clear_search_limits": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "udm_crc32": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "udm_errno": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "udm_error": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "udm_find": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "udm_free_agent": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "udm_free_ispell_data": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "udm_free_res": {
        "args": [
            {
                "name": "$res",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "udm_get_doc_count": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "udm_get_res_field": {
        "args": [
            {
                "name": "$res",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$row",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "udm_get_res_param": {
        "args": [
            {
                "name": "$res",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "udm_hash32": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "udm_load_ispell_data": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$val1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$val2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "udm_set_agent_param": {
        "args": [
            {
                "name": "$agent",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "solr_get_version": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrUtils::digestXmlResponse": {
        "args": [
            {
                "name": "$xmlresponse",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$parse_mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrObject"
        ]
    },
    "SolrUtils::escapeQueryChars": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "SolrUtils::getSolrVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrUtils::queryPhrase": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrInputDocument::addChildDocument": {
        "args": [
            {
                "name": "$child",
                "optionalDepth": 0,
                "type": "SolrInputDocument"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrInputDocument::addChildDocuments": {
        "args": [
            {
                "name": "&$docs",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrInputDocument::addField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fieldValue",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 0,
                "name": "$fieldBoostValue",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::clear": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrInputDocument::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrInputDocument::deleteField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrInputDocument::fieldExists": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrInputDocument::getBoost": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SolrInputDocument::getChildDocuments": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrInputDocument::getChildDocumentsCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrInputDocument::getField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDocumentField"
        ]
    },
    "SolrInputDocument::getFieldBoost": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "float",
            "false"
        ]
    },
    "SolrInputDocument::getFieldCount": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SolrInputDocument::getFieldNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrInputDocument::hasChildDocuments": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrInputDocument::merge": {
        "args": [
            {
                "name": "$sourceDoc",
                "optionalDepth": 0,
                "type": "SolrInputDocument"
            },
            {
                "defaultValue": true,
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::setBoost": {
        "args": [
            {
                "name": "$documentBoostValue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::setFieldBoost": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fieldBoostValue",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrInputDocument::sort": {
        "args": [
            {
                "name": "$sortOrderBy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sortDirection",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrInputDocument::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrDocument::addField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fieldValue",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::clear": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrDocument::current": {
        "args": [],
        "returnTypes": [
            "SolrDocumentField"
        ]
    },
    "SolrDocument::deleteField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::fieldExists": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrDocument::__get": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDocumentField"
        ]
    },
    "SolrDocument::getChildDocuments": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrDocument::getChildDocumentsCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrDocument::getField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDocumentField"
        ]
    },
    "SolrDocument::getFieldCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrDocument::getFieldNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrDocument::getInputDocument": {
        "args": [],
        "returnTypes": [
            "SolrInputDocument"
        ]
    },
    "SolrDocument::hasChildDocuments": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrDocument::__isset": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::key": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrDocument::merge": {
        "args": [
            {
                "name": "$sourceDoc",
                "optionalDepth": 0,
                "type": "SolrDocument"
            },
            {
                "defaultValue": true,
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::offsetExists": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::offsetGet": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDocumentField"
        ]
    },
    "SolrDocument::offsetSet": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fieldValue",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "SolrDocument::offsetUnset": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrDocument::__set": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$fieldValue",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::sort": {
        "args": [
            {
                "name": "$sortOrderBy",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sortDirection",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::toArray": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrDocument::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrDocument::__unset": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrDocument::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrDocumentField::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrDocumentField::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrObject::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrObject::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrObject::getPropertyNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrObject::offsetExists": {
        "args": [
            {
                "name": "$property_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrObject::offsetGet": {
        "args": [
            {
                "name": "$property_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SolrObject::offsetSet": {
        "args": [
            {
                "name": "$property_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$property_value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrObject::offsetUnset": {
        "args": [
            {
                "name": "$property_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void",
            "false"
        ]
    },
    "SolrClient::addDocument": {
        "args": [
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "SolrInputDocument"
            },
            {
                "defaultValue": true,
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$commitWithin",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::addDocuments": {
        "args": [
            {
                "name": "$docs",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": true,
                "name": "$overwrite",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": null,
                "name": "$commitWithin",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrClient::commit": {
        "args": [
            {
                "defaultValue": false,
                "name": "$softCommit",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": true,
                "name": "$waitSearcher",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$expungeDeletes",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::__construct": {
        "args": [
            {
                "name": "$clientOptions",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SolrClient::deleteById": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::deleteByIds": {
        "args": [
            {
                "name": "$ids",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::deleteByQueries": {
        "args": [
            {
                "name": "$queries",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::deleteByQuery": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrClient::getById": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQueryResponse"
        ]
    },
    "SolrClient::getByIds": {
        "args": [
            {
                "name": "$ids",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SolrQueryResponse"
        ]
    },
    "SolrClient::getDebug": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrClient::getOptions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrClient::optimize": {
        "args": [
            {
                "defaultValue": 1,
                "name": "$maxSegments",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": true,
                "name": "$softCommit",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "defaultValue": true,
                "name": "$waitSearcher",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::ping": {
        "args": [],
        "returnTypes": [
            "SolrPingResponse"
        ]
    },
    "SolrClient::query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "SolrParams"
            }
        ],
        "returnTypes": [
            "SolrQueryResponse"
        ]
    },
    "SolrClient::request": {
        "args": [
            {
                "name": "$raw_request",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::rollback": {
        "args": [],
        "returnTypes": [
            "SolrUpdateResponse"
        ]
    },
    "SolrClient::setResponseWriter": {
        "args": [
            {
                "name": "$responseWriter",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrClient::setServlet": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrClient::system": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrClient::threads": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrResponse::getDigestedResponse": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getHttpStatus": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrResponse::getHttpStatusMessage": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getRawRequest": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getRawRequestHeaders": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getRawResponse": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getRawResponseHeaders": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getRequestUrl": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrResponse::getResponse": {
        "args": [],
        "returnTypes": [
            "SolrObject"
        ]
    },
    "SolrResponse::setParseMode": {
        "args": [
            {
                "defaultValue": null,
                "name": "$parser_mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SolrResponse::success": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQueryResponse::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrQueryResponse::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrUpdateResponse::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrUpdateResponse::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrPingResponse::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrPingResponse::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrPingResponse::getResponse": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrGenericResponse::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrGenericResponse::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrParams::add": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrParams"
        ]
    },
    "SolrParams::addParam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrParams"
        ]
    },
    "SolrParams::get": {
        "args": [
            {
                "name": "$param_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SolrParams::getParam": {
        "args": [
            {
                "name": "$param_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SolrParams::getParams": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrParams::getPreparedParams": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrParams::serialize": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrParams::set": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrParams::setParam": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrParams"
        ]
    },
    "SolrParams::toString": {
        "args": [
            {
                "defaultValue": false,
                "name": "$url_encode",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrParams::unserialize": {
        "args": [
            {
                "name": "$serialized",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SolrModifiableParams::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SolrModifiableParams::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrQuery::addExpandFilterQuery": {
        "args": [
            {
                "name": "$fq",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addExpandSortField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$order",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addFacetDateField": {
        "args": [
            {
                "name": "$dateField",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addFacetDateOther": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addFacetField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addFacetQuery": {
        "args": [
            {
                "name": "$facetQuery",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addFilterQuery": {
        "args": [
            {
                "name": "$fq",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addGroupField": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addGroupFunction": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addGroupQuery": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addGroupSortField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$order",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addHighlightField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addMltField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addMltQueryField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addSortField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$order",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addStatsFacet": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::addStatsField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::collapse": {
        "args": [
            {
                "name": "$collapseFunction",
                "optionalDepth": 0,
                "type": "SolrCollapseFunction"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::__construct": {
        "args": [
            {
                "name": "$q",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SolrQuery::getExpand": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getExpandFilterQueries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getExpandQuery": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getExpandRows": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getExpandSortFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getFacet": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getFacetDateEnd": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetDateFields": {
        "args": [],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "SolrQuery::getFacetDateGap": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetDateHardEnd": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetDateOther": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getFacetDateStart": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getFacetLimit": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getFacetMethod": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetMinCount": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getFacetMissing": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getFacetOffset": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getFacetPrefix": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getFacetQueries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getFacetSort": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "null"
        ]
    },
    "SolrQuery::getFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getFilterQueries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getGroup": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getGroupCachePercent": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getGroupFacet": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getGroupFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getGroupFormat": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getGroupFunctions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getGroupLimit": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getGroupMain": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getGroupNGroups": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getGroupOffset": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getGroupQueries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getGroupSortFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getGroupTruncate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getHighlight": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getHighlightAlternateField": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getHighlightFormatter": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightFragmenter": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightFragsize": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "null"
        ]
    },
    "SolrQuery::getHighlightHighlightMultiTerm": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getHighlightMaxAlternateFieldLength": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getHighlightMaxAnalyzedChars": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getHighlightMergeContiguous": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getHighlightRegexMaxAnalyzedChars": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getHighlightRegexPattern": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightRegexSlop": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "SolrQuery::getHighlightRequireFieldMatch": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getHighlightSimplePost": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightSimplePre": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getHighlightSnippets": {
        "args": [
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getHighlightUsePhraseHighlighter": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getMlt": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getMltBoost": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getMltCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getMltMaxNumQueryTerms": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltMaxNumTokens": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltMaxWordLength": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltMinDocFrequency": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltMinTermFrequency": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltMinWordLength": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getMltQueryFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getQuery": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getRows": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getSortFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getStart": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getStats": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getStatsFacets": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getStatsFields": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrQuery::getTerms": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getTermsField": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getTermsIncludeLowerBound": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getTermsIncludeUpperBound": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getTermsLimit": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getTermsLowerBound": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getTermsMaxCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getTermsMinCount": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getTermsPrefix": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getTermsReturnRaw": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SolrQuery::getTermsSort": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::getTermsUpperBound": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrQuery::getTimeAllowed": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrQuery::removeExpandFilterQuery": {
        "args": [
            {
                "name": "$fq",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeExpandSortField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeFacetDateField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeFacetDateOther": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeFacetField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeFacetQuery": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeFilterQuery": {
        "args": [
            {
                "name": "$fq",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeHighlightField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeMltField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeMltQueryField": {
        "args": [
            {
                "name": "$queryField",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeSortField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeStatsFacet": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::removeStatsField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setEchoHandler": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setEchoParams": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setExpand": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setExpandQuery": {
        "args": [
            {
                "name": "$q",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setExpandRows": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setExplainOther": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacet": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetDateEnd": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetDateGap": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetDateHardEnd": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetDateStart": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetEnumCacheMinDefaultFrequency": {
        "args": [
            {
                "name": "$frequency",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetLimit": {
        "args": [
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetMethod": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetMinCount": {
        "args": [
            {
                "name": "$mincount",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetMissing": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetOffset": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetPrefix": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setFacetSort": {
        "args": [
            {
                "name": "$facetSort",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroup": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupCachePercent": {
        "args": [
            {
                "name": "$percent",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupFacet": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupFormat": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupLimit": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupMain": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupNGroups": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupOffset": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setGroupTruncate": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlight": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightAlternateField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightFormatter": {
        "args": [
            {
                "name": "$formatter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightFragmenter": {
        "args": [
            {
                "name": "$fragmenter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightFragsize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightHighlightMultiTerm": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightMaxAlternateFieldLength": {
        "args": [
            {
                "name": "$fieldLength",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightMaxAnalyzedChars": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightMergeContiguous": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightRegexMaxAnalyzedChars": {
        "args": [
            {
                "name": "$maxAnalyzedChars",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightRegexPattern": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightRegexSlop": {
        "args": [
            {
                "name": "$factor",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightRequireFieldMatch": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightSimplePost": {
        "args": [
            {
                "name": "$simplePost",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightSimplePre": {
        "args": [
            {
                "name": "$simplePre",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightSnippets": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$field_override",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setHighlightUsePhraseHighlighter": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMlt": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltBoost": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltCount": {
        "args": [
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMaxNumQueryTerms": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMaxNumTokens": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMaxWordLength": {
        "args": [
            {
                "name": "$maxWordLength",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMinDocFrequency": {
        "args": [
            {
                "name": "$minDocFrequency",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMinTermFrequency": {
        "args": [
            {
                "name": "$minTermFrequency",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setMltMinWordLength": {
        "args": [
            {
                "name": "$minWordLength",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setOmitHeader": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setQuery": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setRows": {
        "args": [
            {
                "name": "$rows",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setShowDebugInfo": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setStart": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setStats": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTerms": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsField": {
        "args": [
            {
                "name": "$fieldname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsIncludeLowerBound": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsIncludeUpperBound": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsLimit": {
        "args": [
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsLowerBound": {
        "args": [
            {
                "name": "$lowerBound",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsMaxCount": {
        "args": [
            {
                "name": "$frequency",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsMinCount": {
        "args": [
            {
                "name": "$frequency",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsPrefix": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsReturnRaw": {
        "args": [
            {
                "name": "$flag",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsSort": {
        "args": [
            {
                "name": "$sortType",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTermsUpperBound": {
        "args": [
            {
                "name": "$upperBound",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrQuery::setTimeAllowed": {
        "args": [
            {
                "name": "$timeAllowed",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrQuery"
        ]
    },
    "SolrDisMaxQuery::addBigramPhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$slop",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::addBoostQuery": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::addPhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$slop",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::addQueryField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::addTrigramPhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$boost",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$slop",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::addUserField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::__construct": {
        "args": [
            {
                "name": "$q",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SolrDisMaxQuery::removeBigramPhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::removeBoostQuery": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::removePhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::removeQueryField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::removeTrigramPhraseField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::removeUserField": {
        "args": [
            {
                "name": "$field",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setBigramPhraseFields": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setBigramPhraseSlop": {
        "args": [
            {
                "name": "$slop",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setBoostFunction": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setBoostQuery": {
        "args": [
            {
                "name": "$q",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setMinimumMatch": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setPhraseFields": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setPhraseSlop": {
        "args": [
            {
                "name": "$slop",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setQueryAlt": {
        "args": [
            {
                "name": "$q",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setQueryPhraseSlop": {
        "args": [
            {
                "name": "$slop",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setTieBreaker": {
        "args": [
            {
                "name": "$tieBreaker",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setTrigramPhraseFields": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setTrigramPhraseSlop": {
        "args": [
            {
                "name": "$slop",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::setUserFields": {
        "args": [
            {
                "name": "$fields",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::useDisMaxQueryParser": {
        "args": [],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrDisMaxQuery::useEDisMaxQueryParser": {
        "args": [],
        "returnTypes": [
            "SolrDisMaxQuery"
        ]
    },
    "SolrCollapseFunction::getField": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrCollapseFunction::getHint": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrCollapseFunction::getMax": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrCollapseFunction::getMin": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrCollapseFunction::getNullPolicy": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrCollapseFunction::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SolrCollapseFunction::setField": {
        "args": [
            {
                "name": "$fieldName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::setHint": {
        "args": [
            {
                "name": "$hint",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::setMax": {
        "args": [
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::setMin": {
        "args": [
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::setNullPolicy": {
        "args": [
            {
                "name": "$nullPolicy",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SolrCollapseFunction"
        ]
    },
    "SolrCollapseFunction::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SolrException::getInternalInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrClientException::getInternalInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrServerException::getInternalInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrIllegalArgumentException::getInternalInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SolrIllegalOperationException::getInternalInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SphinxClient::addQuery": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "*",
                "name": "$index",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "SphinxClient::buildExcerpts": {
        "args": [
            {
                "name": "$docs",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$words",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$opts",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SphinxClient::buildKeywords": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$hits",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SphinxClient::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::__construct": {
        "args": [],
        "returnTypes": []
    },
    "SphinxClient::escapeString": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SphinxClient::getLastError": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SphinxClient::getLastWarning": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SphinxClient::open": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "*",
                "name": "$index",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$comment",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SphinxClient::resetFilters": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SphinxClient::resetGroupBy": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SphinxClient::runQueries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SphinxClient::setArrayResult": {
        "args": [
            {
                "defaultValue": false,
                "name": "$array_result",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SphinxClient::setConnectTimeout": {
        "args": [
            {
                "name": "$timeout",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setFieldWeights": {
        "args": [
            {
                "name": "$weights",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setFilter": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$exclude",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setFilterFloatRange": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": false,
                "name": "$exclude",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setFilterRange": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$exclude",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setGeoAnchor": {
        "args": [
            {
                "name": "$attrlat",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attrlong",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$latitude",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$longitude",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setGroupBy": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$func",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": "@group desc",
                "name": "$groupsort",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setGroupDistinct": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setIDRange": {
        "args": [
            {
                "name": "$min",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$max",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setIndexWeights": {
        "args": [
            {
                "name": "$weights",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setLimits": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$max_matches",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$cutoff",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setMatchMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setMaxQueryTime": {
        "args": [
            {
                "name": "$qtime",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setOverride": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setRankingMode": {
        "args": [
            {
                "name": "$ranker",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setRetries": {
        "args": [
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$delay",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setSelect": {
        "args": [
            {
                "name": "$clause",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setServer": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::setSortMode": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$sortby",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SphinxClient::status": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SphinxClient::updateAttributes": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$attributes",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$mva",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Swish::__construct": {
        "args": [
            {
                "name": "$index_names",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Swish::getMetaList": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swish::getPropertyList": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Swish::prepare": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "Swish::query": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "SwishResult::getMetaList": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SwishResult::stem": {
        "args": [
            {
                "name": "$word",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SwishResults::getParsedWords": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SwishResults::getRemovedStopwords": {
        "args": [
            {
                "name": "$index_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SwishResults::nextResult": {
        "args": [],
        "returnTypes": [
            "object",
            "false"
        ]
    },
    "SwishResults::seekResult": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SwishSearch::execute": {
        "args": [
            {
                "name": "$query",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "SwishSearch::resetLimit": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SwishSearch::setLimit": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$low",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$high",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SwishSearch::setPhraseDelimiter": {
        "args": [
            {
                "name": "$delimiter",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SwishSearch::setSort": {
        "args": [
            {
                "name": "$sort",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SwishSearch::setStructure": {
        "args": [
            {
                "name": "$structure",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "apache_child_terminate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "apache_get_modules": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apache_get_version": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "apache_getenv": {
        "args": [
            {
                "name": "$variable",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$walk_to_top",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "apache_lookup_uri": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "apache_note": {
        "args": [
            {
                "name": "$note_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "",
                "name": "$note_value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "apache_request_headers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "apache_reset_timeout": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "apache_response_headers": {
        "args": [],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "apache_setenv": {
        "args": [
            {
                "name": "$variable",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$walk_to_top",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "getallheaders": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "virtual": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "fastcgi_finish_request": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "iis_add_server": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$server_ip",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$host_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rights",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$start_server",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_get_dir_security": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_get_script_map": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$script_extension",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "iis_get_server_by_comment": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_get_server_by_path": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_get_server_rights": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_get_service_state": {
        "args": [
            {
                "name": "$service_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_remove_server": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_set_app_settings": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$application_scope",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_set_dir_security": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$directory_flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_set_script_map": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$script_extension",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$engine_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$allow_scripting",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_set_server_rights": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$virtual_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$directory_flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_start_server": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_start_service": {
        "args": [
            {
                "name": "$service_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_stop_server": {
        "args": [
            {
                "name": "$server_instance",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "iis_stop_service": {
        "args": [
            {
                "name": "$service_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "nsapi_request_headers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "nsapi_response_headers": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "nsapi_virtual": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "msession_connect": {
        "args": [
            {
                "name": "$host",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$port",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "msession_count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "msession_create": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$classname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "msession_destroy": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "msession_disconnect": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "msession_find": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "msession_get_array": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "msession_get_data": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_get": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_inc": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_list": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "msession_listvar": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "msession_lock": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "msession_plugin": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_randstr": {
        "args": [
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_set_array": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tuples",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "msession_set_data": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "msession_set": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "msession_timeout": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$param",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "msession_uniq": {
        "args": [
            {
                "name": "$param",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$classname",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "msession_unlock": {
        "args": [
            {
                "name": "$session",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "session_abort": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_cache_expire": {
        "args": [
            {
                "name": "$new_cache_expire",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "session_cache_limiter": {
        "args": [
            {
                "name": "$cache_limiter",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_create_id": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_decode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_destroy": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_encode": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "session_gc": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "session_get_cookie_params": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "session_id": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_is_registered": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "session_module_name": {
        "args": [
            {
                "name": "$module",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_name": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_regenerate_id": {
        "args": [
            {
                "defaultValue": false,
                "name": "$delete_old_session",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_register_shutdown": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "session_register": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_save_path": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "session_set_cookie_params": {
        "args": [
            {
                "name": "$lifetime",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$path",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$domain",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$secure",
                "optionalDepth": 3,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$httponly",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_set_save_handler": {
        "args": [
            {
                "name": "$open",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$close",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$read",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$write",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$destroy",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$gc",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$create_sid",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$validate_sid",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "name": "$update_timestamp",
                "optionalDepth": 3,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_start": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "session_status": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "session_unregister": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_unset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_write_close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SessionHandler::close": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandler::create_sid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SessionHandler::destroy": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandler::gc": {
        "args": [
            {
                "name": "$maxlifetime",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SessionHandler::open": {
        "args": [
            {
                "name": "$save_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$session_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandler::read": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SessionHandler::write": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$session_data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandlerInterface::close": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandlerInterface::destroy": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandlerInterface::gc": {
        "args": [
            {
                "name": "$maxlifetime",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SessionHandlerInterface::open": {
        "args": [
            {
                "name": "$save_path",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$session_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionHandlerInterface::read": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SessionHandlerInterface::write": {
        "args": [
            {
                "name": "$session_id",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$session_data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionIdInterface::create_sid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SessionUpdateTimestampHandlerInterface::updateTimestamp": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SessionUpdateTimestampHandlerInterface::validateId": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "session_pgsql_add_error": {
        "args": [
            {
                "name": "$error_level",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$error_message",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_pgsql_get_error": {
        "args": [
            {
                "defaultValue": false,
                "name": "$with_error_message",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "session_pgsql_get_field": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "session_pgsql_reset": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_pgsql_set_field": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "session_pgsql_status": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "bbcode_add_element": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$tag_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$tag_rules",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bbcode_add_smiley": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$smiley",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replace_by",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bbcode_create": {
        "args": [
            {
                "defaultValue": null,
                "name": "$bbcode_initial_tags",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "bbcode_destroy": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bbcode_parse": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$to_parse",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "bbcode_set_arg_parser": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$bbcode_arg_parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "bbcode_set_flags": {
        "args": [
            {
                "name": "$bbcode_container",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "CommonMark\\Node::appendChild": {
        "args": [
            {
                "name": "$child",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Node::prependChild": {
        "args": [
            {
                "name": "$child",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Node::insertAfter": {
        "args": [
            {
                "name": "$sibling",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Node::insertBefore": {
        "args": [
            {
                "name": "$sibling",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Node::replace": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Node::unlink": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "CommonMark\\Node::accept": {
        "args": [
            {
                "name": "$visitor",
                "optionalDepth": 0,
                "type": "CommonMark\\Interfaces\\IVisitor"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CommonMark\\Interfaces\\IVisitor::enter": {
        "args": [
            {
                "name": "$visitable",
                "optionalDepth": 0,
                "type": "IVisitable"
            }
        ],
        "returnTypes": [
            "?int|IVisitable"
        ]
    },
    "CommonMark\\Interfaces\\IVisitor::leave": {
        "args": [
            {
                "name": "$visitable",
                "optionalDepth": 0,
                "type": "IVisitable"
            }
        ],
        "returnTypes": [
            "?int|IVisitable"
        ]
    },
    "CommonMark\\Interfaces\\IVisitable::accept": {
        "args": [
            {
                "name": "$visitor",
                "optionalDepth": 0,
                "type": "CommonMark\\Interfaces\\IVisitor"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CommonMark\\Parser::parse": {
        "args": [
            {
                "name": "$buffer",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "CommonMark\\Parser::finish": {
        "args": [],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\CQL::__invoke": {
        "args": [
            {
                "name": "$root",
                "optionalDepth": 0,
                "type": "\\CommonMark\\Node"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "\\CommonMark\\Node"
        ]
    },
    "CommonMark\\Parse": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "CommonMark\\Node"
        ]
    },
    "CommonMark\\Render": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CommonMark\\Render\\HTML": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CommonMark\\Render\\Latex": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CommonMark\\Render\\Man": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$width",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "CommonMark\\Render\\XML": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "CommonMark\\Node"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Parle\\Lexer::advance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::build": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::callout": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::consume": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::dump": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::getToken": {
        "args": [],
        "returnTypes": [
            "Parle\\Token"
        ]
    },
    "Parle\\Lexer::insertMacro": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$regex",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::push": {
        "args": [
            {
                "name": "$regex",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Lexer::reset": {
        "args": [
            {
                "name": "$pos",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::advance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::build": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::callout": {
        "args": [
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::consume": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::dump": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::getToken": {
        "args": [],
        "returnTypes": [
            "Parle\\Token"
        ]
    },
    "Parle\\RLexer::insertMacro": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$regex",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::push": {
        "args": [
            {
                "name": "$regex",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$id",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RLexer::pushState": {
        "args": [
            {
                "name": "$state",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Parle\\RLexer::reset": {
        "args": [
            {
                "name": "$pos",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::advance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::build": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::consume": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lexer",
                "optionalDepth": 0,
                "type": "Parle\\Lexer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::dump": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::errorInfo": {
        "args": [],
        "returnTypes": [
            "Parle\\ErrorInfo"
        ]
    },
    "Parle\\Parser::left": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::nonassoc": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::precedence": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::push": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rule",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Parle\\Parser::reset": {
        "args": [
            {
                "name": "$tokenId",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::right": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::sigil": {
        "args": [
            {
                "name": "$idx",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Parle\\Parser::token": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Parser::tokenId": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Parle\\Parser::trace": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Parle\\Parser::validate": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lexer",
                "optionalDepth": 0,
                "type": "Parle\\Lexer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Parle\\RParser::advance": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::build": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::consume": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rlexer",
                "optionalDepth": 0,
                "type": "Parle\\RLexer"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::dump": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::errorInfo": {
        "args": [],
        "returnTypes": [
            "Parle\\ErrorInfo"
        ]
    },
    "Parle\\RParser::left": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::nonassoc": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::precedence": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::push": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$rule",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Parle\\RParser::reset": {
        "args": [
            {
                "name": "$tokenId",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::right": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::sigil": {
        "args": [
            {
                "name": "$idx",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Parle\\RParser::token": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\RParser::tokenId": {
        "args": [
            {
                "name": "$tok",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Parle\\RParser::trace": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Parle\\RParser::validate": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$lexer",
                "optionalDepth": 0,
                "type": "Parle\\RLexer"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Parle\\Stack::pop": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Parle\\Stack::push": {
        "args": [
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "preg_filter": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$count",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "preg_grep": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "preg_last_error": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "preg_match_all": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$matches",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "preg_match": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$matches",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 3,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "preg_quote": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "preg_replace_callback_array": {
        "args": [
            {
                "name": "$patterns_and_callbacks",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$count",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "preg_replace_callback": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$count",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "preg_replace": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "&$count",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "preg_split": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "ereg_replace": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ereg": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$regs",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "eregi_replace": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "eregi": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$regs",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "split": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "spliti": {
        "args": [
            {
                "name": "$pattern",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": -1,
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "sql_regcase": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ssdeep_fuzzy_compare": {
        "args": [
            {
                "name": "$signature1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$signature2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "ssdeep_fuzzy_hash_filename": {
        "args": [
            {
                "name": "$file_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ssdeep_fuzzy_hash": {
        "args": [
            {
                "name": "$to_hash",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "addcslashes": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$charlist",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "addslashes": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "bin2hex": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "chr": {
        "args": [
            {
                "name": "$bytevalue",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "chunk_split": {
        "args": [
            {
                "name": "$body",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 76,
                "name": "$chunklen",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": "\r\n",
                "name": "$end",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "convert_cyr_string": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "convert_uudecode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "convert_uuencode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "count_chars": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "crc32": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "crypt": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$salt",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "echo": {
        "args": [
            {
                "name": "$arg1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "explode": {
        "args": [
            {
                "name": "$delimiter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$limit",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "fprintf": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "get_html_translation_table": {
        "args": [
            {
                "name": "$table",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": "UTF-8",
                "name": "$encoding",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "hebrev": {
        "args": [
            {
                "name": "$hebrew_text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$max_chars_per_line",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hebrevc": {
        "args": [
            {
                "name": "$hebrew_text",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$max_chars_per_line",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "hex2bin": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "html_entity_decode": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "htmlentities": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$double_encode",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "htmlspecialchars_decode": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "htmlspecialchars": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$double_encode",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "implode": {
        "args": [
            {
                "name": "$glue",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pieces",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "lcfirst": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "levenshtein": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "localeconv": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ltrim": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$character_mask",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "md5_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "md5": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "metaphone": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$phonemes",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "money_format": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "nl_langinfo": {
        "args": [
            {
                "name": "$item",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "nl2br": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$is_xhtml",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "number_format": {
        "args": [
            {
                "name": "$number",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "defaultValue": null,
                "name": "$decimals",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ord": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "parse_str": {
        "args": [
            {
                "name": "$encoded_string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$result",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "print": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "printf": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "quoted_printable_decode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "quoted_printable_encode": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "quotemeta": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "rtrim": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$character_mask",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "setlocale": {
        "args": [
            {
                "name": "$category",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$locale",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "sha1_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sha1": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$raw_output",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "similar_text": {
        "args": [
            {
                "name": "$first",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$second",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$percent",
                "optionalDepth": 1,
                "type": "float"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "soundex": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "sprintf": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "sscanf": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "str_getcsv": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": ",",
                "name": "$delimiter",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": "\"",
                "name": "$enclosure",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": "\\",
                "name": "$escape",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "str_ireplace": {
        "args": [
            {
                "name": "$search",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$replace",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$count",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "str_pad": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pad_length",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": " ",
                "name": "$pad_string",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$pad_type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "str_repeat": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$multiplier",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "str_replace": {
        "args": [
            {
                "name": "$search",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$replace",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "&$count",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "str_rot13": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "str_shuffle": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "str_split": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 1,
                "name": "$split_length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "str_word_count": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$format",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$charlist",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "strcasecmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strcmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strcoll": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strcspn": {
        "args": [
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mask",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strip_tags": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$allowable_tags",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stripcslashes": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "stripslashes": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "stristr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strlen": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strnatcasecmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strnatcmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strncasecmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strncmp": {
        "args": [
            {
                "name": "$str1",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str2",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$len",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strpbrk": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$char_list",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "strpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strrchr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "strrev": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strripos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strrpos": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strspn": {
        "args": [
            {
                "name": "$subject",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$mask",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "strstr": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$before_needle",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "strtok": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$token",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strtolower": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strtoupper": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "strtr": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "substr_compare": {
        "args": [
            {
                "name": "$main_str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$case_insensitivity",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "substr_count": {
        "args": [
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$offset",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "substr_replace": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$replacement",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "substr": {
        "args": [
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "trim": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "\" \\t\\n\\r\\0\\x0B\"",
                "name": "$character_mask",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ucfirst": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ucwords": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "\" \\t\\r\\n\\f\\v\"",
                "name": "$delimiters",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "vfprintf": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "vprintf": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "vsprintf": {
        "args": [
            {
                "name": "$format",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "wordwrap": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": 75,
                "name": "$width",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": "\n",
                "name": "$break",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$cut",
                "optionalDepth": 3,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "array_change_key_case": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$case",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "array_chunk": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$preserve_keys",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_column": {
        "args": [
            {
                "name": "$input",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$column_key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": null,
                "name": "$index_key",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_combine": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$values",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_count_values": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_diff_assoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_diff_key": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_diff_uassoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_diff_ukey": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_diff": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_fill_keys": {
        "args": [
            {
                "name": "$keys",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_fill": {
        "args": [
            {
                "name": "$start_index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$num",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_filter": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$flag",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_flip": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_intersect_assoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_intersect_key": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_intersect_uassoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_intersect_ukey": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_intersect": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_key_exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "array_key_first": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_key_last": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_keys": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_map": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_merge_recursive": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_merge": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_multisort": {
        "args": [
            {
                "name": "&$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array1_sort_order",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$array1_sort_flags",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 3,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "array_pad": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_pop": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_product": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "array_push": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "array_rand": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": 1,
                "name": "$num",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_reduce": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$initial",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_replace_recursive": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "array_replace": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "array_reverse": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$preserve_keys",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_search": {
        "args": [
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$strict",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "array_shift": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "array_slice": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$preserve_keys",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_splice": {
        "args": [
            {
                "name": "&$input",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$length",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$replacement",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_sum": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "number"
        ]
    },
    "array_udiff_assoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_udiff_uassoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_udiff": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_uintersect_assoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_uintersect_uassoc": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_uintersect": {
        "args": [
            {
                "name": "$array1",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$array2",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_unique": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_unshift": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "array_values": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "array_walk_recursive": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$userdata",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "array_walk": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "defaultValue": null,
                "name": "$userdata",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "array": {
        "args": [
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "arsort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "asort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "compact": {
        "args": [
            {
                "name": "$varname1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "count": {
        "args": [
            {
                "name": "$array_or_countable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$mode",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "current": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "each": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "end": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "extract": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$prefix",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "in_array": {
        "args": [
            {
                "name": "$needle",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$haystack",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "defaultValue": false,
                "name": "$strict",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "key": {
        "args": [
            {
                "name": "$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "krsort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ksort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "list": {
        "args": [
            {
                "name": "$var1",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "natcasesort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "natsort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "next": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "prev": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "range": {
        "args": [
            {
                "name": "$start",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$end",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": 1,
                "name": "$step",
                "optionalDepth": 1,
                "type": "number"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "reset": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "rsort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "shuffle": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "sort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$sort_flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uasort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "uksort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$key_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "usort": {
        "args": [
            {
                "name": "&$array",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$value_compare_func",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "__autoload": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "call_user_method_array": {
        "args": [
            {
                "name": "$method_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$obj",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "call_user_method": {
        "args": [
            {
                "name": "$method_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$obj",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "class_alias": {
        "args": [
            {
                "name": "$original",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$alias",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "class_exists": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "get_called_class": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "get_class_methods": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "get_class_vars": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "get_class": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 1,
                "type": "object"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "get_declared_classes": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "get_declared_interfaces": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "get_declared_traits": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "get_object_vars": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "get_parent_class": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "interface_exists": {
        "args": [
            {
                "name": "$interface_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_a": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$allow_string",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_subclass_of": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$allow_string",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "method_exists": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$method_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "property_exists": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "trait_exists": {
        "args": [
            {
                "name": "$traitname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$autoload",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "classkit_import": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "classkit_method_add": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "classkit_method_copy": {
        "args": [
            {
                "name": "$dClass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$dMethod",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sClass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sMethod",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "classkit_method_redefine": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "classkit_method_remove": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "classkit_method_rename": {
        "args": [
            {
                "name": "$classname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$methodname",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$newname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ctype_alnum": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_alpha": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_cntrl": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_digit": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_graph": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_lower": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_print": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_punct": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_space": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_upper": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ctype_xdigit": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "filter_has_var": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$variable_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "filter_id": {
        "args": [
            {
                "name": "$filtername",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "filter_input_array": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$definition",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$add_empty",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "filter_input": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$variable_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$filter",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "filter_list": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "filter_var_array": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$definition",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": true,
                "name": "$add_empty",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed",
            "false",
            "null"
        ]
    },
    "filter_var": {
        "args": [
            {
                "name": "$variable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$filter",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "call_user_func_array": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$param_arr",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "call_user_func": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "create_function": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "forward_static_call_array": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$parameters",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "forward_static_call": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "func_get_arg": {
        "args": [
            {
                "name": "$arg_num",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "func_get_args": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "func_num_args": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "function_exists": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "get_defined_functions": {
        "args": [
            {
                "defaultValue": false,
                "name": "$exclude_disabled",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "register_shutdown_function": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "register_tick_function": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "unregister_tick_function": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "QuickHashIntSet::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntSet::__construct": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntSet::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntSet::exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "QuickHashIntSet::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntSet::loadFromFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntSet"
        ]
    },
    "QuickHashIntSet::loadFromString": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntSet"
        ]
    },
    "QuickHashIntSet::saveToFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "QuickHashIntSet::saveToString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "QuickHashIntHash::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntHash::__construct": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntHash::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntHash::exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "QuickHashIntHash::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "null"
        ]
    },
    "QuickHashIntHash::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntHash::loadFromFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntHash"
        ]
    },
    "QuickHashIntHash::loadFromString": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntHash"
        ]
    },
    "QuickHashIntHash::saveToFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "QuickHashIntHash::saveToString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "QuickHashIntHash::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntHash::update": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashStringIntHash::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashStringIntHash::__construct": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashStringIntHash::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashStringIntHash::exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "QuickHashStringIntHash::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "QuickHashStringIntHash::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashStringIntHash::loadFromFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashStringIntHash"
        ]
    },
    "QuickHashStringIntHash::loadFromString": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashStringIntHash"
        ]
    },
    "QuickHashStringIntHash::saveToFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "QuickHashStringIntHash::saveToString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "QuickHashStringIntHash::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashStringIntHash::update": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntStringHash::add": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntStringHash::__construct": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntStringHash::delete": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "QuickHashIntStringHash::exists": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "QuickHashIntStringHash::get": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "QuickHashIntStringHash::getSize": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntStringHash::loadFromFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntStringHash"
        ]
    },
    "QuickHashIntStringHash::loadFromString": {
        "args": [
            {
                "name": "$contents",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$size",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "QuickHashIntStringHash"
        ]
    },
    "QuickHashIntStringHash::saveToFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "QuickHashIntStringHash::saveToString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "QuickHashIntStringHash::set": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "QuickHashIntStringHash::update": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Reflection::export": {
        "args": [
            {
                "name": "$reflector",
                "optionalDepth": 0,
                "type": "Reflector"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Reflection::getModifierNames": {
        "args": [
            {
                "name": "$modifiers",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::__construct": {
        "args": [
            {
                "name": "$argument",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionClass::export": {
        "args": [
            {
                "name": "$argument",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getConstant": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionClass::getConstants": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getConstructor": {
        "args": [],
        "returnTypes": [
            "ReflectionMethod",
            "null"
        ]
    },
    "ReflectionClass::getDefaultProperties": {
        "args": [],
        "returnTypes": [
            "array",
            "null"
        ]
    },
    "ReflectionClass::getDocComment": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getEndLine": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ReflectionClass::getExtension": {
        "args": [],
        "returnTypes": [
            "ReflectionExtension",
            "null"
        ]
    },
    "ReflectionClass::getExtensionName": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "ReflectionClass::getFileName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getInterfaceNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getInterfaces": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getMethod": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReflectionMethod"
        ]
    },
    "ReflectionClass::getMethods": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getModifiers": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionClass::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getNamespaceName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getParentClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass",
            "false"
        ]
    },
    "ReflectionClass::getProperties": {
        "args": [
            {
                "name": "$filter",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReflectionProperty"
        ]
    },
    "ReflectionClass::getReflectionConstant": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "ReflectionClassConstant"
        ]
    },
    "ReflectionClass::getReflectionConstants": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getShortName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClass::getStartLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionClass::getStaticProperties": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getStaticPropertyValue": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$def_value",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionClass::getTraitAliases": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getTraitNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::getTraits": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionClass::hasConstant": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::hasMethod": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::hasProperty": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::implementsInterface": {
        "args": [
            {
                "name": "$interface",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::inNamespace": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isAbstract": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isAnonymous": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isCloneable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::isFinal": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isInstance": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isInstantiable": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isInterface": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isInternal": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isIterable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::isIterateable": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isSubclassOf": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::isTrait": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClass::isUserDefined": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionClass::newInstance": {
        "args": [
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "ReflectionClass::newInstanceArgs": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "ReflectionClass::newInstanceWithoutConstructor": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "ReflectionClass::setStaticPropertyValue": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionClass::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClassConstant::__construct": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionClassConstant::export": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClassConstant::getDeclaringClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass"
        ]
    },
    "ReflectionClassConstant::getDocComment": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClassConstant::getModifiers": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionClassConstant::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionClassConstant::getValue": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionClassConstant::isPrivate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClassConstant::isProtected": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClassConstant::isPublic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionClassConstant::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionZendExtension::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::export": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::getAuthor": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::getCopyright": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::getURL": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionZendExtension::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionExtension::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionExtension::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionExtension::export": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionExtension::getClasses": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getClassNames": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getConstants": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getDependencies": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getFunctions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getINIEntries": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionExtension::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionExtension::getVersion": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionExtension::info": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionExtension::isPersistent": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionExtension::isTemporary": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionExtension::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunction::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionFunction::export": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunction::getClosure": {
        "args": [],
        "returnTypes": [
            "Closure"
        ]
    },
    "ReflectionFunction::invoke": {
        "args": [
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionFunction::invokeArgs": {
        "args": [
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionFunction::isDisabled": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunction::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionFunctionAbstract::getClosureScopeClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass",
            "null"
        ]
    },
    "ReflectionFunctionAbstract::getClosureThis": {
        "args": [],
        "returnTypes": [
            "object"
        ]
    },
    "ReflectionFunctionAbstract::getDocComment": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getEndLine": {
        "args": [],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "ReflectionFunctionAbstract::getExtension": {
        "args": [],
        "returnTypes": [
            "ReflectionExtension"
        ]
    },
    "ReflectionFunctionAbstract::getExtensionName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getFileName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getNamespaceName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getNumberOfParameters": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionFunctionAbstract::getNumberOfRequiredParameters": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionFunctionAbstract::getParameters": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionFunctionAbstract::getReturnType": {
        "args": [],
        "returnTypes": [
            "ReflectionType"
        ]
    },
    "ReflectionFunctionAbstract::getShortName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionFunctionAbstract::getStartLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionFunctionAbstract::getStaticVariables": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "ReflectionFunctionAbstract::hasReturnType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::inNamespace": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::isClosure": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::isDeprecated": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::isGenerator": {
        "args": [],
        "returnTypes": [
            "bool",
            "null"
        ]
    },
    "ReflectionFunctionAbstract::isInternal": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::isUserDefined": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::isVariadic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::returnsReference": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionFunctionAbstract::__toString": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionMethod::__construct": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionMethod::export": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionMethod::getClosure": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "Closure"
        ]
    },
    "ReflectionMethod::getDeclaringClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass"
        ]
    },
    "ReflectionMethod::getModifiers": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionMethod::getPrototype": {
        "args": [],
        "returnTypes": [
            "ReflectionMethod"
        ]
    },
    "ReflectionMethod::invoke": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionMethod::invokeArgs": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$args",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionMethod::isAbstract": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isConstructor": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isDestructor": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isFinal": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isPrivate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isProtected": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isPublic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::isStatic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionMethod::setAccessible": {
        "args": [
            {
                "name": "$accessible",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionMethod::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionNamedType::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionObject::__construct": {
        "args": [
            {
                "name": "$argument",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "object"
        ]
    },
    "ReflectionObject::export": {
        "args": [
            {
                "name": "$argument",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionParameter::allowsNull": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::canBePassedByValue": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionParameter::__construct": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionParameter::export": {
        "args": [
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameter",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionParameter::getClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass"
        ]
    },
    "ReflectionParameter::getDeclaringClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass",
            "null"
        ]
    },
    "ReflectionParameter::getDeclaringFunction": {
        "args": [],
        "returnTypes": [
            "ReflectionFunctionAbstract"
        ]
    },
    "ReflectionParameter::getDefaultValue": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionParameter::getDefaultValueConstantName": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "ReflectionParameter::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionParameter::getPosition": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionParameter::getType": {
        "args": [],
        "returnTypes": [
            "ReflectionType"
        ]
    },
    "ReflectionParameter::hasType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isArray": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isCallable": {
        "args": [],
        "returnTypes": [
            "bool",
            "null"
        ]
    },
    "ReflectionParameter::isDefaultValueAvailable": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isDefaultValueConstant": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isOptional": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isPassedByReference": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::isVariadic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionParameter::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionProperty::__clone": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionProperty::__construct": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionProperty::export": {
        "args": [
            {
                "name": "$class",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionProperty::getDeclaringClass": {
        "args": [],
        "returnTypes": [
            "ReflectionClass"
        ]
    },
    "ReflectionProperty::getDocComment": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionProperty::getModifiers": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionProperty::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionProperty::getValue": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 1,
                "type": "object"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "ReflectionProperty::isDefault": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "ReflectionProperty::isPrivate": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionProperty::isProtected": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionProperty::isPublic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionProperty::isStatic": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionProperty::setAccessible": {
        "args": [
            {
                "name": "$accessible",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionProperty::setValue": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "ReflectionProperty::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionType::allowsNull": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionType::isBuiltin": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "ReflectionType::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionGenerator::__construct": {
        "args": [
            {
                "name": "$generator",
                "optionalDepth": 0,
                "type": "Generator"
            }
        ],
        "returnTypes": [
            "Generator"
        ]
    },
    "ReflectionGenerator::getExecutingFile": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "ReflectionGenerator::getExecutingGenerator": {
        "args": [],
        "returnTypes": [
            "Generator"
        ]
    },
    "ReflectionGenerator::getExecutingLine": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "ReflectionGenerator::getFunction": {
        "args": [],
        "returnTypes": [
            "ReflectionFunctionAbstract"
        ]
    },
    "ReflectionGenerator::getThis": {
        "args": [],
        "returnTypes": [
            "object",
            "null"
        ]
    },
    "ReflectionGenerator::getTrace": {
        "args": [
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "Reflector::export": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Reflector::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "boolval": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "debug_zval_dump": {
        "args": [
            {
                "name": "$variable",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "empty": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "floatval": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "get_defined_vars": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "get_resource_type": {
        "args": [
            {
                "name": "$handle",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "gettype": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "import_request_variables": {
        "args": [
            {
                "name": "$types",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$prefix",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "intval": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": 10,
                "name": "$base",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "is_array": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_bool": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_callable": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$syntax_only",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "&$callable_name",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_countable": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_float": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_int": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_iterable": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_null": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_numeric": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_object": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_resource": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_scalar": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "is_string": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "isset": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "print_r": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "serialize": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "settype": {
        "args": [
            {
                "name": "&$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "strval": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "unserialize": {
        "args": [
            {
                "name": "$str",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "unset": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "var_dump": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "var_export": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "oauth_get_sbs": {
        "args": [
            {
                "name": "$http_method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$request_parameters",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "oauth_urlencode": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "OAuth::__construct": {
        "args": [
            {
                "name": "$consumer_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$consumer_secret",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$signature_method",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$auth_type",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "OAuth::__destruct": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "OAuth::disableDebug": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::disableRedirects": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::disableSSLChecks": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::enableDebug": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::enableRedirects": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::enableSSLChecks": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::fetch": {
        "args": [
            {
                "name": "$protected_resource_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extra_parameters",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$http_method",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$http_headers",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "OAuth::generateSignature": {
        "args": [
            {
                "name": "$http_method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extra_parameters",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "OAuth::getAccessToken": {
        "args": [
            {
                "name": "$access_token_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$auth_session_handle",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$verifier_token",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$http_method",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "OAuth::getCAPath": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "OAuth::getLastResponse": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "OAuth::getLastResponseHeaders": {
        "args": [],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "OAuth::getLastResponseInfo": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "OAuth::getRequestHeader": {
        "args": [
            {
                "name": "$http_method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extra_parameters",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "OAuth::getRequestToken": {
        "args": [
            {
                "name": "$request_token_url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$callback_url",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$http_method",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "OAuth::setAuthType": {
        "args": [
            {
                "name": "$auth_type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::setCAPath": {
        "args": [
            {
                "name": "$ca_path",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$ca_info",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "OAuth::setNonce": {
        "args": [
            {
                "name": "$nonce",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "OAuth::setRequestEngine": {
        "args": [
            {
                "name": "$reqengine",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuth::setRSACertificate": {
        "args": [
            {
                "name": "$cert",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "OAuth::setSSLChecks": {
        "args": [
            {
                "name": "$sslcheck",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OAuth::setTimestamp": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "OAuth::setToken": {
        "args": [
            {
                "name": "$token",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$token_secret",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuth::setVersion": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OAuthProvider::addRequiredParameter": {
        "args": [
            {
                "name": "$req_params",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OAuthProvider::callconsumerHandler": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::callTimestampNonceHandler": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::calltokenHandler": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::checkOAuthRequest": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::__construct": {
        "args": [
            {
                "name": "$params_array",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "OAuthProvider::consumerHandler": {
        "args": [
            {
                "name": "$callback_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::generateToken": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": false,
                "name": "$strong",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "OAuthProvider::is2LeggedEndpoint": {
        "args": [
            {
                "name": "$params_array",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::isRequestTokenEndpoint": {
        "args": [
            {
                "name": "$will_issue_request_token",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::removeRequiredParameter": {
        "args": [
            {
                "name": "$req_params",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OAuthProvider::reportProblem": {
        "args": [
            {
                "name": "$oauthexception",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$send_headers",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "OAuthProvider::setParam": {
        "args": [
            {
                "name": "$param_key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$param_val",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "OAuthProvider::setRequestTokenPath": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "OAuthProvider::timestampNonceHandler": {
        "args": [
            {
                "name": "$callback_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "OAuthProvider::tokenHandler": {
        "args": [
            {
                "name": "$callback_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SCA::createDataObject": {
        "args": [
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SCA::getService": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$binding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$config",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SCA_LocalProxy::createDataObject": {
        "args": [
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SCA_SoapProxy::createDataObject": {
        "args": [
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "is_soap_fault": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "use_soap_error_handler": {
        "args": [
            {
                "defaultValue": true,
                "name": "$handler",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SoapClient::__call": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapClient::__construct": {
        "args": [
            {
                "name": "$wsdl",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapClient::__doRequest": {
        "args": [
            {
                "name": "$request",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$location",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$action",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$one_way",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__getCookies": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SoapClient::__getFunctions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SoapClient::__getLastRequest": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__getLastRequestHeaders": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__getLastResponse": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__getLastResponseHeaders": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__getTypes": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SoapClient::__setCookie": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapClient::__setLocation": {
        "args": [
            {
                "name": "$new_location",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapClient::__setSoapHeaders": {
        "args": [
            {
                "name": "$soapheaders",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SoapClient::__soapCall": {
        "args": [
            {
                "name": "$function_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$arguments",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$input_headers",
                "optionalDepth": 2,
                "type": "mixed"
            },
            {
                "name": "&$output_headers",
                "optionalDepth": 3,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapClient::SoapClient": {
        "args": [
            {
                "name": "$wsdl",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapServer::addFunction": {
        "args": [
            {
                "name": "$functions",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::addSoapHeader": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "SoapHeader"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::__construct": {
        "args": [
            {
                "name": "$wsdl",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapServer::fault": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$string",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$actor",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$details",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::getFunctions": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SoapServer::handle": {
        "args": [
            {
                "name": "$soap_request",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::setClass": {
        "args": [
            {
                "name": "$class_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::setObject": {
        "args": [
            {
                "name": "$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::setPersistence": {
        "args": [
            {
                "name": "$mode",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SoapServer::SoapServer": {
        "args": [
            {
                "name": "$wsdl",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapFault::__construct": {
        "args": [
            {
                "name": "$faultcode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$faultstring",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$faultactor",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$detail",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$faultname",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$headerfault",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapFault::SoapFault": {
        "args": [
            {
                "name": "$faultcode",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$faultstring",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$faultactor",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$detail",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$faultname",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$headerfault",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapFault::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SoapHeader::__construct": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$mustunderstand",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$actor",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapHeader::SoapHeader": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "defaultValue": false,
                "name": "$mustunderstand",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$actor",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SoapParam::__construct": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapParam::SoapParam": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapVar::__construct": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$type_namespace",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$node_name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$node_namespace",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SoapVar::SoapVar": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$type_namespace",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$node_name",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "name": "$node_namespace",
                "optionalDepth": 4,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Yar_Server::__construct": {
        "args": [
            {
                "name": "$obj",
                "optionalDepth": 0,
                "type": "Object"
            }
        ],
        "returnTypes": [
            "Object"
        ]
    },
    "Yar_Server::handle": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yar_Client::__call": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameters",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Yar_Client::__construct": {
        "args": [
            {
                "name": "$url",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "Yar_Client::setOpt": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "Yar_Client",
            "false"
        ]
    },
    "Yar_Concurrent_Client::call": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parameters",
                "optionalDepth": 1,
                "type": "array"
            },
            {
                "name": "$callback",
                "optionalDepth": 2,
                "type": "callable"
            },
            {
                "name": "$error_callback",
                "optionalDepth": 3,
                "type": "callable"
            },
            {
                "name": "$options",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Yar_Concurrent_Client::loop": {
        "args": [
            {
                "name": "$callback",
                "optionalDepth": 1,
                "type": "callable"
            },
            {
                "name": "$error_callback",
                "optionalDepth": 2,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "Yar_Concurrent_Client::reset": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "Yar_Server_Exception::getType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "Yar_Client_Exception::getType": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "xmlrpc_decode_request": {
        "args": [
            {
                "name": "$xml",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "xmlrpc_decode": {
        "args": [
            {
                "name": "$xml",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "iso-8859-1",
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "xmlrpc_encode_request": {
        "args": [
            {
                "name": "$method",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$params",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$output_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "xmlrpc_encode": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "xmlrpc_get_type": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "xmlrpc_is_fault": {
        "args": [
            {
                "name": "$arg",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xmlrpc_parse_method_descriptions": {
        "args": [
            {
                "name": "$xml",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "xmlrpc_server_add_introspection_data": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$desc",
                "optionalDepth": 0,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xmlrpc_server_call_method": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$xml",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$user_data",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$output_options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "xmlrpc_server_create": {
        "args": [],
        "returnTypes": [
            "resource"
        ]
    },
    "xmlrpc_server_destroy": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xmlrpc_server_register_introspection_callback": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xmlrpc_server_register_method": {
        "args": [
            {
                "name": "$server",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$method_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$function",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xmlrpc_set_type": {
        "args": [
            {
                "name": "&$value",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "com_create_guid": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "com_event_sink": {
        "args": [
            {
                "name": "$comobject",
                "optionalDepth": 0,
                "type": "variant"
            },
            {
                "name": "$sinkobject",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$sinkinterface",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "com_get_active_object": {
        "args": [
            {
                "name": "$progid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$code_page",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "variant"
        ]
    },
    "com_load_typelib": {
        "args": [
            {
                "name": "$typelib_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": true,
                "name": "$case_insensitive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "com_message_pump": {
        "args": [
            {
                "defaultValue": null,
                "name": "$timeoutms",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "com_print_typeinfo": {
        "args": [
            {
                "name": "$comobject",
                "optionalDepth": 0,
                "type": "object"
            },
            {
                "name": "$dispinterface",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$wantsink",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "variant_abs": {
        "args": [
            {
                "name": "$val",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_add": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_and": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_cast": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "variant"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "variant"
        ]
    },
    "variant_cat": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_cmp": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$lcid",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "variant_date_from_timestamp": {
        "args": [
            {
                "name": "$timestamp",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "variant"
        ]
    },
    "variant_date_to_timestamp": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "variant"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "variant_div": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_eqv": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_fix": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_get_type": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "variant"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "variant_idiv": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_imp": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_int": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_mod": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_mul": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_neg": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_not": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_or": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_pow": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_round": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$decimals",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_set_type": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "variant"
            },
            {
                "name": "$type",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "variant_set": {
        "args": [
            {
                "name": "$variant",
                "optionalDepth": 0,
                "type": "variant"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "variant_sub": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "variant_xor": {
        "args": [
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$right",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "win32_ps_list_procs": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "win32_ps_stat_mem": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "win32_ps_stat_proc": {
        "args": [
            {
                "defaultValue": null,
                "name": "$pid",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "win32_continue_service": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "win32_create_service": {
        "args": [
            {
                "name": "$details",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "win32_delete_service": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "win32_get_last_control_message": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "win32_pause_service": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "win32_query_service_status": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "win32_set_service_status": {
        "args": [
            {
                "name": "$status",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "defaultValue": null,
                "name": "$checkpoint",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "win32_start_service_ctrl_dispatcher": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "win32_start_service": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "win32_stop_service": {
        "args": [
            {
                "name": "$servicename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$machine",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "DOMAttr::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMAttr::isId": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMCharacterData::appendData": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMCharacterData::deleteData": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMCharacterData::insertData": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMCharacterData::replaceData": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMCharacterData::substringData": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$count",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMComment::__construct": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMDocument::__construct": {
        "args": [
            {
                "name": "$version",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMDocument::createAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMAttr",
            "false"
        ]
    },
    "DOMDocument::createAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$qualifiedName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMAttr",
            "false"
        ]
    },
    "DOMDocument::createCDATASection": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMCDATASection",
            "false"
        ]
    },
    "DOMDocument::createComment": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMComment",
            "false"
        ]
    },
    "DOMDocument::createDocumentFragment": {
        "args": [],
        "returnTypes": [
            "DOMDocumentFragment",
            "false"
        ]
    },
    "DOMDocument::createElement": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMElement",
            "false"
        ]
    },
    "DOMDocument::createElementNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$qualifiedName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMElement",
            "false"
        ]
    },
    "DOMDocument::createEntityReference": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMEntityReference",
            "false"
        ]
    },
    "DOMDocument::createProcessingInstruction": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$data",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMProcessingInstruction",
            "false"
        ]
    },
    "DOMDocument::createTextNode": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMText",
            "false"
        ]
    },
    "DOMDocument::getElementById": {
        "args": [
            {
                "name": "$elementId",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMElement",
            "null"
        ]
    },
    "DOMDocument::getElementsByTagName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNodeList"
        ]
    },
    "DOMDocument::getElementsByTagNameNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNodeList"
        ]
    },
    "DOMDocument::importNode": {
        "args": [
            {
                "name": "$importedNode",
                "optionalDepth": 0,
                "type": "DOMNode"
            },
            {
                "defaultValue": false,
                "name": "$deep",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "DOMNode",
            "false"
        ]
    },
    "DOMDocument::load": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "DOMDocument::loadHTML": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::loadHTMLFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::loadXML": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "DOMDocument::normalizeDocument": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "DOMDocument::registerNodeClass": {
        "args": [
            {
                "name": "$baseclass",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$extendedclass",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::relaxNGValidate": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::relaxNGValidateSource": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::save": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DOMDocument::saveHTML": {
        "args": [
            {
                "defaultValue": null,
                "name": "$node",
                "optionalDepth": 1,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "DOMDocument::saveHTMLFile": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DOMDocument::saveXML": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 1,
                "type": "DOMNode"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "DOMDocument::schemaValidate": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::schemaValidateSource": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::validate": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMDocument::xinclude": {
        "args": [
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DOMDocumentFragment::appendXML": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$namespaceURI",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMElement::getAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMElement::getAttributeNode": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMAttr"
        ]
    },
    "DOMElement::getAttributeNodeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMAttr"
        ]
    },
    "DOMElement::getAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMElement::getElementsByTagName": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNodeList"
        ]
    },
    "DOMElement::getElementsByTagNameNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNodeList"
        ]
    },
    "DOMElement::hasAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::hasAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::removeAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::removeAttributeNode": {
        "args": [
            {
                "name": "$oldnode",
                "optionalDepth": 0,
                "type": "DOMAttr"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::removeAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMElement::setAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMAttr",
            "false"
        ]
    },
    "DOMElement::setAttributeNode": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "DOMAttr"
            }
        ],
        "returnTypes": [
            "DOMAttr",
            "null"
        ]
    },
    "DOMElement::setAttributeNodeNS": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "DOMAttr"
            }
        ],
        "returnTypes": [
            "DOMAttr"
        ]
    },
    "DOMElement::setAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$qualifiedName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMElement::setIdAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$isId",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMElement::setIdAttributeNode": {
        "args": [
            {
                "name": "$attr",
                "optionalDepth": 0,
                "type": "DOMAttr"
            },
            {
                "name": "$isId",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMElement::setIdAttributeNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$isId",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "DOMEntityReference::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMImplementation::__construct": {
        "args": [],
        "returnTypes": []
    },
    "DOMImplementation::createDocument": {
        "args": [
            {
                "defaultValue": null,
                "name": "$namespaceURI",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$qualifiedName",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$doctype",
                "optionalDepth": 3,
                "type": "DOMDocumentType"
            }
        ],
        "returnTypes": [
            "DOMDocument"
        ]
    },
    "DOMImplementation::createDocumentType": {
        "args": [
            {
                "defaultValue": null,
                "name": "$qualifiedName",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$publicId",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$systemId",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMDocumentType"
        ]
    },
    "DOMImplementation::hasFeature": {
        "args": [
            {
                "name": "$feature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMNamedNodeMap::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DOMNamedNodeMap::getNamedItem": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNamedNodeMap::getNamedItemNS": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNamedNodeMap::item": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DOMNode",
            "null"
        ]
    },
    "DOMNode::appendChild": {
        "args": [
            {
                "name": "$newnode",
                "optionalDepth": 0,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNode::C14N": {
        "args": [
            {
                "name": "$exclusive",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "name": "$with_comments",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$xpath",
                "optionalDepth": 3,
                "type": "array"
            },
            {
                "name": "$ns_prefixes",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "DOMNode::C14NFile": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$exclusive",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": false,
                "name": "$with_comments",
                "optionalDepth": 2,
                "type": "bool"
            },
            {
                "name": "$xpath",
                "optionalDepth": 3,
                "type": "array"
            },
            {
                "name": "$ns_prefixes",
                "optionalDepth": 4,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "DOMNode::cloneNode": {
        "args": [
            {
                "name": "$deep",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNode::getLineNo": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DOMNode::getNodePath": {
        "args": [],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "DOMNode::hasAttributes": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMNode::hasChildNodes": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMNode::insertBefore": {
        "args": [
            {
                "name": "$newnode",
                "optionalDepth": 0,
                "type": "DOMNode"
            },
            {
                "name": "$refnode",
                "optionalDepth": 1,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNode::isDefaultNamespace": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "DOMNode::isSameNode": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMNode::isSupported": {
        "args": [
            {
                "name": "$feature",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$version",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMNode::lookupNamespaceUri": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMNode::lookupPrefix": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMNode::normalize": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "DOMNode::removeChild": {
        "args": [
            {
                "name": "$oldnode",
                "optionalDepth": 0,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMNode"
        ]
    },
    "DOMNode::replaceChild": {
        "args": [
            {
                "name": "$newnode",
                "optionalDepth": 0,
                "type": "DOMNode"
            },
            {
                "name": "$oldnode",
                "optionalDepth": 0,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMNode",
            "false"
        ]
    },
    "DOMNodeList::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "DOMNodeList::item": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DOMNode",
            "null"
        ]
    },
    "DOMProcessingInstruction::__construct": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "DOMText::isElementContentWhitespace": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMText::isWhitespaceInElementContent": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "DOMText::splitText": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "DOMText"
        ]
    },
    "DOMXPath::__construct": {
        "args": [
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "DOMDocument"
            }
        ],
        "returnTypes": [
            "DOMDocument"
        ]
    },
    "DOMXPath::evaluate": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contextnode",
                "optionalDepth": 1,
                "type": "DOMNode"
            },
            {
                "defaultValue": true,
                "name": "$registerNodeNS",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "DOMXPath::query": {
        "args": [
            {
                "name": "$expression",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$contextnode",
                "optionalDepth": 1,
                "type": "DOMNode"
            },
            {
                "defaultValue": true,
                "name": "$registerNodeNS",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "DOMNodeList"
        ]
    },
    "DOMXPath::registerNamespace": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "DOMXPath::registerPhpFunctions": {
        "args": [
            {
                "name": "$restrict",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "dom_import_simplexml": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "SimpleXMLElement"
            }
        ],
        "returnTypes": [
            "DOMElement",
            "false"
        ]
    },
    "libxml_clear_errors": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "libxml_disable_entity_loader": {
        "args": [
            {
                "defaultValue": true,
                "name": "$disable",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "libxml_get_errors": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "libxml_get_last_error": {
        "args": [],
        "returnTypes": [
            "LibXMLError"
        ]
    },
    "libxml_set_external_entity_loader": {
        "args": [
            {
                "name": "$resolver_function",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "libxml_set_streams_context": {
        "args": [
            {
                "name": "$streams_context",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "libxml_use_internal_errors": {
        "args": [
            {
                "defaultValue": false,
                "name": "$use_errors",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_DAS_ChangeSummary::beginLogging": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_ChangeSummary::endLogging": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_ChangeSummary::getChangeType": {
        "args": [
            {
                "name": "$dataObject",
                "optionalDepth": 0,
                "type": "SDO_DataObject"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "SDO_DAS_ChangeSummary::getChangedDataObjects": {
        "args": [],
        "returnTypes": [
            "SDO_List"
        ]
    },
    "SDO_DAS_ChangeSummary::getOldContainer": {
        "args": [
            {
                "name": "$data_object",
                "optionalDepth": 0,
                "type": "SDO_DataObject"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_DAS_ChangeSummary::getOldValues": {
        "args": [
            {
                "name": "$data_object",
                "optionalDepth": 0,
                "type": "SDO_DataObject"
            }
        ],
        "returnTypes": [
            "SDO_List"
        ]
    },
    "SDO_DAS_ChangeSummary::isLogging": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_DAS_DataFactory::addPropertyToType": {
        "args": [
            {
                "name": "$parent_type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$parent_type_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$property_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_DataFactory::addType": {
        "args": [
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$options",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_DataFactory::getDataFactory": {
        "args": [],
        "returnTypes": [
            "SDO_DAS_DataFactory"
        ]
    },
    "SDO_DAS_DataObject::getChangeSummary": {
        "args": [],
        "returnTypes": [
            "SDO_DAS_ChangeSummary",
            "null"
        ]
    },
    "SDO_DAS_Setting::getListIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SDO_DAS_Setting::getPropertyIndex": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SDO_DAS_Setting::getPropertyName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_DAS_Setting::getValue": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SDO_DAS_Setting::isSet": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_DataFactory::create": {
        "args": [
            {
                "name": "$type_namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DataObject::clear": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DataObject::createDataObject": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_DataObject::getContainer": {
        "args": [],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_DataObject::getSequence": {
        "args": [],
        "returnTypes": [
            "SDO_Sequence"
        ]
    },
    "SDO_DataObject::getTypeName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_DataObject::getTypeNamespaceURI": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_Exception::getCause": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "SDO_List::insert": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$index",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_Model_Property::getContainingType": {
        "args": [],
        "returnTypes": [
            "SDO_Model_Type"
        ]
    },
    "SDO_Model_Property::getDefault": {
        "args": [],
        "returnTypes": [
            "mixed"
        ]
    },
    "SDO_Model_Property::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_Model_Property::getType": {
        "args": [],
        "returnTypes": [
            "SDO_Model_Type"
        ]
    },
    "SDO_Model_Property::isContainment": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SDO_Model_Property::isMany": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Model_ReflectionDataObject::__construct": {
        "args": [
            {
                "name": "$data_object",
                "optionalDepth": 0,
                "type": "SDO_DataObject"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_Model_ReflectionDataObject::export": {
        "args": [
            {
                "name": "$rdo",
                "optionalDepth": 0,
                "type": "SDO_Model_ReflectionDataObject"
            },
            {
                "name": "$return",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SDO_Model_ReflectionDataObject::getContainmentProperty": {
        "args": [],
        "returnTypes": [
            "SDO_Model_Property",
            "null"
        ]
    },
    "SDO_Model_ReflectionDataObject::getInstanceProperties": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SDO_Model_ReflectionDataObject::getType": {
        "args": [],
        "returnTypes": [
            "SDO_Model_Type"
        ]
    },
    "SDO_Model_Type::getBaseType": {
        "args": [],
        "returnTypes": [
            "SDO_Model_Type"
        ]
    },
    "SDO_Model_Type::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_Model_Type::getNamespaceURI": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_Model_Type::getProperties": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "SDO_Model_Type::getProperty": {
        "args": [
            {
                "name": "$identifier",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "SDO_Model_Property"
        ]
    },
    "SDO_Model_Type::isAbstractType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Model_Type::isDataType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Model_Type::isInstance": {
        "args": [
            {
                "name": "$data_object",
                "optionalDepth": 0,
                "type": "SDO_DataObject"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Model_Type::isOpenType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Model_Type::isSequencedType": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SDO_Sequence::getProperty": {
        "args": [
            {
                "name": "$sequence_index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "SDO_Model_Property"
        ]
    },
    "SDO_Sequence::insert": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$sequenceIndex",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$propertyIdentifier",
                "optionalDepth": 2,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_Sequence::move": {
        "args": [
            {
                "name": "$toIndex",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$fromIndex",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_Relational::applyChanges": {
        "args": [
            {
                "name": "$database_handle",
                "optionalDepth": 0,
                "type": "PDO"
            },
            {
                "name": "$root_data_object",
                "optionalDepth": 0,
                "type": "SDODataObject"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_Relational::__construct": {
        "args": [
            {
                "name": "$database_metadata",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$application_root_type",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$SDO_containment_references_metadata",
                "optionalDepth": 2,
                "type": "array"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SDO_DAS_Relational::createRootDataObject": {
        "args": [],
        "returnTypes": [
            "SDODataObject"
        ]
    },
    "SDO_DAS_Relational::executePreparedQuery": {
        "args": [
            {
                "name": "$database_handle",
                "optionalDepth": 0,
                "type": "PDO"
            },
            {
                "name": "$prepared_statement",
                "optionalDepth": 0,
                "type": "PDOStatement"
            },
            {
                "name": "$value_list",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "$column_specifier",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SDODataObject"
        ]
    },
    "SDO_DAS_Relational::executeQuery": {
        "args": [
            {
                "name": "$database_handle",
                "optionalDepth": 0,
                "type": "PDO"
            },
            {
                "name": "$SQL_statement",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$column_specifier",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "SDODataObject"
        ]
    },
    "SDO_DAS_XML::addTypes": {
        "args": [
            {
                "name": "$xsd_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_XML::create": {
        "args": [
            {
                "name": "$xsd_file",
                "optionalDepth": 1,
                "type": "mixed"
            },
            {
                "name": "$key",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DAS_XML"
        ]
    },
    "SDO_DAS_XML::createDataObject": {
        "args": [
            {
                "name": "$namespace_uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type_name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_DAS_XML::createDocument": {
        "args": [
            {
                "name": "$document_element_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DAS_XML_Document"
        ]
    },
    "SDO_DAS_XML::loadFile": {
        "args": [
            {
                "name": "$xml_file",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_XMLDocument"
        ]
    },
    "SDO_DAS_XML::loadString": {
        "args": [
            {
                "name": "$xml_string",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SDO_DAS_XML_Document"
        ]
    },
    "SDO_DAS_XML::saveFile": {
        "args": [
            {
                "name": "$xdoc",
                "optionalDepth": 0,
                "type": "SDO_XMLDocument"
            },
            {
                "name": "$xml_file",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$indent",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_XML::saveString": {
        "args": [
            {
                "name": "$xdoc",
                "optionalDepth": 0,
                "type": "SDO_XMLDocument"
            },
            {
                "name": "$indent",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_DAS_XML_Document::getRootDataObject": {
        "args": [],
        "returnTypes": [
            "SDO_DataObject"
        ]
    },
    "SDO_DAS_XML_Document::getRootElementName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_DAS_XML_Document::getRootElementURI": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SDO_DAS_XML_Document::setEncoding": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_XML_Document::setXMLDeclaration": {
        "args": [
            {
                "name": "$xmlDeclatation",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SDO_DAS_XML_Document::setXMLVersion": {
        "args": [
            {
                "name": "$xmlVersion",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SimpleXMLElement::addAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$namespace",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "SimpleXMLElement::addChild": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$namespace",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement"
        ]
    },
    "SimpleXMLElement::asXML": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "SimpleXMLElement::attributes": {
        "args": [
            {
                "defaultValue": null,
                "name": "$ns",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_prefix",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement"
        ]
    },
    "SimpleXMLElement::children": {
        "args": [
            {
                "name": "$ns",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_prefix",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement"
        ]
    },
    "SimpleXMLElement::count": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "SimpleXMLElement::getDocNamespaces": {
        "args": [
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            },
            {
                "defaultValue": true,
                "name": "$from_root",
                "optionalDepth": 2,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SimpleXMLElement::getName": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SimpleXMLElement::getNamespaces": {
        "args": [
            {
                "defaultValue": false,
                "name": "$recursive",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "array"
        ]
    },
    "SimpleXMLElement::registerXPathNamespace": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ns",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "SimpleXMLElement::__toString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "SimpleXMLElement::xpath": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "array",
            "false"
        ]
    },
    "SimpleXMLIterator::current": {
        "args": [],
        "returnTypes": [
            "mixed",
            "null"
        ]
    },
    "SimpleXMLIterator::getChildren": {
        "args": [],
        "returnTypes": [
            "SimpleXMLIterator"
        ]
    },
    "SimpleXMLIterator::hasChildren": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "SimpleXMLIterator::key": {
        "args": [],
        "returnTypes": [
            "mixed",
            "false"
        ]
    },
    "SimpleXMLIterator::next": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SimpleXMLIterator::rewind": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "SimpleXMLIterator::valid": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "simplexml_import_dom": {
        "args": [
            {
                "name": "$node",
                "optionalDepth": 0,
                "type": "DOMNode"
            },
            {
                "defaultValue": "SimpleXMLElement",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement",
            "false"
        ]
    },
    "simplexml_load_file": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "SimpleXMLElement",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$ns",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_prefix",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement",
            "false"
        ]
    },
    "simplexml_load_string": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": "SimpleXMLElement",
                "name": "$class_name",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            },
            {
                "defaultValue": "",
                "name": "$ns",
                "optionalDepth": 3,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_prefix",
                "optionalDepth": 4,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "SimpleXMLElement",
            "false"
        ]
    },
    "wddx_add_vars": {
        "args": [
            {
                "name": "$packet_id",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$var_name",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "wddx_deserialize": {
        "args": [
            {
                "name": "$packet",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "wddx_packet_end": {
        "args": [
            {
                "name": "$packet_id",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "wddx_packet_start": {
        "args": [
            {
                "name": "$comment",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "false"
        ]
    },
    "wddx_serialize_value": {
        "args": [
            {
                "name": "$var",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$comment",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "wddx_serialize_vars": {
        "args": [
            {
                "name": "$var_name",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$...",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "XMLDiff\\Base::__construct": {
        "args": [
            {
                "name": "$nsname",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "XMLDiff\\Base::diff": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "XMLDiff\\Base::merge": {
        "args": [
            {
                "name": "$src",
                "optionalDepth": 0,
                "type": "mixed"
            },
            {
                "name": "$diff",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "XMLDiff\\DOM::diff": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "DOMDocument"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "DOMDocument"
            }
        ],
        "returnTypes": [
            "DOMDocument",
            "null"
        ]
    },
    "XMLDiff\\DOM::merge": {
        "args": [
            {
                "name": "$src",
                "optionalDepth": 0,
                "type": "DOMDocument"
            },
            {
                "name": "$diff",
                "optionalDepth": 0,
                "type": "DOMDocument"
            }
        ],
        "returnTypes": [
            "DOMDocument",
            "null"
        ]
    },
    "XMLDiff\\Memory::diff": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLDiff\\Memory::merge": {
        "args": [
            {
                "name": "$src",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$diff",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLDiff\\File::diff": {
        "args": [
            {
                "name": "$from",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$to",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLDiff\\File::merge": {
        "args": [
            {
                "name": "$src",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$diff",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "utf8_decode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "utf8_encode": {
        "args": [
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "xml_error_string": {
        "args": [
            {
                "name": "$code",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "xml_get_current_byte_index": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_get_current_column_number": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_get_current_line_number": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_get_error_code": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_parse_into_struct": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "&$values",
                "optionalDepth": 0,
                "type": "array"
            },
            {
                "name": "&$index",
                "optionalDepth": 1,
                "type": "array"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_parse": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$data",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "defaultValue": false,
                "name": "$is_final",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "xml_parser_create_ns": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": ":",
                "name": "$separator",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "xml_parser_create": {
        "args": [
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "xml_parser_free": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xml_parser_get_option": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "xml_parser_set_option": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$option",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "xml_set_character_data_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_default_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_element_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$start_element_handler",
                "optionalDepth": 0,
                "type": "callable"
            },
            {
                "name": "$end_element_handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_end_namespace_decl_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_external_entity_ref_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_notation_decl_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_object": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "&$object",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_processing_instruction_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_start_namespace_decl_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "xml_set_unparsed_entity_decl_handler": {
        "args": [
            {
                "name": "$parser",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$handler",
                "optionalDepth": 0,
                "type": "callable"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::close": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::expand": {
        "args": [
            {
                "name": "$basenode",
                "optionalDepth": 1,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMNode",
            "false"
        ]
    },
    "XMLReader::getAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLReader::getAttributeNo": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLReader::getAttributeNs": {
        "args": [
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "null"
        ]
    },
    "XMLReader::getParserProperty": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::isValid": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::lookupNamespace": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "XMLReader::moveToAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::moveToAttributeNo": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::moveToAttributeNs": {
        "args": [
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::moveToElement": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "XMLReader::moveToFirstAttribute": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::moveToNextAttribute": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::next": {
        "args": [
            {
                "name": "$localname",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::open": {
        "args": [
            {
                "name": "$URI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::read": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::readInnerXml": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "XMLReader::readOuterXml": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "XMLReader::readString": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "XMLReader::setParserProperty": {
        "args": [
            {
                "name": "$property",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::setRelaxNGSchema": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::setRelaxNGSchemaSource": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::setSchema": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLReader::xml": {
        "args": [
            {
                "name": "$source",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$encoding",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$options",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endAttribute": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endCdata": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endComment": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endDocument": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endDtdAttlist": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endDtdElement": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endDtdEntity": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endDtd": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endElement": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::endPi": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::flush": {
        "args": [
            {
                "defaultValue": true,
                "name": "$empty",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "XMLWriter::fullEndElement": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::openMemory": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::openUri": {
        "args": [
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::outputMemory": {
        "args": [
            {
                "defaultValue": true,
                "name": "$flush",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "XMLWriter::setIndentString": {
        "args": [
            {
                "name": "$indentString",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::setIndent": {
        "args": [
            {
                "name": "$indent",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startAttributeNs": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startCdata": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startComment": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startDocument": {
        "args": [
            {
                "defaultValue": 1,
                "name": "$version",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "defaultValue": null,
                "name": "$encoding",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$standalone",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startDtdAttlist": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startDtdElement": {
        "args": [
            {
                "name": "$qualifiedName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startDtdEntity": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$isparam",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startDtd": {
        "args": [
            {
                "name": "$qualifiedName",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$publicId",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$systemId",
                "optionalDepth": 2,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startElementNs": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startElement": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::startPi": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::text": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeAttributeNs": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeAttribute": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeCdata": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeComment": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeDtdAttlist": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeDtdElement": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeDtdEntity": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$pe",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$pubid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$sysid",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ndataid",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeDtd": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$publicId",
                "optionalDepth": 1,
                "type": "string"
            },
            {
                "name": "$systemId",
                "optionalDepth": 2,
                "type": "string"
            },
            {
                "name": "$subset",
                "optionalDepth": 3,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeElementNs": {
        "args": [
            {
                "name": "$prefix",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeElement": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writePi": {
        "args": [
            {
                "name": "$target",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XMLWriter::writeRaw": {
        "args": [
            {
                "name": "$content",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::getParameter": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "XSLTProcessor::getSecurityPrefs": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "XSLTProcessor::hasExsltSupport": {
        "args": [],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::importStylesheet": {
        "args": [
            {
                "name": "$stylesheet",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::registerPHPFunctions": {
        "args": [
            {
                "name": "$restrict",
                "optionalDepth": 1,
                "type": "mixed"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "XSLTProcessor::removeParameter": {
        "args": [
            {
                "name": "$namespaceURI",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$localName",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::setParameter": {
        "args": [
            {
                "name": "$namespace",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::setProfiling": {
        "args": [
            {
                "name": "$filename",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "bool",
            "false"
        ]
    },
    "XSLTProcessor::setSecurityPrefs": {
        "args": [
            {
                "name": "$securityPrefs",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "XSLTProcessor::transformToDoc": {
        "args": [
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "DOMNode"
            }
        ],
        "returnTypes": [
            "DOMDocument",
            "false"
        ]
    },
    "XSLTProcessor::transformToURI": {
        "args": [
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "DOMDocument"
            },
            {
                "name": "$uri",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "int",
            "false"
        ]
    },
    "XSLTProcessor::transformToXml": {
        "args": [
            {
                "name": "$doc",
                "optionalDepth": 0,
                "type": "object"
            }
        ],
        "returnTypes": [
            "string",
            "false"
        ]
    },
    "UI\\Point::at": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Point::getX": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Point::getY": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Point::setX": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Point::setY": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Size::getHeight": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Size::getWidth": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Size::of": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Size"
        ]
    },
    "UI\\Size::setHeight": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Size::setWidth": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Window::add": {
        "args": [
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            }
        ],
        "returnTypes": [
            "UI\\Control"
        ]
    },
    "UI\\Window::error": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Window::getSize": {
        "args": [],
        "returnTypes": [
            "UI\\Size"
        ]
    },
    "UI\\Window::getTitle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Window::hasBorders": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::hasMargin": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::isFullScreen": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::msg": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$msg",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Window::onClosing": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Window::open": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Window::save": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Window::setBorders": {
        "args": [
            {
                "name": "$borders",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::setFullScreen": {
        "args": [
            {
                "name": "$full",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::setMargin": {
        "args": [
            {
                "name": "$margin",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Window::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "UI\\Size"
            }
        ],
        "returnTypes": [
            "UI\\Size"
        ]
    },
    "UI\\Window::setTitle": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Control::destroy": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Control::disable": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Control::enable": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Control::getParent": {
        "args": [],
        "returnTypes": [
            "UI\\Control"
        ]
    },
    "UI\\Control::getTopLevel": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Control::hide": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Control::isEnabled": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Control::isVisible": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Control::setParent": {
        "args": [
            {
                "name": "$parent",
                "optionalDepth": 0,
                "type": "UI\\Control"
            }
        ],
        "returnTypes": [
            "UI\\Control"
        ]
    },
    "UI\\Control::show": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Menu::append": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "UI\\MenuItem"
        ]
    },
    "UI\\Menu::appendAbout": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "UI\\MenuItem"
        ]
    },
    "UI\\Menu::appendCheck": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "UI\\MenuItem"
        ]
    },
    "UI\\Menu::appendPreferences": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "UI\\MenuItem"
        ]
    },
    "UI\\Menu::appendQuit": {
        "args": [
            {
                "name": "$type",
                "optionalDepth": 1,
                "type": "string"
            }
        ],
        "returnTypes": [
            "UI\\MenuItem"
        ]
    },
    "UI\\Menu::appendSeparator": {
        "args": [],
        "returnTypes": []
    },
    "UI\\MenuItem::disable": {
        "args": [],
        "returnTypes": []
    },
    "UI\\MenuItem::enable": {
        "args": [],
        "returnTypes": []
    },
    "UI\\MenuItem::isChecked": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\MenuItem::onClick": {
        "args": [],
        "returnTypes": []
    },
    "UI\\MenuItem::setChecked": {
        "args": [
            {
                "name": "$checked",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Area::onDraw": {
        "args": [
            {
                "name": "$pen",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Pen"
            },
            {
                "name": "$areaSize",
                "optionalDepth": 0,
                "type": "UI\\Size"
            },
            {
                "name": "$clipPoint",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$clipSize",
                "optionalDepth": 0,
                "type": "UI\\Size"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Pen"
        ]
    },
    "UI\\Area::onKey": {
        "args": [
            {
                "name": "$key",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$ext",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Area::onMouse": {
        "args": [
            {
                "name": "$areaPoint",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$areaSize",
                "optionalDepth": 0,
                "type": "UI\\Size"
            },
            {
                "name": "$flags",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Area::redraw": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Area::scrollTo": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "UI\\Size"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Area::setSize": {
        "args": [
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "UI\\Size"
            }
        ],
        "returnTypes": [
            "UI\\Size"
        ]
    },
    "UI\\Executor::kill": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "UI\\Executor::onExecute": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "UI\\Executor::setInterval": {
        "args": [
            {
                "name": "$microseconds",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Tab::append": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Tab::delete": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Tab::hasMargin": {
        "args": [
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Tab::insertAt": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Tab::pages": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Tab::setMargin": {
        "args": [
            {
                "name": "$page",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$margin",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Check::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Check::isChecked": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Check::onToggle": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Check::setChecked": {
        "args": [
            {
                "name": "$checked",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Check::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Button::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Button::onClick": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Button::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\ColorButton::getColor": {
        "args": [],
        "returnTypes": [
            "UI\\Color"
        ]
    },
    "UI\\Controls\\ColorButton::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\ColorButton::setColor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Color"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Color"
        ]
    },
    "UI\\Controls\\Label::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Label::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Entry::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Entry::isReadOnly": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Entry::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Entry::setReadOnly": {
        "args": [
            {
                "name": "$readOnly",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Entry::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\MultilineEntry::append": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\MultilineEntry::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\MultilineEntry::isReadOnly": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\MultilineEntry::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\MultilineEntry::setReadOnly": {
        "args": [
            {
                "name": "$readOnly",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\MultilineEntry::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Spin::getValue": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Spin::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Spin::setValue": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Slider::getValue": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Slider::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Slider::setValue": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Progress::getValue": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Progress::setValue": {
        "args": [
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Combo::append": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Combo::getSelected": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Combo::onSelected": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Combo::setSelected": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\EditableCombo::append": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\EditableCombo::getText": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\EditableCombo::onChange": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\EditableCombo::setText": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Radio::append": {
        "args": [
            {
                "name": "$text",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Radio::getSelected": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Radio::onSelected": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Controls\\Radio::setSelected": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Form::append": {
        "args": [
            {
                "name": "$label",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            },
            {
                "defaultValue": false,
                "name": "$stretchy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Form::delete": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Form::isPadded": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Form::setPadded": {
        "args": [
            {
                "name": "$padded",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Grid::append": {
        "args": [
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            },
            {
                "name": "$left",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$top",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$xspan",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$yspan",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$hexpand",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$halign",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$vexpand",
                "optionalDepth": 0,
                "type": "bool"
            },
            {
                "name": "$valign",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "UI\\Control"
        ]
    },
    "UI\\Controls\\Grid::isPadded": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Grid::setPadded": {
        "args": [
            {
                "name": "$padding",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Group::append": {
        "args": [
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "UI\\Control"
            }
        ],
        "returnTypes": [
            "UI\\Control"
        ]
    },
    "UI\\Controls\\Group::getTitle": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Group::hasMargin": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Group::setMargin": {
        "args": [
            {
                "name": "$margin",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Group::setTitle": {
        "args": [
            {
                "name": "$title",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Controls\\Box::append": {
        "args": [
            {
                "name": "$control",
                "optionalDepth": 0,
                "type": "Control"
            },
            {
                "defaultValue": false,
                "name": "$stretchy",
                "optionalDepth": 1,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Box::delete": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Box::getOrientation": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Controls\\Box::isPadded": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Controls\\Box::setPadded": {
        "args": [
            {
                "name": "$padded",
                "optionalDepth": 0,
                "type": "bool"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Draw\\Pen::clip": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Path"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Path"
        ]
    },
    "UI\\Draw\\Pen::fill": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Path"
            },
            {
                "name": "$with",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Brush"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Path"
        ]
    },
    "UI\\Draw\\Pen::restore": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Draw\\Pen::save": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Draw\\Pen::stroke": {
        "args": [
            {
                "name": "$path",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Path"
            },
            {
                "name": "$with",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Brush"
            },
            {
                "name": "$stroke",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Stroke"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Path"
        ]
    },
    "UI\\Draw\\Pen::transform": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Matrix"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Matrix"
        ]
    },
    "UI\\Draw\\Pen::write": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$layout",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Text\\Layout"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::addRectangle": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$size",
                "optionalDepth": 0,
                "type": "UI\\Size"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::arcTo": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sweep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$negative",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::bezierTo": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sweep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$negative",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::closeFigure": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Draw\\Path::end": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Draw\\Path::lineTo": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sweep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$negative",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::newFigure": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Path::newFigureWithArc": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$radius",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$angle",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$sweep",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$negative",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Matrix::invert": {
        "args": [],
        "returnTypes": []
    },
    "UI\\Draw\\Matrix::isInvertible": {
        "args": [],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Draw\\Matrix::multiply": {
        "args": [
            {
                "name": "$matrix",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Matrix"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Matrix"
        ]
    },
    "UI\\Draw\\Matrix::rotate": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$amount",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Matrix::scale": {
        "args": [
            {
                "name": "$center",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Matrix::skew": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            },
            {
                "name": "$amount",
                "optionalDepth": 0,
                "type": "UI\\Point"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Matrix::translate": {
        "args": [
            {
                "name": "$point",
                "optionalDepth": 0,
                "type": "UI\\Point"
            }
        ],
        "returnTypes": [
            "UI\\Point"
        ]
    },
    "UI\\Draw\\Color::getChannel": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Color::setChannel": {
        "args": [
            {
                "name": "$channel",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$value",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "UI\\Draw\\Stroke::getCap": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Stroke::getJoin": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Stroke::getMiterLimit": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Stroke::getThickness": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Stroke::setCap": {
        "args": [
            {
                "name": "$cap",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Stroke::setJoin": {
        "args": [
            {
                "name": "$join",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Stroke::setMiterLimit": {
        "args": [
            {
                "name": "$limit",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Stroke::setThickness": {
        "args": [
            {
                "name": "$thickness",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Brush::getColor": {
        "args": [],
        "returnTypes": [
            "UI\\Draw\\Color"
        ]
    },
    "UI\\Draw\\Brush::setColor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Color"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "UI\\Draw\\Brush\\Gradient::addStop": {
        "args": [
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Color"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Brush\\Gradient::delStop": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Brush\\Gradient::setStop": {
        "args": [
            {
                "name": "$index",
                "optionalDepth": 0,
                "type": "int"
            },
            {
                "name": "$position",
                "optionalDepth": 0,
                "type": "float"
            },
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Color"
            }
        ],
        "returnTypes": [
            "bool"
        ]
    },
    "UI\\Draw\\Text\\Layout::setColor": {
        "args": [
            {
                "name": "$color",
                "optionalDepth": 0,
                "type": "UI\\Draw\\Color"
            },
            {
                "defaultValue": null,
                "name": "$start",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$end",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "UI\\Draw\\Color"
        ]
    },
    "UI\\Draw\\Text\\Layout::setWidth": {
        "args": [
            {
                "name": "$width",
                "optionalDepth": 0,
                "type": "float"
            }
        ],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font::getAscent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font::getDescent": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font::getLeading": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font::getUnderlinePosition": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font::getUnderlineThickness": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font\\Descriptor::getFamily": {
        "args": [],
        "returnTypes": [
            "string"
        ]
    },
    "UI\\Draw\\Text\\Font\\Descriptor::getItalic": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Text\\Font\\Descriptor::getSize": {
        "args": [],
        "returnTypes": [
            "float"
        ]
    },
    "UI\\Draw\\Text\\Font\\Descriptor::getStretch": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Text\\Font\\Descriptor::getWeight": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "UI\\Draw\\Text\\Font\\fontFamilies": {
        "args": [],
        "returnTypes": [
            "array"
        ]
    },
    "UI\\quit": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "UI\\run": {
        "args": [
            {
                "name": "$flags",
                "optionalDepth": 1,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "Counter::getValue": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "Counter::bumpValue": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "Counter::resetValue": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "Counter::getMeta": {
        "args": [
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    },
    "Counter::getNamed": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "resource",
            "null"
        ]
    },
    "Counter::setCounterClass": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "counter_get": {
        "args": [],
        "returnTypes": [
            "int"
        ]
    },
    "counter_bump": {
        "args": [
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "counter_reset": {
        "args": [],
        "returnTypes": [
            "void"
        ]
    },
    "counter_create": {
        "args": [
            {
                "name": "$name",
                "optionalDepth": 0,
                "type": "string"
            },
            {
                "name": "$initial_value",
                "optionalDepth": 1,
                "type": "int"
            },
            {
                "name": "$flags",
                "optionalDepth": 2,
                "type": "int"
            }
        ],
        "returnTypes": [
            "resource"
        ]
    },
    "counter_get_value": {
        "args": [
            {
                "name": "$counter",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "int"
        ]
    },
    "counter_bump_value": {
        "args": [
            {
                "name": "$counter",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$offset",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "counter_reset_value": {
        "args": [
            {
                "name": "$counter",
                "optionalDepth": 0,
                "type": "resource"
            }
        ],
        "returnTypes": [
            "void"
        ]
    },
    "counter_get_meta": {
        "args": [
            {
                "name": "$counter",
                "optionalDepth": 0,
                "type": "resource"
            },
            {
                "name": "$attribute",
                "optionalDepth": 0,
                "type": "int"
            }
        ],
        "returnTypes": [
            "mixed"
        ]
    }
}